{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\ScrambleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/ScrambleGame.css';\nimport { usePlayer } from '../context/PlayerContext';\nimport NameModal from './NameModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst animals = [{\n  name: 'ზებრა',\n  image: 'ზებრა.webp'\n}, {\n  name: 'სპილო',\n  image: 'სპილო.webp'\n}, {\n  name: 'ლომი',\n  image: 'ლომი.webp'\n}, {\n  name: 'დათვი',\n  image: 'დათვი.webp'\n}, {\n  name: 'მგელი',\n  image: 'მგელო.webp'\n}, {\n  name: 'ირემი',\n  image: 'ირემი.webp'\n}, {\n  name: 'თხა',\n  image: 'თხა.webp'\n}, {\n  name: 'კურდღელი',\n  image: 'კურდღელი.webp'\n}, {\n  name: 'ფლამინგო',\n  image: 'ფლამინგო.webp'\n}, {\n  name: 'სელაპი',\n  image: 'სელაპი.webp'\n}, {\n  name: 'ციყვი',\n  image: 'ციყვი.webp'\n}, {\n  name: 'ენოტი',\n  image: 'ენოტი.webp'\n}, {\n  name: 'ზარმაცა',\n  image: 'ზარმაცა.webp'\n}, {\n  name: 'ზღარბი',\n  image: 'ზღარბი.webp'\n}, {\n  name: 'ქამელეონი',\n  image: 'ქამელეონი.webp'\n}, {\n  name: 'ოპოსუმი',\n  image: 'ოპოსუმი.webp'\n}, {\n  name: 'რვაფეხა',\n  image: 'რვაფეხა.webp'\n}, {\n  name: 'თახვი',\n  image: 'თახვი.webp'\n}, {\n  name: 'ბეგემოტი',\n  image: 'ბეგემოტი.webp'\n}, {\n  name: 'ლამა',\n  image: 'ლამა.webp'\n}, {\n  name: 'ჟირაფი',\n  image: 'ჟირაფი.webp'\n}, {\n  name: 'კენგურუ',\n  image: 'კენგურუ.webp'\n}, {\n  name: 'ბუ',\n  image: 'ბუ.webp'\n}, {\n  name: 'პანდა',\n  image: 'პანდა.webp'\n}, {\n  name: 'მელია',\n  image: 'მელია.webp'\n}, {\n  name: 'დელფინი',\n  image: 'დელფინი.webp'\n}, {\n  name: 'კოალა',\n  image: 'კოალა.webp'\n}, {\n  name: 'პინგვინი',\n  image: 'პნგვინი.webp'\n}, {\n  name: 'კიბორჩხალა',\n  image: 'კიბორჩხალა.webp'\n}, {\n  name: 'ობობა',\n  image: 'ობობა.webp'\n}, {\n  name: 'გველი',\n  image: 'გველი.webp'\n}, {\n  name: 'ხვლიკი',\n  image: 'ხვლიკი.webp'\n}, {\n  name: 'ზვიგენი',\n  image: 'ზვიგენი.webp'\n}, {\n  name: 'ფარშევანგი',\n  image: 'ფარშევანგი.webp'\n}, {\n  name: 'კოდალა',\n  image: 'კოდალა.webp'\n}, {\n  name: 'აქლემი',\n  image: 'აქლემი.webp'\n}, {\n  name: 'პეპელა',\n  image: 'პეპელა.webp'\n}, {\n  name: 'არწივი',\n  image: 'არწივი.webp'\n}];\nconst scrambleWord = word => {\n  const originalLetters = word.split('');\n  let scrambledIndices = Array.from({\n    length: word.length\n  }, (_, i) => i);\n  for (let i = 0; i < word.length; i++) {\n    let currentIndex = scrambledIndices[i];\n    if (currentIndex === i) {\n      for (let j = i + 1; j < word.length; j++) {\n        if (scrambledIndices[j] !== i) {\n          [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n          break;\n        }\n      }\n      if (scrambledIndices[i] === i) {\n        for (let j = i - 1; j >= 0; j--) {\n          if (scrambledIndices[j] !== j) {\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n            break;\n          }\n        }\n      }\n    }\n  }\n  return scrambledIndices.map((index, i) => ({\n    id: `letter-${i}`,\n    content: originalLetters[index],\n    originalIndex: index\n  }));\n};\nconst ScrambleGame = () => {\n  _s();\n  const {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updateGameProgress\n  } = usePlayer();\n  const [currentAnimal, setCurrentAnimal] = useState(() => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    return availableAnimals.length > 0 ? availableAnimals[Math.floor(Math.random() * availableAnimals.length)] : animals[Math.floor(Math.random() * animals.length)];\n  });\n  const [scrambledLetters, setScrambledLetters] = useState(() => currentAnimal ? scrambleWord(currentAnimal.name) : []);\n  const [placedLetters, setPlacedLetters] = useState(() => currentAnimal ? Array(currentAnimal.name.length).fill(null) : []);\n  const [correctPositions, setCorrectPositions] = useState([]);\n  const [wrongPosition, setWrongPosition] = useState(null);\n  const [showGame, setShowGame] = useState(false);\n  const lettersContainerRef = useRef(null);\n  const targetContainerRef = useRef(null);\n  const [draggedLetter, setDraggedLetter] = useState(null);\n  const selectRandomAnimal = () => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    if (availableAnimals.length === 0) {\n      window.alert('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      updateGameProgress('scramble', [], {});\n      const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n  const initializeAnimal = animal => {\n    setCurrentAnimal(animal);\n    setScrambledLetters(scrambleWord(animal.name));\n    setPlacedLetters(Array(animal.name.length).fill(null));\n    setCorrectPositions([]);\n  };\n  const handleDragStart = (e, letter, index) => {\n    setDraggedLetter({\n      letter,\n      index\n    });\n    e.target.classList.add('dragging');\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, targetIndex) => {\n    e.preventDefault();\n    if (!draggedLetter) return;\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\n      setWrongPosition(targetIndex);\n      setTimeout(() => {\n        setWrongPosition(null);\n      }, 500);\n      return;\n    }\n    const newPlacedLetters = [...placedLetters];\n    const newScrambledLetters = [...scrambledLetters];\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\n    newScrambledLetters.splice(draggedLetter.index, 1);\n    setPlacedLetters(newPlacedLetters);\n    setScrambledLetters(newScrambledLetters);\n    const newCorrectPositions = [];\n    newPlacedLetters.forEach((letter, index) => {\n      if (letter && letter.content === currentAnimal.name[index]) {\n        newCorrectPositions.push(index);\n      }\n    });\n    setCorrectPositions(newCorrectPositions);\n    if (newCorrectPositions.length === currentAnimal.name.length) {\n      const newCompletedTasks = [...gameProgress.completedScrambleTasks, currentAnimal.name];\n      updateGameProgress('scramble', newCompletedTasks, {\n        ...gameProgress.scrambleScores,\n        [currentAnimal.name]: 3\n      });\n      if (newCompletedTasks.length === animals.length) {\n        window.alert('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n        updateGameProgress('scramble', [], {});\n        const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n        initializeAnimal(randomAnimal);\n      } else {\n        const availableAnimals = animals.filter(animal => !newCompletedTasks.includes(animal.name));\n        const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n        const randomAnimal = availableAnimals[randomIndex];\n        initializeAnimal(randomAnimal);\n      }\n    }\n  };\n  const startNewGame = () => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    if (availableAnimals.length === 0) {\n      window.alert('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n  const handleReset = () => {\n    window.alert('თამაში იწყება თავიდან! 🎮');\n    updateGameProgress('scramble', [], {});\n    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n  useEffect(() => {\n    const initializeGame = () => {\n      const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n      if (availableAnimals.length === 0) {\n        setShowGame(false);\n        return;\n      }\n      const randomAnimal = availableAnimals[Math.floor(Math.random() * availableAnimals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n    };\n    initializeGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scramble-game\",\n    children: [showNameModal && /*#__PURE__*/_jsxDEV(NameModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [\"\\u10E8\\u10D4\\u10E1\\u10E0\\u10E3\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\\u10D0: \", gameProgress.completedScrambleTasks.length, \" / \", animals.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"game-title\",\n      children: \"\\u10D3\\u10D0\\u10D0\\u10DA\\u10D0\\u10D2\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0\\u10D0\\u10D3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-instructions\",\n      children: \"\\u10D2\\u10D0\\u10D3\\u10DB\\u10DD\\u10D8\\u10E2\\u10D0\\u10DC\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10D3\\u10D0 \\u10E9\\u10D0\\u10E1\\u10D5\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0 \\u10D0\\u10D3\\u10D2\\u10D8\\u10DA\\u10D0\\u10E1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), currentAnimal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/photos/${currentAnimal.image}`,\n        alt: currentAnimal.name,\n        className: \"animal-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: targetContainerRef,\n        className: \"target-container\",\n        children: placedLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \n                          ${letter ? 'filled' : ''} \n                          ${wrongPosition === index ? 'wrong' : ''}`,\n          onDragOver: handleDragOver,\n          onDrop: e => handleDrop(e, index),\n          children: letter && letter.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: lettersContainerRef,\n        className: \"letters-container\",\n        children: scrambledLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-id\": letter.id,\n          className: \"letter\",\n          draggable: true,\n          onDragStart: e => handleDragStart(e, letter, index),\n          children: letter.content\n        }, letter.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrambleGame, \"L6t2c4wUHlGn2W1Q2fN3RzUAgo8=\", false, function () {\n  return [usePlayer];\n});\n_c = ScrambleGame;\nexport default ScrambleGame;\nvar _c;\n$RefreshReg$(_c, \"ScrambleGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","usePlayer","NameModal","jsxDEV","_jsxDEV","Fragment","_Fragment","animals","name","image","scrambleWord","word","originalLetters","split","scrambledIndices","Array","from","length","_","i","currentIndex","j","map","index","id","content","originalIndex","ScrambleGame","_s","playerName","showNameModal","gameProgress","updateGameProgress","currentAnimal","setCurrentAnimal","availableAnimals","filter","animal","completedScrambleTasks","includes","Math","floor","random","scrambledLetters","setScrambledLetters","placedLetters","setPlacedLetters","fill","correctPositions","setCorrectPositions","wrongPosition","setWrongPosition","showGame","setShowGame","lettersContainerRef","targetContainerRef","draggedLetter","setDraggedLetter","selectRandomAnimal","window","alert","randomAnimal","initializeAnimal","randomIndex","handleDragStart","e","letter","target","classList","add","handleDragOver","preventDefault","handleDrop","targetIndex","setTimeout","newPlacedLetters","newScrambledLetters","splice","newCorrectPositions","forEach","push","newCompletedTasks","scrambleScores","startNewGame","handleReset","initializeGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","ref","onDragOver","onDrop","draggable","onDragStart","_c","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/ScrambleGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/ScrambleGame.css';\nimport { usePlayer } from '../context/PlayerContext';\nimport NameModal from './NameModal';\n\nconst animals = [\n  { name: 'ზებრა', image: 'ზებრა.webp' },\n  { name: 'სპილო', image: 'სპილო.webp' },\n  { name: 'ლომი', image: 'ლომი.webp' },\n  { name: 'დათვი', image: 'დათვი.webp' },\n  { name: 'მგელი', image: 'მგელო.webp' },\n  { name: 'ირემი', image: 'ირემი.webp' },\n  { name: 'თხა', image: 'თხა.webp' },\n  { name: 'კურდღელი', image: 'კურდღელი.webp' },\n  { name: 'ფლამინგო', image: 'ფლამინგო.webp' },\n  { name: 'სელაპი', image: 'სელაპი.webp' },\n  { name: 'ციყვი', image: 'ციყვი.webp' },\n  { name: 'ენოტი', image: 'ენოტი.webp' },\n  { name: 'ზარმაცა', image: 'ზარმაცა.webp' },\n  { name: 'ზღარბი', image: 'ზღარბი.webp' },\n  { name: 'ქამელეონი', image: 'ქამელეონი.webp' },\n  { name: 'ოპოსუმი', image: 'ოპოსუმი.webp' },\n  { name: 'რვაფეხა', image: 'რვაფეხა.webp' },\n  { name: 'თახვი', image: 'თახვი.webp' },\n  { name: 'ბეგემოტი', image: 'ბეგემოტი.webp' },\n  { name: 'ლამა', image: 'ლამა.webp' },\n  { name: 'ჟირაფი', image: 'ჟირაფი.webp' },\n  { name: 'კენგურუ', image: 'კენგურუ.webp' },\n  { name: 'ბუ', image: 'ბუ.webp' },\n  { name: 'პანდა', image: 'პანდა.webp' },\n  { name: 'მელია', image: 'მელია.webp' },\n  { name: 'დელფინი', image: 'დელფინი.webp' },\n  { name: 'კოალა', image: 'კოალა.webp' },\n  { name: 'პინგვინი', image: 'პნგვინი.webp' },\n  { name: 'კიბორჩხალა', image: 'კიბორჩხალა.webp' },\n  { name: 'ობობა', image: 'ობობა.webp' },\n  { name: 'გველი', image: 'გველი.webp' },\n  { name: 'ხვლიკი', image: 'ხვლიკი.webp' },\n  { name: 'ზვიგენი', image: 'ზვიგენი.webp' },\n  { name: 'ფარშევანგი', image: 'ფარშევანგი.webp' },\n  { name: 'კოდალა', image: 'კოდალა.webp' },\n  { name: 'აქლემი', image: 'აქლემი.webp' },\n  { name: 'პეპელა', image: 'პეპელა.webp' },\n  { name: 'არწივი', image: 'არწივი.webp' }\n];\n\nconst scrambleWord = (word) => {\n  const originalLetters = word.split('');\n  let scrambledIndices = Array.from({ length: word.length }, (_, i) => i);\n  \n  for (let i = 0; i < word.length; i++) {\n    let currentIndex = scrambledIndices[i];\n    if (currentIndex === i) {\n      for (let j = i + 1; j < word.length; j++) {\n        if (scrambledIndices[j] !== i) {\n          [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n          break;\n        }\n      }\n      if (scrambledIndices[i] === i) {\n        for (let j = i - 1; j >= 0; j--) {\n          if (scrambledIndices[j] !== j) {\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n            break;\n          }\n        }\n      }\n    }\n  }\n  \n  return scrambledIndices.map((index, i) => ({\n    id: `letter-${i}`,\n    content: originalLetters[index],\n    originalIndex: index\n  }));\n};\n\nconst ScrambleGame = () => {\n  const { playerName, showNameModal, gameProgress, updateGameProgress } = usePlayer();\n  const [currentAnimal, setCurrentAnimal] = useState(() => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    return availableAnimals.length > 0 \n      ? availableAnimals[Math.floor(Math.random() * availableAnimals.length)]\n      : animals[Math.floor(Math.random() * animals.length)];\n  });\n  const [scrambledLetters, setScrambledLetters] = useState(() => \n    currentAnimal ? scrambleWord(currentAnimal.name) : []\n  );\n  const [placedLetters, setPlacedLetters] = useState(() => \n    currentAnimal ? Array(currentAnimal.name.length).fill(null) : []\n  );\n  const [correctPositions, setCorrectPositions] = useState([]);\n  const [wrongPosition, setWrongPosition] = useState(null);\n  const [showGame, setShowGame] = useState(false);\n  const lettersContainerRef = useRef(null);\n  const targetContainerRef = useRef(null);\n  const [draggedLetter, setDraggedLetter] = useState(null);\n\n  const selectRandomAnimal = () => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    \n    if (availableAnimals.length === 0) {\n      window.alert('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      updateGameProgress('scramble', [], {});\n      const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n      return;\n    }\n    \n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n\n  const initializeAnimal = (animal) => {\n    setCurrentAnimal(animal);\n    setScrambledLetters(scrambleWord(animal.name));\n    setPlacedLetters(Array(animal.name.length).fill(null));\n    setCorrectPositions([]);\n  };\n\n  const handleDragStart = (e, letter, index) => {\n    setDraggedLetter({ letter, index });\n    e.target.classList.add('dragging');\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e, targetIndex) => {\n    e.preventDefault();\n    if (!draggedLetter) return;\n\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\n      setWrongPosition(targetIndex);\n      setTimeout(() => {\n        setWrongPosition(null);\n      }, 500);\n      return;\n    }\n\n    const newPlacedLetters = [...placedLetters];\n    const newScrambledLetters = [...scrambledLetters];\n\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\n    newScrambledLetters.splice(draggedLetter.index, 1);\n\n    setPlacedLetters(newPlacedLetters);\n    setScrambledLetters(newScrambledLetters);\n\n    const newCorrectPositions = [];\n    newPlacedLetters.forEach((letter, index) => {\n      if (letter && letter.content === currentAnimal.name[index]) {\n        newCorrectPositions.push(index);\n      }\n    });\n\n    setCorrectPositions(newCorrectPositions);\n\n    if (newCorrectPositions.length === currentAnimal.name.length) {\n      const newCompletedTasks = [...gameProgress.completedScrambleTasks, currentAnimal.name];\n      updateGameProgress('scramble', newCompletedTasks, {\n        ...gameProgress.scrambleScores,\n        [currentAnimal.name]: 3\n      });\n      \n      if (newCompletedTasks.length === animals.length) {\n        window.alert('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n        updateGameProgress('scramble', [], {});\n        const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n        initializeAnimal(randomAnimal);\n      } else {\n        const availableAnimals = animals.filter(animal => !newCompletedTasks.includes(animal.name));\n        const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n        const randomAnimal = availableAnimals[randomIndex];\n        initializeAnimal(randomAnimal);\n      }\n    }\n  };\n\n  const startNewGame = () => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    \n    if (availableAnimals.length === 0) {\n      window.alert('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      return;\n    }\n    \n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n\n  const handleReset = () => {\n    window.alert('თამაში იწყება თავიდან! 🎮');\n    updateGameProgress('scramble', [], {});\n    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n\n  useEffect(() => {\n    const initializeGame = () => {\n      const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n      if (availableAnimals.length === 0) {\n        setShowGame(false);\n        return;\n      }\n      \n      const randomAnimal = availableAnimals[Math.floor(Math.random() * availableAnimals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n    };\n\n    initializeGame();\n  }, []);\n\n  return (\n    <div className=\"scramble-game\">\n      {showNameModal && <NameModal />}\n      <div className=\"progress-container\">\n        <div className=\"progress-text\">\n          შესრულებულია: {gameProgress.completedScrambleTasks.length} / {animals.length}\n        </div>\n      </div>\n      <h2 className=\"game-title\">დაალაგე ასოები სწორად</h2>\n      <p className=\"game-instructions\">\n        გადმოიტანე ასოები და ჩასვი სწორ ადგილას\n      </p>\n      \n      {currentAnimal && (\n        <>\n          <img \n            src={`${process.env.PUBLIC_URL}/photos/${currentAnimal.image}`} \n            alt={currentAnimal.name}\n            className=\"animal-image\"\n          />\n          \n          <div \n            ref={targetContainerRef}\n            className=\"target-container\"\n          >\n            {placedLetters.map((letter, index) => (\n              <div\n                key={index}\n                className={`letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \n                          ${letter ? 'filled' : ''} \n                          ${wrongPosition === index ? 'wrong' : ''}`}\n                onDragOver={handleDragOver}\n                onDrop={(e) => handleDrop(e, index)}\n              >\n                {letter && letter.content}\n              </div>\n            ))}\n          </div>\n\n          <div \n            ref={lettersContainerRef}\n            className=\"letters-container\"\n          >\n            {scrambledLetters.map((letter, index) => (\n              <div\n                key={letter.id}\n                data-id={letter.id}\n                className=\"letter\"\n                draggable={true}\n                onDragStart={(e) => handleDragStart(e, letter, index)}\n              >\n                {letter.content}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ScrambleGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}