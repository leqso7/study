{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\ScrambleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/ScrambleGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animals = [{\n  name: 'ზებრა',\n  image: 'ზებრა.webp'\n}, {\n  name: 'სპილო',\n  image: 'სპილო.webp'\n}, {\n  name: 'ლომი',\n  image: 'ლომი.webp'\n}, {\n  name: 'დათვი',\n  image: 'დათვი.webp'\n}, {\n  name: 'მგელი',\n  image: 'მგელო.webp'\n}, {\n  name: 'ირემი',\n  image: 'ირემი.webp'\n}, {\n  name: 'თხა',\n  image: 'თხა.webp'\n}, {\n  name: 'კურდღელი',\n  image: 'კურდღელი.webp'\n}, {\n  name: 'ფლამინგო',\n  image: 'ფლამინგო.webp'\n}, {\n  name: 'სელაპი',\n  image: 'სელაპი.webp'\n}, {\n  name: 'ციყვი',\n  image: 'ციყვი.webp'\n}, {\n  name: 'ენოტი',\n  image: 'ენოტი.webp'\n}, {\n  name: 'ზარმაცა',\n  image: 'ზარმაცა.webp'\n}, {\n  name: 'ზღარბი',\n  image: 'ზღარბი.webp'\n}, {\n  name: 'ქამელეონი',\n  image: 'ქამელეონი.webp'\n}, {\n  name: 'ოპოსუმი',\n  image: 'ოპოსუმი.webp'\n}, {\n  name: 'რვაფეხა',\n  image: 'რვაფეხა.webp'\n}, {\n  name: 'თახვი',\n  image: 'თახვი.webp'\n}, {\n  name: 'ბეგემოტი',\n  image: 'ბეგემოტი.webp'\n}, {\n  name: 'ლამა',\n  image: 'ლამა.webp'\n}, {\n  name: 'ჟირაფი',\n  image: 'ჟირაფი.webp'\n}, {\n  name: 'კენგურუ',\n  image: 'კენგურუ.webp'\n}, {\n  name: 'ბუ',\n  image: 'ბუ.webp'\n}, {\n  name: 'პანდა',\n  image: 'პანდა.webp'\n}, {\n  name: 'მელია',\n  image: 'მელია.webp'\n}, {\n  name: 'დელფინი',\n  image: 'დელფინი.webp'\n}, {\n  name: 'კოალა',\n  image: 'კოალა.webp'\n}, {\n  name: 'პინგვინი',\n  image: 'პნგვინი.webp'\n}, {\n  name: 'კიბორჩხალა',\n  image: 'კიბორჩხალა.webp'\n}, {\n  name: 'ობობა',\n  image: 'ობობა.webp'\n}, {\n  name: 'გველი',\n  image: 'გველი.webp'\n}, {\n  name: 'ხვლიკი',\n  image: 'ხვლიკი.webp'\n}, {\n  name: 'ზვიგენი',\n  image: 'ზვიგენი.webp'\n}, {\n  name: 'ფარშევანგი',\n  image: 'ფარშევანგი.webp'\n}, {\n  name: 'კოდალა',\n  image: 'კოდალა.webp'\n}, {\n  name: 'აქლემი',\n  image: 'აქლემი.webp'\n}, {\n  name: 'პეპელა',\n  image: 'პეპელა.webp'\n}, {\n  name: 'არწივი',\n  image: 'არწივი.webp'\n}];\nconst ScrambleGame = () => {\n  _s();\n  const [currentAnimal, setCurrentAnimal] = useState(null);\n  const [scrambledLetters, setScrambledLetters] = useState([]);\n  const [placedLetters, setPlacedLetters] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState([]);\n  const [wrongPosition, setWrongPosition] = useState(null);\n  const [completedAnimals, setCompletedAnimals] = useState(() => {\n    const saved = localStorage.getItem('completedAnimals');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const lettersContainerRef = useRef(null);\n  const targetContainerRef = useRef(null);\n  const [draggedLetter, setDraggedLetter] = useState(null);\n  useEffect(() => {\n    if (completedAnimals.length > 0) {\n      localStorage.setItem('completedAnimals', JSON.stringify(completedAnimals));\n    }\n  }, [completedAnimals]);\n  const checkAndResetProgress = () => {\n    const saved = localStorage.getItem('completedAnimals');\n    const savedAnimals = saved ? JSON.parse(saved) : [];\n    if (savedAnimals.length === animals.length) {\n      const shouldReset = window.confirm('თქვენ უკვე გაქვთ ყველა ამოცანა შესრულებული! გსურთ თავიდან დაწყება?');\n      if (shouldReset) {\n        localStorage.removeItem('completedAnimals');\n        setCompletedAnimals([]);\n        return true;\n      }\n      return false;\n    }\n    if (savedAnimals.length > 0) {\n      setCompletedAnimals(savedAnimals);\n    }\n    return true;\n  };\n  const scrambleWord = word => {\n    const originalLetters = word.split('');\n    let scrambledIndices = Array.from({\n      length: word.length\n    }, (_, i) => i);\n\n    // შევქმნათ ისეთი მასივი სადაც არცერთი ინდექსი არ ემთხვევა თავის ორიგინალ პოზიციას\n    for (let i = 0; i < word.length; i++) {\n      let currentIndex = scrambledIndices[i];\n      if (currentIndex === i) {\n        // თუ ინდექსი ემთხვევა თავის პოზიციას, ვცვლით სხვა პოზიციასთან\n        for (let j = i + 1; j < word.length; j++) {\n          if (scrambledIndices[j] !== i) {\n            // გავცვალოთ პოზიციები\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n            break;\n          }\n        }\n        // თუ ვერ ვიპოვეთ შესაფერისი პოზიცია წინ, ვეძებთ უკან\n        if (scrambledIndices[i] === i) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (scrambledIndices[j] !== j) {\n              [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    // ვქმნით საბოლოო არეულ მასივს\n    return scrambledIndices.map((index, i) => ({\n      id: `letter-${i}`,\n      content: originalLetters[index],\n      originalIndex: index\n    }));\n  };\n  const selectRandomAnimal = () => {\n    const availableAnimals = animals.filter(animal => !completedAnimals.includes(animal.name));\n    if (availableAnimals.length === 0) {\n      const shouldReset = window.confirm('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! გსურთ თავიდან დაწყება?');\n      if (shouldReset) {\n        localStorage.removeItem('completedAnimals');\n        setCompletedAnimals([]);\n        const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n        initializeAnimal(randomAnimal);\n      }\n      return;\n    }\n\n    // ვირჩევთ შემთხვევით ამოცანას დარჩენილებიდან\n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n\n    // ვამოწმებთ არის თუ არა ეს ცხოველი უკვე მიმდინარე\n    if (currentAnimal && randomAnimal.name === currentAnimal.name && availableAnimals.length > 1) {\n      // თუ არის სხვა ხელმისაწვდომი ცხოველები, ვირჩევთ სხვას\n      const newIndex = (randomIndex + 1) % availableAnimals.length;\n      initializeAnimal(availableAnimals[newIndex]);\n    } else {\n      initializeAnimal(randomAnimal);\n    }\n  };\n  const initializeAnimal = animal => {\n    setCurrentAnimal(animal);\n    setScrambledLetters(scrambleWord(animal.name));\n    setPlacedLetters(Array(animal.name.length).fill(null));\n    setCorrectPositions([]);\n  };\n  const handleDragStart = (e, letter, index) => {\n    setDraggedLetter({\n      letter,\n      index\n    });\n    e.target.classList.add('dragging');\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, targetIndex) => {\n    e.preventDefault();\n    if (!draggedLetter) return;\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\n      setWrongPosition(targetIndex);\n      setTimeout(() => {\n        setWrongPosition(null);\n      }, 500);\n      return;\n    }\n    const newPlacedLetters = [...placedLetters];\n    const newScrambledLetters = [...scrambledLetters];\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\n    newScrambledLetters.splice(draggedLetter.index, 1);\n    setPlacedLetters(newPlacedLetters);\n    setScrambledLetters(newScrambledLetters);\n    const newCorrectPositions = [];\n    newPlacedLetters.forEach((letter, index) => {\n      if (letter && letter.content === currentAnimal.name[index]) {\n        newCorrectPositions.push(index);\n      }\n    });\n    setCorrectPositions(newCorrectPositions);\n    if (newCorrectPositions.length === currentAnimal.name.length) {\n      if (!completedAnimals.includes(currentAnimal.name)) {\n        setCompletedAnimals([...completedAnimals, currentAnimal.name]);\n      }\n      setTimeout(() => {\n        selectRandomAnimal();\n      }, 1500);\n    }\n  };\n  useEffect(() => {\n    const shouldContinue = checkAndResetProgress();\n    if (shouldContinue) {\n      selectRandomAnimal();\n    }\n  }, []);\n  if (!currentAnimal) return null;\n  const remainingCount = animals.length - completedAnimals.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scramble-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"game-title\",\n      children: \"\\u10D3\\u10D0\\u10D0\\u10DA\\u10D0\\u10D2\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0\\u10D0\\u10D3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-instructions\",\n      children: \"\\u10D2\\u10D0\\u10D3\\u10DB\\u10DD\\u10D8\\u10E2\\u10D0\\u10DC\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10D3\\u10D0 \\u10E9\\u10D0\\u10E1\\u10D5\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0 \\u10D0\\u10D3\\u10D2\\u10D8\\u10DA\\u10D0\\u10E1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"progress-text\",\n      children: [\"\\u10D3\\u10D0\\u10E0\\u10E9\\u10D4\\u10DC\\u10D8\\u10DA\\u10D8 \\u10D0\\u10DB\\u10DD\\u10EA\\u10D0\\u10DC\\u10D4\\u10D1\\u10D8: \", remainingCount, \" / \", animals.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/${currentAnimal.image}`,\n      alt: currentAnimal.name,\n      className: \"animal-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetContainerRef,\n      className: \"target-container\",\n      children: placedLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \n                      ${letter ? 'filled' : ''} \n                      ${wrongPosition === index ? 'wrong' : ''}`,\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, index),\n        children: letter && letter.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lettersContainerRef,\n      className: \"letters-container\",\n      children: scrambledLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-id\": letter.id,\n        className: \"letter\",\n        draggable: true,\n        onDragStart: e => handleDragStart(e, letter, index),\n        children: letter.content\n      }, letter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: selectRandomAnimal,\n      className: \"scramble-button\",\n      children: \"\\u10E8\\u10D4\\u10DB\\u10D3\\u10D4\\u10D2\\u10D8 \\u10D0\\u10DB\\u10DD\\u10EA\\u10D0\\u10DC\\u10D0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrambleGame, \"G6IVyI4QJP2Bi52EMlzpE2p6QkQ=\");\n_c = ScrambleGame;\nexport default ScrambleGame;\nvar _c;\n$RefreshReg$(_c, \"ScrambleGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","animals","name","image","ScrambleGame","_s","currentAnimal","setCurrentAnimal","scrambledLetters","setScrambledLetters","placedLetters","setPlacedLetters","correctPositions","setCorrectPositions","wrongPosition","setWrongPosition","completedAnimals","setCompletedAnimals","saved","localStorage","getItem","JSON","parse","lettersContainerRef","targetContainerRef","draggedLetter","setDraggedLetter","length","setItem","stringify","checkAndResetProgress","savedAnimals","shouldReset","window","confirm","removeItem","scrambleWord","word","originalLetters","split","scrambledIndices","Array","from","_","i","currentIndex","j","map","index","id","content","originalIndex","selectRandomAnimal","availableAnimals","filter","animal","includes","randomAnimal","Math","floor","random","initializeAnimal","randomIndex","newIndex","fill","handleDragStart","e","letter","target","classList","add","handleDragOver","preventDefault","handleDrop","targetIndex","setTimeout","newPlacedLetters","newScrambledLetters","splice","newCorrectPositions","forEach","push","shouldContinue","remainingCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","ref","onDragOver","onDrop","draggable","onDragStart","onClick","_c","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/ScrambleGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/ScrambleGame.css';\r\n\r\nconst animals = [\r\n  { name: 'ზებრა', image: 'ზებრა.webp' },\r\n  { name: 'სპილო', image: 'სპილო.webp' },\r\n  { name: 'ლომი', image: 'ლომი.webp' },\r\n  { name: 'დათვი', image: 'დათვი.webp' },\r\n  { name: 'მგელი', image: 'მგელო.webp' },\r\n  { name: 'ირემი', image: 'ირემი.webp' },\r\n  { name: 'თხა', image: 'თხა.webp' },\r\n  { name: 'კურდღელი', image: 'კურდღელი.webp' },\r\n  { name: 'ფლამინგო', image: 'ფლამინგო.webp' },\r\n  { name: 'სელაპი', image: 'სელაპი.webp' },\r\n  { name: 'ციყვი', image: 'ციყვი.webp' },\r\n  { name: 'ენოტი', image: 'ენოტი.webp' },\r\n  { name: 'ზარმაცა', image: 'ზარმაცა.webp' },\r\n  { name: 'ზღარბი', image: 'ზღარბი.webp' },\r\n  { name: 'ქამელეონი', image: 'ქამელეონი.webp' },\r\n  { name: 'ოპოსუმი', image: 'ოპოსუმი.webp' },\r\n  { name: 'რვაფეხა', image: 'რვაფეხა.webp' },\r\n  { name: 'თახვი', image: 'თახვი.webp' },\r\n  { name: 'ბეგემოტი', image: 'ბეგემოტი.webp' },\r\n  { name: 'ლამა', image: 'ლამა.webp' },\r\n  { name: 'ჟირაფი', image: 'ჟირაფი.webp' },\r\n  { name: 'კენგურუ', image: 'კენგურუ.webp' },\r\n  { name: 'ბუ', image: 'ბუ.webp' },\r\n  { name: 'პანდა', image: 'პანდა.webp' },\r\n  { name: 'მელია', image: 'მელია.webp' },\r\n  { name: 'დელფინი', image: 'დელფინი.webp' },\r\n  { name: 'კოალა', image: 'კოალა.webp' },\r\n  { name: 'პინგვინი', image: 'პნგვინი.webp' },\r\n  { name: 'კიბორჩხალა', image: 'კიბორჩხალა.webp' },\r\n  { name: 'ობობა', image: 'ობობა.webp' },\r\n  { name: 'გველი', image: 'გველი.webp' },\r\n  { name: 'ხვლიკი', image: 'ხვლიკი.webp' },\r\n  { name: 'ზვიგენი', image: 'ზვიგენი.webp' },\r\n  { name: 'ფარშევანგი', image: 'ფარშევანგი.webp' },\r\n  { name: 'კოდალა', image: 'კოდალა.webp' },\r\n  { name: 'აქლემი', image: 'აქლემი.webp' },\r\n  { name: 'პეპელა', image: 'პეპელა.webp' },\r\n  { name: 'არწივი', image: 'არწივი.webp' }\r\n];\r\n\r\nconst ScrambleGame = () => {\r\n  const [currentAnimal, setCurrentAnimal] = useState(null);\r\n  const [scrambledLetters, setScrambledLetters] = useState([]);\r\n  const [placedLetters, setPlacedLetters] = useState([]);\r\n  const [correctPositions, setCorrectPositions] = useState([]);\r\n  const [wrongPosition, setWrongPosition] = useState(null);\r\n  const [completedAnimals, setCompletedAnimals] = useState(() => {\r\n    const saved = localStorage.getItem('completedAnimals');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const lettersContainerRef = useRef(null);\r\n  const targetContainerRef = useRef(null);\r\n  const [draggedLetter, setDraggedLetter] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (completedAnimals.length > 0) {\r\n      localStorage.setItem('completedAnimals', JSON.stringify(completedAnimals));\r\n    }\r\n  }, [completedAnimals]);\r\n\r\n  const checkAndResetProgress = () => {\r\n    const saved = localStorage.getItem('completedAnimals');\r\n    const savedAnimals = saved ? JSON.parse(saved) : [];\r\n    \r\n    if (savedAnimals.length === animals.length) {\r\n      const shouldReset = window.confirm('თქვენ უკვე გაქვთ ყველა ამოცანა შესრულებული! გსურთ თავიდან დაწყება?');\r\n      if (shouldReset) {\r\n        localStorage.removeItem('completedAnimals');\r\n        setCompletedAnimals([]);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    \r\n    if (savedAnimals.length > 0) {\r\n      setCompletedAnimals(savedAnimals);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const scrambleWord = (word) => {\r\n    const originalLetters = word.split('');\r\n    let scrambledIndices = Array.from({ length: word.length }, (_, i) => i);\r\n    \r\n    // შევქმნათ ისეთი მასივი სადაც არცერთი ინდექსი არ ემთხვევა თავის ორიგინალ პოზიციას\r\n    for (let i = 0; i < word.length; i++) {\r\n      let currentIndex = scrambledIndices[i];\r\n      if (currentIndex === i) {\r\n        // თუ ინდექსი ემთხვევა თავის პოზიციას, ვცვლით სხვა პოზიციასთან\r\n        for (let j = i + 1; j < word.length; j++) {\r\n          if (scrambledIndices[j] !== i) {\r\n            // გავცვალოთ პოზიციები\r\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\r\n            break;\r\n          }\r\n        }\r\n        // თუ ვერ ვიპოვეთ შესაფერისი პოზიცია წინ, ვეძებთ უკან\r\n        if (scrambledIndices[i] === i) {\r\n          for (let j = i - 1; j >= 0; j--) {\r\n            if (scrambledIndices[j] !== j) {\r\n              [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // ვქმნით საბოლოო არეულ მასივს\r\n    return scrambledIndices.map((index, i) => ({\r\n      id: `letter-${i}`,\r\n      content: originalLetters[index],\r\n      originalIndex: index\r\n    }));\r\n  };\r\n\r\n  const selectRandomAnimal = () => {\r\n    const availableAnimals = animals.filter(animal => !completedAnimals.includes(animal.name));\r\n    \r\n    if (availableAnimals.length === 0) {\r\n      const shouldReset = window.confirm('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! გსურთ თავიდან დაწყება?');\r\n      if (shouldReset) {\r\n        localStorage.removeItem('completedAnimals');\r\n        setCompletedAnimals([]);\r\n        const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\r\n        initializeAnimal(randomAnimal);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // ვირჩევთ შემთხვევით ამოცანას დარჩენილებიდან\r\n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\r\n    const randomAnimal = availableAnimals[randomIndex];\r\n    \r\n    // ვამოწმებთ არის თუ არა ეს ცხოველი უკვე მიმდინარე\r\n    if (currentAnimal && randomAnimal.name === currentAnimal.name && availableAnimals.length > 1) {\r\n      // თუ არის სხვა ხელმისაწვდომი ცხოველები, ვირჩევთ სხვას\r\n      const newIndex = (randomIndex + 1) % availableAnimals.length;\r\n      initializeAnimal(availableAnimals[newIndex]);\r\n    } else {\r\n      initializeAnimal(randomAnimal);\r\n    }\r\n  };\r\n\r\n  const initializeAnimal = (animal) => {\r\n    setCurrentAnimal(animal);\r\n    setScrambledLetters(scrambleWord(animal.name));\r\n    setPlacedLetters(Array(animal.name.length).fill(null));\r\n    setCorrectPositions([]);\r\n  };\r\n\r\n  const handleDragStart = (e, letter, index) => {\r\n    setDraggedLetter({ letter, index });\r\n    e.target.classList.add('dragging');\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (e, targetIndex) => {\r\n    e.preventDefault();\r\n    if (!draggedLetter) return;\r\n\r\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\r\n      setWrongPosition(targetIndex);\r\n      setTimeout(() => {\r\n        setWrongPosition(null);\r\n      }, 500);\r\n      return;\r\n    }\r\n\r\n    const newPlacedLetters = [...placedLetters];\r\n    const newScrambledLetters = [...scrambledLetters];\r\n\r\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\r\n    newScrambledLetters.splice(draggedLetter.index, 1);\r\n\r\n    setPlacedLetters(newPlacedLetters);\r\n    setScrambledLetters(newScrambledLetters);\r\n\r\n    const newCorrectPositions = [];\r\n    newPlacedLetters.forEach((letter, index) => {\r\n      if (letter && letter.content === currentAnimal.name[index]) {\r\n        newCorrectPositions.push(index);\r\n      }\r\n    });\r\n\r\n    setCorrectPositions(newCorrectPositions);\r\n\r\n    if (newCorrectPositions.length === currentAnimal.name.length) {\r\n      if (!completedAnimals.includes(currentAnimal.name)) {\r\n        setCompletedAnimals([...completedAnimals, currentAnimal.name]);\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        selectRandomAnimal();\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const shouldContinue = checkAndResetProgress();\r\n    if (shouldContinue) {\r\n      selectRandomAnimal();\r\n    }\r\n  }, []);\r\n\r\n  if (!currentAnimal) return null;\r\n\r\n  const remainingCount = animals.length - completedAnimals.length;\r\n\r\n  return (\r\n    <div className=\"scramble-game\">\r\n      <h2 className=\"game-title\">დაალაგე ასოები სწორად</h2>\r\n      <p className=\"game-instructions\">\r\n        გადმოიტანე ასოები და ჩასვი სწორ ადგილას\r\n      </p>\r\n      <p className=\"progress-text\">\r\n        დარჩენილი ამოცანები: {remainingCount} / {animals.length}\r\n      </p>\r\n      \r\n      <img \r\n        src={`${process.env.PUBLIC_URL}/photos/${currentAnimal.image}`} \r\n        alt={currentAnimal.name}\r\n        className=\"animal-image\"\r\n      />\r\n      \r\n      <div \r\n        ref={targetContainerRef}\r\n        className=\"target-container\"\r\n      >\r\n        {placedLetters.map((letter, index) => (\r\n          <div\r\n            key={index}\r\n            className={`letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \r\n                      ${letter ? 'filled' : ''} \r\n                      ${wrongPosition === index ? 'wrong' : ''}`}\r\n            onDragOver={handleDragOver}\r\n            onDrop={(e) => handleDrop(e, index)}\r\n          >\r\n            {letter && letter.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div \r\n        ref={lettersContainerRef}\r\n        className=\"letters-container\"\r\n      >\r\n        {scrambledLetters.map((letter, index) => (\r\n          <div\r\n            key={letter.id}\r\n            data-id={letter.id}\r\n            className=\"letter\"\r\n            draggable={true}\r\n            onDragStart={(e) => handleDragStart(e, letter, index)}\r\n          >\r\n            {letter.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <button onClick={selectRandomAnimal} className=\"scramble-button\">\r\n        შემდეგი ამოცანა\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrambleGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}