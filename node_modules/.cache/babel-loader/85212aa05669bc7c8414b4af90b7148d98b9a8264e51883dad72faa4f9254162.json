{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [gameProgress, setGameProgress] = useState({\n    completedTasks: [],\n    taskScores: {},\n    lastPlayedDate: null\n  });\n  useEffect(() => {\n    const savedName = localStorage.getItem('playerName');\n    const savedProgress = localStorage.getItem('gameProgress');\n    if (savedName) {\n      setPlayerName(savedName);\n      setShowNameModal(false);\n    }\n    if (savedProgress) {\n      setGameProgress(JSON.parse(savedProgress));\n    }\n  }, []);\n  const updatePlayerName = name => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n  const updateGameProgress = (taskId, score) => {\n    setGameProgress(prev => {\n      const newProgress = {\n        ...prev,\n        completedTasks: [...new Set([...prev.completedTasks, taskId])],\n        taskScores: {\n          ...prev.taskScores,\n          [taskId]: Math.max(score, prev.taskScores[taskId] || 0)\n        },\n        lastPlayedDate: new Date().toISOString()\n      };\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n  const resetProgress = () => {\n    const newProgress = {\n      completedTasks: [],\n      taskScores: {},\n      lastPlayedDate: null\n    };\n    setGameProgress(newProgress);\n    localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      playerName,\n      showNameModal,\n      setShowNameModal,\n      updatePlayerName,\n      gameProgress,\n      updateGameProgress,\n      resetProgress\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"UHKKx9i1o061QHaia4Xb/8nbjTw=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","PlayerContext","PlayerProvider","children","_s","playerName","setPlayerName","showNameModal","setShowNameModal","gameProgress","setGameProgress","completedTasks","taskScores","lastPlayedDate","savedName","localStorage","getItem","savedProgress","JSON","parse","updatePlayerName","name","setItem","updateGameProgress","taskId","score","prev","newProgress","Set","Math","max","Date","toISOString","stringify","resetProgress","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst PlayerContext = createContext();\r\n\r\nexport const PlayerProvider = ({ children }) => {\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [showNameModal, setShowNameModal] = useState(true);\r\n  const [gameProgress, setGameProgress] = useState({\r\n    completedTasks: [],\r\n    taskScores: {},\r\n    lastPlayedDate: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const savedName = localStorage.getItem('playerName');\r\n    const savedProgress = localStorage.getItem('gameProgress');\r\n    \r\n    if (savedName) {\r\n      setPlayerName(savedName);\r\n      setShowNameModal(false);\r\n    }\r\n    \r\n    if (savedProgress) {\r\n      setGameProgress(JSON.parse(savedProgress));\r\n    }\r\n  }, []);\r\n\r\n  const updatePlayerName = (name) => {\r\n    setPlayerName(name);\r\n    localStorage.setItem('playerName', name);\r\n    setShowNameModal(false);\r\n  };\r\n\r\n  const updateGameProgress = (taskId, score) => {\r\n    setGameProgress(prev => {\r\n      const newProgress = {\r\n        ...prev,\r\n        completedTasks: [...new Set([...prev.completedTasks, taskId])],\r\n        taskScores: {\r\n          ...prev.taskScores,\r\n          [taskId]: Math.max(score, prev.taskScores[taskId] || 0)\r\n        },\r\n        lastPlayedDate: new Date().toISOString()\r\n      };\r\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\r\n      return newProgress;\r\n    });\r\n  };\r\n\r\n  const resetProgress = () => {\r\n    const newProgress = {\r\n      completedTasks: [],\r\n      taskScores: {},\r\n      lastPlayedDate: null\r\n    };\r\n    setGameProgress(newProgress);\r\n    localStorage.setItem('gameProgress', JSON.stringify(newProgress));\r\n  };\r\n\r\n  return (\r\n    <PlayerContext.Provider value={{ \r\n      playerName, \r\n      showNameModal, \r\n      setShowNameModal,\r\n      updatePlayerName,\r\n      gameProgress,\r\n      updateGameProgress,\r\n      resetProgress\r\n    }}>\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePlayer = () => {\r\n  const context = useContext(PlayerContext);\r\n  if (!context) {\r\n    throw new Error('usePlayer must be used within a PlayerProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}