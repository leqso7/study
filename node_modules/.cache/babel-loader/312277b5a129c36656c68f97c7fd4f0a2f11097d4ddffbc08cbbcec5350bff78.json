{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\ScrambleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport '../styles/ScrambleGame.css';\nimport { usePlayer } from '../context/PlayerContext';\nimport NameModal from './NameModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animals = [{\n  name: 'ზებრა',\n  image: 'ზებრა.webp'\n}, {\n  name: 'სპილო',\n  image: 'სპილო.webp'\n}, {\n  name: 'ლომი',\n  image: 'ლომი.webp'\n}, {\n  name: 'დათვი',\n  image: 'დათვი.webp'\n}, {\n  name: 'მგელი',\n  image: 'მგელო.webp'\n}, {\n  name: 'ირემი',\n  image: 'ირემი.webp'\n}, {\n  name: 'თხა',\n  image: 'თხა.webp'\n}, {\n  name: 'კურდღელი',\n  image: 'კურდღელი.webp'\n}, {\n  name: 'ფლამინგო',\n  image: 'ფლამინგო.webp'\n}, {\n  name: 'სელაპი',\n  image: 'სელაპი.webp'\n}, {\n  name: 'ციყვი',\n  image: 'ციყვი.webp'\n}, {\n  name: 'ენოტი',\n  image: 'ენოტი.webp'\n}, {\n  name: 'ზარმაცა',\n  image: 'ზარმაცა.webp'\n}, {\n  name: 'ზღარბი',\n  image: 'ზღარბი.webp'\n}, {\n  name: 'ქამელეონი',\n  image: 'ქამელეონი.webp'\n}, {\n  name: 'ოპოსუმი',\n  image: 'ოპოსუმი.webp'\n}, {\n  name: 'რვაფეხა',\n  image: 'რვაფეხა.webp'\n}, {\n  name: 'თახვი',\n  image: 'თახვი.webp'\n}, {\n  name: 'ბეგემოტი',\n  image: 'ბეგემოტი.webp'\n}, {\n  name: 'ლამა',\n  image: 'ლამა.webp'\n}, {\n  name: 'ჟირაფი',\n  image: 'ჟირაფი.webp'\n}, {\n  name: 'კენგურუ',\n  image: 'კენგურუ.webp'\n}, {\n  name: 'ბუ',\n  image: 'ბუ.webp'\n}, {\n  name: 'პანდა',\n  image: 'პანდა.webp'\n}, {\n  name: 'მელია',\n  image: 'მელია.webp'\n}, {\n  name: 'დელფინი',\n  image: 'დელფინი.webp'\n}, {\n  name: 'კოალა',\n  image: 'კოალა.webp'\n}, {\n  name: 'პინგვინი',\n  image: 'პნგვინი.webp'\n}, {\n  name: 'კიბორჩხალა',\n  image: 'კიბორჩხალა.webp'\n}, {\n  name: 'ობობა',\n  image: 'ობობა.webp'\n}, {\n  name: 'გველი',\n  image: 'გველი.webp'\n}, {\n  name: 'ხვლიკი',\n  image: 'ხვლიკი.webp'\n}, {\n  name: 'ზვიგენი',\n  image: 'ზვიგენი.webp'\n}, {\n  name: 'ფარშევანგი',\n  image: 'ფარშევანგი.webp'\n}, {\n  name: 'კოდალა',\n  image: 'კოდალა.webp'\n}, {\n  name: 'აქლემი',\n  image: 'აქლემი.webp'\n}, {\n  name: 'პეპელა',\n  image: 'პეპელა.webp'\n}, {\n  name: 'არწივი',\n  image: 'არწივი.webp'\n}];\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\n_c = Toast;\nconst Container = styled.div`\n  position: relative;\n`;\nconst scrambleWord = word => {\n  const originalLetters = word.split('');\n  let scrambledIndices = Array.from({\n    length: word.length\n  }, (_, i) => i);\n  for (let i = 0; i < word.length; i++) {\n    let currentIndex = scrambledIndices[i];\n    if (currentIndex === i) {\n      for (let j = i + 1; j < word.length; j++) {\n        if (scrambledIndices[j] !== i) {\n          [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n          break;\n        }\n      }\n      if (scrambledIndices[i] === i) {\n        for (let j = i - 1; j >= 0; j--) {\n          if (scrambledIndices[j] !== j) {\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n            break;\n          }\n        }\n      }\n    }\n  }\n  return scrambledIndices.map((index, i) => ({\n    id: `letter-${i}`,\n    content: originalLetters[index],\n    originalIndex: index\n  }));\n};\nconst ScrambleGame = () => {\n  _s();\n  var _gameProgress$complet4;\n  const {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updateGameProgress\n  } = usePlayer();\n  const [currentAnimal, setCurrentAnimal] = useState(() => {\n    const availableAnimals = animals.filter(animal => {\n      var _gameProgress$complet;\n      return !(gameProgress !== null && gameProgress !== void 0 && (_gameProgress$complet = gameProgress.completedScrambleTasks) !== null && _gameProgress$complet !== void 0 && _gameProgress$complet.includes(animal.name));\n    });\n    return availableAnimals.length > 0 ? availableAnimals[Math.floor(Math.random() * availableAnimals.length)] : animals[Math.floor(Math.random() * animals.length)];\n  });\n  const [scrambledLetters, setScrambledLetters] = useState(() => currentAnimal ? scrambleWord(currentAnimal.name) : []);\n  const [placedLetters, setPlacedLetters] = useState(() => currentAnimal ? Array(currentAnimal.name.length).fill(null) : []);\n  const [correctPositions, setCorrectPositions] = useState([]);\n  const [wrongPosition, setWrongPosition] = useState(null);\n  const [showGame, setShowGame] = useState(false);\n  const lettersContainerRef = useRef(null);\n  const targetContainerRef = useRef(null);\n  const [draggedLetter, setDraggedLetter] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [isToastClosing, setIsToastClosing] = useState(false);\n  const selectRandomAnimal = () => {\n    const availableAnimals = animals.filter(animal => {\n      var _gameProgress$complet2;\n      return !(gameProgress !== null && gameProgress !== void 0 && (_gameProgress$complet2 = gameProgress.completedScrambleTasks) !== null && _gameProgress$complet2 !== void 0 && _gameProgress$complet2.includes(animal.name));\n    });\n    if (availableAnimals.length === 0) {\n      showNotification('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      updateGameProgress('scramble', [], {});\n      const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n  const initializeAnimal = animal => {\n    setCurrentAnimal(animal);\n    setScrambledLetters(scrambleWord(animal.name));\n    setPlacedLetters(Array(animal.name.length).fill(null));\n    setCorrectPositions([]);\n  };\n  const handleDragStart = (e, letter, index) => {\n    setDraggedLetter({\n      letter,\n      index\n    });\n    e.target.classList.add('dragging');\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, targetIndex) => {\n    e.preventDefault();\n    if (!draggedLetter) return;\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\n      setWrongPosition(targetIndex);\n      setTimeout(() => {\n        setWrongPosition(null);\n      }, 500);\n      return;\n    }\n    const newPlacedLetters = [...placedLetters];\n    const newScrambledLetters = [...scrambledLetters];\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\n    newScrambledLetters.splice(draggedLetter.index, 1);\n    setPlacedLetters(newPlacedLetters);\n    setScrambledLetters(newScrambledLetters);\n    const newCorrectPositions = [];\n    newPlacedLetters.forEach((letter, index) => {\n      if (letter && letter.content === currentAnimal.name[index]) {\n        newCorrectPositions.push(index);\n      }\n    });\n    setCorrectPositions(newCorrectPositions);\n    if (newCorrectPositions.length === currentAnimal.name.length) {\n      const newCompletedTasks = [...gameProgress.completedScrambleTasks, currentAnimal.name];\n      updateGameProgress('scramble', newCompletedTasks, {\n        ...gameProgress.scrambleScores,\n        [currentAnimal.name]: 3\n      });\n      if (newCompletedTasks.length === animals.length) {\n        showNotification('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n        updateGameProgress('scramble', [], {});\n        const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n        initializeAnimal(randomAnimal);\n      } else {\n        const availableAnimals = animals.filter(animal => !newCompletedTasks.includes(animal.name));\n        const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n        const randomAnimal = availableAnimals[randomIndex];\n        initializeAnimal(randomAnimal);\n      }\n    }\n  };\n  const startNewGame = () => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    if (availableAnimals.length === 0) {\n      showNotification('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n  const handleReset = () => {\n    showNotification('თამაში იწყება თავიდან! 🎮');\n    updateGameProgress('scramble', [], {});\n    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n  const showNotification = message => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => {\n      setIsToastClosing(true);\n      setTimeout(() => {\n        setShowToast(false);\n        setIsToastClosing(false);\n      }, 500);\n    }, 3000);\n  };\n  useEffect(() => {\n    const initializeGame = () => {\n      const availableAnimals = animals.filter(animal => {\n        var _gameProgress$complet3;\n        return !(gameProgress !== null && gameProgress !== void 0 && (_gameProgress$complet3 = gameProgress.completedScrambleTasks) !== null && _gameProgress$complet3 !== void 0 && _gameProgress$complet3.includes(animal.name));\n      });\n      if (availableAnimals.length === 0) {\n        setShowGame(false);\n        return;\n      }\n      const randomAnimal = availableAnimals[Math.floor(Math.random() * availableAnimals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n    };\n    initializeGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [showNameModal && /*#__PURE__*/_jsxDEV(NameModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 27\n      }, this), showToast && /*#__PURE__*/_jsxDEV(Toast, {\n        isClosing: isToastClosing,\n        children: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-text\",\n            children: [\"\\u10E8\\u10D4\\u10E1\\u10E0\\u10E3\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\\u10D0: \", (gameProgress === null || gameProgress === void 0 ? void 0 : (_gameProgress$complet4 = gameProgress.completedScrambleTasks) === null || _gameProgress$complet4 === void 0 ? void 0 : _gameProgress$complet4.length) || 0, \" / \", animals.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"game-title\",\n          children: \"\\u10D3\\u10D0\\u10D0\\u10DA\\u10D0\\u10D2\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0\\u10D0\\u10D3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-instructions\",\n          children: \"\\u10D2\\u10D0\\u10D3\\u10DB\\u10DD\\u10D8\\u10E2\\u10D0\\u10DC\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10D3\\u10D0 \\u10E9\\u10D0\\u10E1\\u10D5\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0 \\u10D0\\u10D3\\u10D2\\u10D8\\u10DA\\u10D0\\u10E1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentAnimal.image,\n          alt: currentAnimal.name,\n          className: \"animal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"target-container\",\n          children: placedLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \n                          ${letter ? 'filled' : ''} \n                          ${wrongPosition === index ? 'wrong' : ''}`,\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, index),\n            children: letter && letter.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lettersContainerRef,\n          className: \"letters-container\",\n          children: scrambledLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-id\": letter.id,\n            className: \"letter\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, letter, index),\n            children: letter.content\n          }, letter.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrambleGame, \"44BtitC5l4fH7g+97EJu+6l2lEk=\", false, function () {\n  return [usePlayer];\n});\n_c2 = ScrambleGame;\nexport default ScrambleGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"Toast\");\n$RefreshReg$(_c2, \"ScrambleGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","keyframes","usePlayer","NameModal","jsxDEV","_jsxDEV","animals","name","image","fadeIn","fadeOut","Toast","div","props","isClosing","_c","Container","scrambleWord","word","originalLetters","split","scrambledIndices","Array","from","length","_","i","currentIndex","j","map","index","id","content","originalIndex","ScrambleGame","_s","_gameProgress$complet4","playerName","showNameModal","gameProgress","updateGameProgress","currentAnimal","setCurrentAnimal","availableAnimals","filter","animal","_gameProgress$complet","completedScrambleTasks","includes","Math","floor","random","scrambledLetters","setScrambledLetters","placedLetters","setPlacedLetters","fill","correctPositions","setCorrectPositions","wrongPosition","setWrongPosition","showGame","setShowGame","lettersContainerRef","targetContainerRef","draggedLetter","setDraggedLetter","showToast","setShowToast","toastMessage","setToastMessage","isToastClosing","setIsToastClosing","selectRandomAnimal","_gameProgress$complet2","showNotification","randomAnimal","initializeAnimal","randomIndex","handleDragStart","e","letter","target","classList","add","handleDragOver","preventDefault","handleDrop","targetIndex","setTimeout","newPlacedLetters","newScrambledLetters","splice","newCorrectPositions","forEach","push","newCompletedTasks","scrambleScores","startNewGame","handleReset","message","initializeGame","_gameProgress$complet3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onDragOver","onDrop","ref","draggable","onDragStart","_c2","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/ScrambleGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport '../styles/ScrambleGame.css';\nimport { usePlayer } from '../context/PlayerContext';\nimport NameModal from './NameModal';\n\nconst animals = [\n  { name: 'ზებრა', image: 'ზებრა.webp' },\n  { name: 'სპილო', image: 'სპილო.webp' },\n  { name: 'ლომი', image: 'ლომი.webp' },\n  { name: 'დათვი', image: 'დათვი.webp' },\n  { name: 'მგელი', image: 'მგელო.webp' },\n  { name: 'ირემი', image: 'ირემი.webp' },\n  { name: 'თხა', image: 'თხა.webp' },\n  { name: 'კურდღელი', image: 'კურდღელი.webp' },\n  { name: 'ფლამინგო', image: 'ფლამინგო.webp' },\n  { name: 'სელაპი', image: 'სელაპი.webp' },\n  { name: 'ციყვი', image: 'ციყვი.webp' },\n  { name: 'ენოტი', image: 'ენოტი.webp' },\n  { name: 'ზარმაცა', image: 'ზარმაცა.webp' },\n  { name: 'ზღარბი', image: 'ზღარბი.webp' },\n  { name: 'ქამელეონი', image: 'ქამელეონი.webp' },\n  { name: 'ოპოსუმი', image: 'ოპოსუმი.webp' },\n  { name: 'რვაფეხა', image: 'რვაფეხა.webp' },\n  { name: 'თახვი', image: 'თახვი.webp' },\n  { name: 'ბეგემოტი', image: 'ბეგემოტი.webp' },\n  { name: 'ლამა', image: 'ლამა.webp' },\n  { name: 'ჟირაფი', image: 'ჟირაფი.webp' },\n  { name: 'კენგურუ', image: 'კენგურუ.webp' },\n  { name: 'ბუ', image: 'ბუ.webp' },\n  { name: 'პანდა', image: 'პანდა.webp' },\n  { name: 'მელია', image: 'მელია.webp' },\n  { name: 'დელფინი', image: 'დელფინი.webp' },\n  { name: 'კოალა', image: 'კოალა.webp' },\n  { name: 'პინგვინი', image: 'პნგვინი.webp' },\n  { name: 'კიბორჩხალა', image: 'კიბორჩხალა.webp' },\n  { name: 'ობობა', image: 'ობობა.webp' },\n  { name: 'გველი', image: 'გველი.webp' },\n  { name: 'ხვლიკი', image: 'ხვლიკი.webp' },\n  { name: 'ზვიგენი', image: 'ზვიგენი.webp' },\n  { name: 'ფარშევანგი', image: 'ფარშევანგი.webp' },\n  { name: 'კოდალა', image: 'კოდალა.webp' },\n  { name: 'აქლემი', image: 'აქლემი.webp' },\n  { name: 'პეპელა', image: 'პეპელა.webp' },\n  { name: 'არწივი', image: 'არწივი.webp' }\n];\n\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\n\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst scrambleWord = (word) => {\n  const originalLetters = word.split('');\n  let scrambledIndices = Array.from({ length: word.length }, (_, i) => i);\n  \n  for (let i = 0; i < word.length; i++) {\n    let currentIndex = scrambledIndices[i];\n    if (currentIndex === i) {\n      for (let j = i + 1; j < word.length; j++) {\n        if (scrambledIndices[j] !== i) {\n          [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n          break;\n        }\n      }\n      if (scrambledIndices[i] === i) {\n        for (let j = i - 1; j >= 0; j--) {\n          if (scrambledIndices[j] !== j) {\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n            break;\n          }\n        }\n      }\n    }\n  }\n  \n  return scrambledIndices.map((index, i) => ({\n    id: `letter-${i}`,\n    content: originalLetters[index],\n    originalIndex: index\n  }));\n};\n\nconst ScrambleGame = () => {\n  const { playerName, showNameModal, gameProgress, updateGameProgress } = usePlayer();\n  const [currentAnimal, setCurrentAnimal] = useState(() => {\n    const availableAnimals = animals.filter(animal => \n      !gameProgress?.completedScrambleTasks?.includes(animal.name)\n    );\n    return availableAnimals.length > 0 \n      ? availableAnimals[Math.floor(Math.random() * availableAnimals.length)]\n      : animals[Math.floor(Math.random() * animals.length)];\n  });\n  const [scrambledLetters, setScrambledLetters] = useState(() => \n    currentAnimal ? scrambleWord(currentAnimal.name) : []\n  );\n  const [placedLetters, setPlacedLetters] = useState(() => \n    currentAnimal ? Array(currentAnimal.name.length).fill(null) : []\n  );\n  const [correctPositions, setCorrectPositions] = useState([]);\n  const [wrongPosition, setWrongPosition] = useState(null);\n  const [showGame, setShowGame] = useState(false);\n  const lettersContainerRef = useRef(null);\n  const targetContainerRef = useRef(null);\n  const [draggedLetter, setDraggedLetter] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [isToastClosing, setIsToastClosing] = useState(false);\n\n  const selectRandomAnimal = () => {\n    const availableAnimals = animals.filter(animal => \n      !gameProgress?.completedScrambleTasks?.includes(animal.name)\n    );\n    \n    if (availableAnimals.length === 0) {\n      showNotification('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      updateGameProgress('scramble', [], {});\n      const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n      return;\n    }\n    \n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n\n  const initializeAnimal = (animal) => {\n    setCurrentAnimal(animal);\n    setScrambledLetters(scrambleWord(animal.name));\n    setPlacedLetters(Array(animal.name.length).fill(null));\n    setCorrectPositions([]);\n  };\n\n  const handleDragStart = (e, letter, index) => {\n    setDraggedLetter({ letter, index });\n    e.target.classList.add('dragging');\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e, targetIndex) => {\n    e.preventDefault();\n    if (!draggedLetter) return;\n\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\n      setWrongPosition(targetIndex);\n      setTimeout(() => {\n        setWrongPosition(null);\n      }, 500);\n      return;\n    }\n\n    const newPlacedLetters = [...placedLetters];\n    const newScrambledLetters = [...scrambledLetters];\n\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\n    newScrambledLetters.splice(draggedLetter.index, 1);\n\n    setPlacedLetters(newPlacedLetters);\n    setScrambledLetters(newScrambledLetters);\n\n    const newCorrectPositions = [];\n    newPlacedLetters.forEach((letter, index) => {\n      if (letter && letter.content === currentAnimal.name[index]) {\n        newCorrectPositions.push(index);\n      }\n    });\n\n    setCorrectPositions(newCorrectPositions);\n\n    if (newCorrectPositions.length === currentAnimal.name.length) {\n      const newCompletedTasks = [...gameProgress.completedScrambleTasks, currentAnimal.name];\n      updateGameProgress('scramble', newCompletedTasks, {\n        ...gameProgress.scrambleScores,\n        [currentAnimal.name]: 3\n      });\n      \n      if (newCompletedTasks.length === animals.length) {\n        showNotification('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n        updateGameProgress('scramble', [], {});\n        const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n        initializeAnimal(randomAnimal);\n      } else {\n        const availableAnimals = animals.filter(animal => !newCompletedTasks.includes(animal.name));\n        const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n        const randomAnimal = availableAnimals[randomIndex];\n        initializeAnimal(randomAnimal);\n      }\n    }\n  };\n\n  const startNewGame = () => {\n    const availableAnimals = animals.filter(animal => !gameProgress.completedScrambleTasks.includes(animal.name));\n    \n    if (availableAnimals.length === 0) {\n      showNotification('გილოცავთ! თქვენ ყველა ამოცანა შეასრულეთ! 🎉');\n      return;\n    }\n    \n    const randomIndex = Math.floor(Math.random() * availableAnimals.length);\n    const randomAnimal = availableAnimals[randomIndex];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n\n  const handleReset = () => {\n    showNotification('თამაში იწყება თავიდან! 🎮');\n    updateGameProgress('scramble', [], {});\n    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n    initializeAnimal(randomAnimal);\n    setShowGame(true);\n  };\n\n  const showNotification = (message) => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => {\n      setIsToastClosing(true);\n      setTimeout(() => {\n        setShowToast(false);\n        setIsToastClosing(false);\n      }, 500);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    const initializeGame = () => {\n      const availableAnimals = animals.filter(animal => \n        !gameProgress?.completedScrambleTasks?.includes(animal.name)\n      );\n      if (availableAnimals.length === 0) {\n        setShowGame(false);\n        return;\n      }\n      \n      const randomAnimal = availableAnimals[Math.floor(Math.random() * availableAnimals.length)];\n      initializeAnimal(randomAnimal);\n      setShowGame(true);\n    };\n\n    initializeGame();\n  }, []);\n\n  return (\n    <div className=\"game-page\">\n      <div className=\"game-content\">\n        {showNameModal && <NameModal />}\n        {showToast && (\n          <Toast isClosing={isToastClosing}>\n            {toastMessage}\n          </Toast>\n        )}\n        <div className=\"game-area\">\n          <div className=\"progress-container\">\n            <span className=\"progress-text\">შესრულებულია: {gameProgress?.completedScrambleTasks?.length || 0} / {animals.length}</span>\n          </div>\n          <h1 className=\"game-title\">დაალაგე ასოები სწორად</h1>\n          <p className=\"game-instructions\">გადმოიტანე ასოები და ჩასვი სწორ ადგილას</p>\n          <img src={currentAnimal.image} alt={currentAnimal.name} className=\"animal-image\" />\n          <div className=\"target-container\">\n            {placedLetters.map((letter, index) => (\n              <div\n                key={index}\n                className={`letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \n                          ${letter ? 'filled' : ''} \n                          ${wrongPosition === index ? 'wrong' : ''}`}\n                onDragOver={handleDragOver}\n                onDrop={(e) => handleDrop(e, index)}\n              >\n                {letter && letter.content}\n              </div>\n            ))}\n          </div>\n          <div \n            ref={lettersContainerRef}\n            className=\"letters-container\"\n          >\n            {scrambledLetters.map((letter, index) => (\n              <div\n                key={letter.id}\n                data-id={letter.id}\n                className=\"letter\"\n                draggable={true}\n                onDragStart={(e) => handleDragStart(e, letter, index)}\n              >\n                {letter.content}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScrambleGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}