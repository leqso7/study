{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/osqel/OneDrive/Desktop/New folder/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11;import React,{useState,useEffect}from'react';import styled from'styled-components';import{usePlayer}from'../context/PlayerContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ColorMatchingGame=()=>{const{updateGameProgress}=usePlayer();const[isPlaying,setIsPlaying]=useState(false);const[timeLeft,setTimeLeft]=useState(60);const[score,setScore]=useState(0);const[selectedColor,setSelectedColor]=useState(null);const[selectedName,setSelectedName]=useState(null);const[matchedPairs,setMatchedPairs]=useState(new Set());const colors=[{name:'წითელი',value:'#FF0000'},{name:'ლურჯი',value:'#0000FF'},{name:'მწვანე',value:'#008000'},{name:'ყვითელი',value:'#FFFF00'},{name:'ნარინჯისფერი',value:'#FFA500'},{name:'იისფერი',value:'#800080'},{name:'შავი',value:'#000000'},{name:'თეთრი',value:'#FFFFFF'}];// თამაშის დაწყება\nconst startGame=()=>{setIsPlaying(true);setTimeLeft(60);setScore(0);setMatchedPairs(new Set());};// ტაიმერის ლოგიკა\nuseEffect(()=>{let timer;if(isPlaying&&timeLeft>0){timer=setInterval(()=>{setTimeLeft(prev=>prev-1);},1000);}else if(timeLeft===0){endGame();}return()=>clearInterval(timer);},[isPlaying,timeLeft]);// თამაშის დასრულება\nconst endGame=()=>{setIsPlaying(false);updateGameProgress('colorMatching',Date.now(),{score});};// ფერის ან სახელის არჩევა\nconst handleSelection=(type,item)=>{if(type==='color'){setSelectedColor(item);}else{setSelectedName(item);}};// შემოწმება დაემთხვა თუ არა\nuseEffect(()=>{if(selectedColor&&selectedName){var _colors$find;const isMatch=((_colors$find=colors.find(c=>c.value===selectedColor))===null||_colors$find===void 0?void 0:_colors$find.name)===selectedName;if(isMatch){const newMatchedPairs=new Set(matchedPairs);newMatchedPairs.add(selectedColor);setMatchedPairs(newMatchedPairs);setScore(prev=>prev+1);}setSelectedColor(null);setSelectedName(null);}},[selectedColor,selectedName]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\u10E4\\u10D4\\u10E0\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D3\\u10D0\\u10D9\\u10D0\\u10D5\\u10E8\\u10D8\\u10E0\\u10D4\\u10D1\\u10D0\"}),!isPlaying?/*#__PURE__*/_jsx(StartButton,{onClick:startGame,children:\"\\u10D7\\u10D0\\u10DB\\u10D0\\u10E8\\u10D8\\u10E1 \\u10D3\\u10D0\\u10EC\\u10E7\\u10D4\\u10D1\\u10D0\"}):/*#__PURE__*/_jsxs(GameArea,{children:[/*#__PURE__*/_jsxs(Timer,{children:[\"\\u10D3\\u10D0\\u10E0\\u10E9\\u10D4\\u10DC\\u10D8\\u10DA\\u10D8 \\u10D3\\u10E0\\u10DD: \",timeLeft,\" \\u10EC\\u10D0\\u10DB\\u10D8\"]}),/*#__PURE__*/_jsxs(Score,{children:[\"\\u10E5\\u10E3\\u10DA\\u10D0: \",score]}),/*#__PURE__*/_jsxs(GameGrid,{children:[/*#__PURE__*/_jsx(ColorSection,{children:colors.map(color=>/*#__PURE__*/_jsx(ColorBox,{color:color.value,matched:matchedPairs.has(color.value),selected:selectedColor===color.value,onClick:()=>!matchedPairs.has(color.value)&&handleSelection('color',color.value)},color.value))}),/*#__PURE__*/_jsx(NameSection,{children:colors.map(color=>/*#__PURE__*/_jsx(NameBox,{matched:matchedPairs.has(color.value),selected:selectedName===color.name,onClick:()=>!matchedPairs.has(color.value)&&handleSelection('name',color.name),children:color.name},color.name))})]})]})]});};const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 2rem;\\n  text-align: center;\\n\"])));const Title=styled.h1(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: #333;\\n  margin-bottom: 2rem;\\n\"])));const StartButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 1rem 2rem;\\n  font-size: 1.2rem;\\n  background-color: #4CAF50;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  \\n  &:hover {\\n    background-color: #45a049;\\n  }\\n\"])));const GameArea=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  max-width: 800px;\\n  margin: 0 auto;\\n\"])));const Timer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  font-size: 1.5rem;\\n  margin-bottom: 1rem;\\n  color: #333;\\n\"])));const Score=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-size: 1.5rem;\\n  margin-bottom: 2rem;\\n  color: #333;\\n\"])));const GameGrid=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  gap: 2rem;\\n\"])));const ColorSection=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  gap: 1rem;\\n\"])));const NameSection=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  gap: 1rem;\\n\"])));const ColorBox=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  width: 100px;\\n  height: 100px;\\n  background-color: \",\";\\n  border: 3px solid \",\";\\n  border-radius: 8px;\\n  cursor: \",\";\\n  opacity: \",\";\\n\"])),props=>props.color,props=>props.selected?'#333':props.matched?'#4CAF50':'#ddd',props=>props.matched?'default':'pointer',props=>props.matched?0.5:1);const NameBox=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  width: 100px;\\n  height: 100px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: white;\\n  border: 3px solid \",\";\\n  border-radius: 8px;\\n  cursor: \",\";\\n  opacity: \",\";\\n  padding: 0.5rem;\\n  font-size: 1rem;\\n\"])),props=>props.selected?'#333':props.matched?'#4CAF50':'#ddd',props=>props.matched?'default':'pointer',props=>props.matched?0.5:1);export default ColorMatchingGame;","map":{"version":3,"names":["React","useState","useEffect","styled","usePlayer","jsx","_jsx","jsxs","_jsxs","ColorMatchingGame","updateGameProgress","isPlaying","setIsPlaying","timeLeft","setTimeLeft","score","setScore","selectedColor","setSelectedColor","selectedName","setSelectedName","matchedPairs","setMatchedPairs","Set","colors","name","value","startGame","timer","setInterval","prev","endGame","clearInterval","Date","now","handleSelection","type","item","_colors$find","isMatch","find","c","newMatchedPairs","add","Container","children","Title","StartButton","onClick","GameArea","Timer","Score","GameGrid","ColorSection","map","color","ColorBox","matched","has","selected","NameSection","NameBox","div","_templateObject","_taggedTemplateLiteral","h1","_templateObject2","button","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","props","_templateObject11"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/ColorMatchingGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { usePlayer } from '../context/PlayerContext';\n\nconst ColorMatchingGame = () => {\n  const { updateGameProgress } = usePlayer();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [selectedName, setSelectedName] = useState(null);\n  const [matchedPairs, setMatchedPairs] = useState(new Set());\n\n  const colors = [\n    { name: 'წითელი', value: '#FF0000' },\n    { name: 'ლურჯი', value: '#0000FF' },\n    { name: 'მწვანე', value: '#008000' },\n    { name: 'ყვითელი', value: '#FFFF00' },\n    { name: 'ნარინჯისფერი', value: '#FFA500' },\n    { name: 'იისფერი', value: '#800080' },\n    { name: 'შავი', value: '#000000' },\n    { name: 'თეთრი', value: '#FFFFFF' }\n  ];\n\n  // თამაშის დაწყება\n  const startGame = () => {\n    setIsPlaying(true);\n    setTimeLeft(60);\n    setScore(0);\n    setMatchedPairs(new Set());\n  };\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let timer;\n    if (isPlaying && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft((prev) => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      endGame();\n    }\n    return () => clearInterval(timer);\n  }, [isPlaying, timeLeft]);\n\n  // თამაშის დასრულება\n  const endGame = () => {\n    setIsPlaying(false);\n    updateGameProgress('colorMatching', Date.now(), { score });\n  };\n\n  // ფერის ან სახელის არჩევა\n  const handleSelection = (type, item) => {\n    if (type === 'color') {\n      setSelectedColor(item);\n    } else {\n      setSelectedName(item);\n    }\n  };\n\n  // შემოწმება დაემთხვა თუ არა\n  useEffect(() => {\n    if (selectedColor && selectedName) {\n      const isMatch = colors.find(c => c.value === selectedColor)?.name === selectedName;\n      \n      if (isMatch) {\n        const newMatchedPairs = new Set(matchedPairs);\n        newMatchedPairs.add(selectedColor);\n        setMatchedPairs(newMatchedPairs);\n        setScore(prev => prev + 1);\n      }\n      \n      setSelectedColor(null);\n      setSelectedName(null);\n    }\n  }, [selectedColor, selectedName]);\n\n  return (\n    <Container>\n      <Title>ფერების დაკავშირება</Title>\n      \n      {!isPlaying ? (\n        <StartButton onClick={startGame}>თამაშის დაწყება</StartButton>\n      ) : (\n        <GameArea>\n          <Timer>დარჩენილი დრო: {timeLeft} წამი</Timer>\n          <Score>ქულა: {score}</Score>\n          \n          <GameGrid>\n            <ColorSection>\n              {colors.map((color) => (\n                <ColorBox\n                  key={color.value}\n                  color={color.value}\n                  matched={matchedPairs.has(color.value)}\n                  selected={selectedColor === color.value}\n                  onClick={() => !matchedPairs.has(color.value) && handleSelection('color', color.value)}\n                />\n              ))}\n            </ColorSection>\n            \n            <NameSection>\n              {colors.map((color) => (\n                <NameBox\n                  key={color.name}\n                  matched={matchedPairs.has(color.value)}\n                  selected={selectedName === color.name}\n                  onClick={() => !matchedPairs.has(color.value) && handleSelection('name', color.name)}\n                >\n                  {color.name}\n                </NameBox>\n              ))}\n            </NameSection>\n          </GameGrid>\n        </GameArea>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 2rem;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n  margin-bottom: 2rem;\n`;\n\nconst StartButton = styled.button`\n  padding: 1rem 2rem;\n  font-size: 1.2rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst GameArea = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst Timer = styled.div`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: #333;\n`;\n\nconst Score = styled.div`\n  font-size: 1.5rem;\n  margin-bottom: 2rem;\n  color: #333;\n`;\n\nconst GameGrid = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 2rem;\n`;\n\nconst ColorSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n`;\n\nconst NameSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n`;\n\nconst ColorBox = styled.div`\n  width: 100px;\n  height: 100px;\n  background-color: ${props => props.color};\n  border: 3px solid ${props => props.selected ? '#333' : props.matched ? '#4CAF50' : '#ddd'};\n  border-radius: 8px;\n  cursor: ${props => props.matched ? 'default' : 'pointer'};\n  opacity: ${props => props.matched ? 0.5 : 1};\n`;\n\nconst NameBox = styled.div`\n  width: 100px;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border: 3px solid ${props => props.selected ? '#333' : props.matched ? '#4CAF50' : '#ddd'};\n  border-radius: 8px;\n  cursor: ${props => props.matched ? 'default' : 'pointer'};\n  opacity: ${props => props.matched ? 0.5 : 1};\n  padding: 0.5rem;\n  font-size: 1rem;\n`;\n\nexport default ColorMatchingGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}