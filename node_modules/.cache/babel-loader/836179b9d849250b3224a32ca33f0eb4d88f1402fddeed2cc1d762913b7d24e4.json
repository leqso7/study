{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\DrawingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { usePlayer } from '../context/PlayerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingGame = () => {\n  _s();\n  const {\n    updateGameProgress\n  } = usePlayer();\n  const [selectedColor, setSelectedColor] = useState('#FF0000');\n  const colors = ['#FF0000',\n  // წითელი\n  '#FFA500',\n  // ნარინჯისფერი\n  '#FFFF00',\n  // ყვითელი\n  '#008000',\n  // მწვანე\n  '#0000FF',\n  // ლურჯი\n  '#4B0082',\n  // იისფერი\n  '#EE82EE' // ვარდისფერი\n  ];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\u10D2\\u10D0\\u10D0\\u10E4\\u10D4\\u10E0\\u10D0\\u10D3\\u10D4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameArea, {\n      children: [/*#__PURE__*/_jsxDEV(DrawingArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(ColorButton, {\n          color: color,\n          selected: selectedColor === color,\n          onClick: () => setSelectedColor(color)\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n// სტილები\n_s(DrawingGame, \"QYwUS48IU1+j4AUcLy+Tw5/mW3k=\", false, function () {\n  return [usePlayer];\n});\n_c = DrawingGame;\nconst Container = styled.div`\n  padding: 2rem;\n`;\n_c2 = Container;\nconst Title = styled.h1`\n  text-align: center;\n  color: #333;\n`;\n_c3 = Title;\nconst GameArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n`;\n_c4 = GameArea;\nconst DrawingArea = styled.div`\n  width: 500px;\n  height: 500px;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  background: white;\n`;\n_c5 = DrawingArea;\nconst ColorPalette = styled.div`\n  display: flex;\n  gap: 1rem;\n  padding: 1rem;\n`;\n_c6 = ColorPalette;\nconst ColorButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 2px solid ${props => props.selected ? '#333' : 'transparent'};\n  background-color: ${props => props.color};\n  cursor: pointer;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n_c7 = ColorButton;\nexport default DrawingGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DrawingGame\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"GameArea\");\n$RefreshReg$(_c5, \"DrawingArea\");\n$RefreshReg$(_c6, \"ColorPalette\");\n$RefreshReg$(_c7, \"ColorButton\");","map":{"version":3,"names":["React","useState","styled","usePlayer","jsxDEV","_jsxDEV","DrawingGame","_s","updateGameProgress","selectedColor","setSelectedColor","colors","Container","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","GameArea","DrawingArea","ColorPalette","map","color","ColorButton","selected","onClick","_c","div","_c2","h1","_c3","_c4","_c5","_c6","button","props","_c7","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/DrawingGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePlayer } from '../context/PlayerContext';\r\n\r\nconst DrawingGame = () => {\r\n  const { updateGameProgress } = usePlayer();\r\n  const [selectedColor, setSelectedColor] = useState('#FF0000');\r\n  \r\n  const colors = [\r\n    '#FF0000', // წითელი\r\n    '#FFA500', // ნარინჯისფერი\r\n    '#FFFF00', // ყვითელი\r\n    '#008000', // მწვანე\r\n    '#0000FF', // ლურჯი\r\n    '#4B0082', // იისფერი\r\n    '#EE82EE'  // ვარდისფერი\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <Title>გააფერადე</Title>\r\n      \r\n      <GameArea>\r\n        <DrawingArea>\r\n          {/* აქ შეგიძლიათ დაამატოთ Canvas ან სხვა სახატავი ელემენტი */}\r\n        </DrawingArea>\r\n\r\n        <ColorPalette>\r\n          {colors.map((color) => (\r\n            <ColorButton\r\n              key={color}\r\n              color={color}\r\n              selected={selectedColor === color}\r\n              onClick={() => setSelectedColor(color)}\r\n            />\r\n          ))}\r\n        </ColorPalette>\r\n      </GameArea>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// სტილები\r\nconst Container = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  color: #333;\r\n`;\r\n\r\nconst GameArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst DrawingArea = styled.div`\r\n  width: 500px;\r\n  height: 500px;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background: white;\r\n`;\r\n\r\nconst ColorPalette = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst ColorButton = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 2px solid ${props => props.selected ? '#333' : 'transparent'};\r\n  background-color: ${props => props.color};\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport default DrawingGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}