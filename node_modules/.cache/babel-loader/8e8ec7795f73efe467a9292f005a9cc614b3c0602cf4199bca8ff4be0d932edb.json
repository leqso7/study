{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\DrawingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { templates } from '../data/drawingTemplates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled(motion.div)`\n  min-height: 100vh;\n  width: 100%;\n  padding: 2rem;\n  background: linear-gradient(135deg, #fce4ec, #f3e5f5, #e3f2fd);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = GameContainer;\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  color: #6a1b9a;\n  margin-bottom: 2rem;\n  text-align: center;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Title;\nconst CanvasContainer = styled.div`\n  position: relative;\n  margin: 2rem 0;\n  border-radius: 1rem;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n  background: white;\n  padding: 1rem;\n`;\n_c3 = CanvasContainer;\nconst Canvas = styled.canvas`\n  border: 2px solid #e1bee7;\n  border-radius: 0.5rem;\n  cursor: crosshair;\n`;\n_c4 = Canvas;\nconst ReferenceImage = styled.img`\n  position: absolute;\n  top: 1rem;\n  right: -150px;\n  width: 120px;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background: white;\n  padding: 0.5rem;\n\n  @media (max-width: 768px) {\n    position: static;\n    margin-bottom: 1rem;\n  }\n`;\n_c5 = ReferenceImage;\nconst ColorPalette = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin: 1rem 0;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c6 = ColorPalette;\nconst ColorButton = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 3px solid white;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  background-color: ${props => props.color};\n  cursor: pointer;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n_c7 = ColorButton;\nconst ControlButton = styled(motion.button)`\n  padding: 0.8rem 1.5rem;\n  font-size: 1.2rem;\n  border-radius: 2rem;\n  background: ${props => props.primary ? '#6a1b9a' : '#fff'};\n  color: ${props => props.primary ? '#fff' : '#6a1b9a'};\n  border: 2px solid #6a1b9a;\n  cursor: pointer;\n  margin: 0.5rem;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\nconst colors = [{\n  name: 'ყავისფერი',\n  value: '#795548'\n}, {\n  name: 'ცისფერი',\n  value: '#03a9f4'\n}, {\n  name: 'ყვითელი',\n  value: '#fdd835'\n}, {\n  name: 'მწვანე',\n  value: '#4caf50'\n}, {\n  name: 'წითელი',\n  value: '#f44336'\n}, {\n  name: 'იისფერი',\n  value: '#9c27b0'\n}];\nconst Message = styled(motion.div)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(255, 255, 255, 0.95);\n  padding: 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  font-size: 1.5rem;\n  color: #6a1b9a;\n  z-index: 1000;\n`;\n_c8 = Message;\nconst DrawingGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [currentColor, setCurrentColor] = useState(colors[0].value);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTemplate] = useState(templates.bear);\n  const [currentPart, setCurrentPart] = useState(0);\n  const [completedParts, setCompletedParts] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isColoring, setIsColoring] = useState(false);\n  const [drawnPoints, setDrawnPoints] = useState([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 600;\n    canvas.height = 400;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 5;\n    drawTemplate();\n  }, [currentPart, completedParts]);\n  const drawTemplate = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw completed parts\n    completedParts.forEach(partIndex => {\n      const part = currentTemplate.parts[partIndex];\n      ctx.beginPath();\n      ctx.moveTo(part.path[0].x, part.path[0].y);\n      part.path.forEach(point => {\n        ctx.lineTo(point.x, point.y);\n      });\n      ctx.closePath();\n      ctx.fillStyle = part.color;\n      ctx.fill();\n    });\n\n    // Draw current part template as a light guide\n    if (!isColoring && currentPart < currentTemplate.parts.length) {\n      const part = currentTemplate.parts[currentPart];\n      ctx.beginPath();\n      ctx.moveTo(part.path[0].x, part.path[0].y);\n      part.path.forEach(point => {\n        ctx.lineTo(point.x, point.y);\n      });\n      ctx.closePath();\n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\n      ctx.stroke();\n    }\n  };\n  const startDrawing = e => {\n    if (isColoring || currentPart >= currentTemplate.parts.length) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setIsDrawing(true);\n    setDrawnPoints([{\n      x,\n      y\n    }]);\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.strokeStyle = currentColor;\n  };\n  const draw = e => {\n    if (!isDrawing || isColoring) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setDrawnPoints(prev => [...prev, {\n      x,\n      y\n    }]);\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    if (!isDrawing) return;\n    setIsDrawing(false);\n    checkDrawing();\n  };\n  const checkDrawing = () => {\n    if (drawnPoints.length < 5) return;\n    const currentShape = currentTemplate.parts[currentPart];\n    const tolerance = currentShape.tolerance;\n\n    // Simple shape matching algorithm\n    let matches = true;\n    const templatePoints = currentShape.path;\n    for (let i = 0; i < templatePoints.length; i++) {\n      const templatePoint = templatePoints[i];\n      let foundMatch = false;\n      for (let j = 0; j < drawnPoints.length; j++) {\n        const drawnPoint = drawnPoints[j];\n        const distance = Math.sqrt(Math.pow(templatePoint.x - drawnPoint.x, 2) + Math.pow(templatePoint.y - drawnPoint.y, 2));\n        if (distance <= tolerance) {\n          foundMatch = true;\n          break;\n        }\n      }\n      if (!foundMatch) {\n        matches = false;\n        break;\n      }\n    }\n    if (matches) {\n      setCompletedParts(prev => [...prev, currentPart]);\n      setMessage(currentTemplate.compliments[Math.floor(Math.random() * currentTemplate.compliments.length)]);\n      setTimeout(() => setMessage(''), 2000);\n      if (currentPart + 1 >= currentTemplate.parts.length) {\n        setIsColoring(true);\n      } else {\n        setCurrentPart(prev => prev + 1);\n      }\n    } else {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawTemplate();\n    }\n    setDrawnPoints([]);\n  };\n  const fillPart = (x, y) => {\n    if (!isColoring) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    completedParts.forEach((partIndex, index) => {\n      const part = currentTemplate.parts[partIndex];\n      ctx.beginPath();\n      ctx.moveTo(part.path[0].x, part.path[0].y);\n      part.path.forEach(point => {\n        ctx.lineTo(point.x, point.y);\n      });\n      ctx.closePath();\n      if (ctx.isPointInPath(x, y)) {\n        part.color = currentColor;\n        drawTemplate();\n      }\n    });\n  };\n  const handleCanvasClick = e => {\n    if (!isColoring) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    fillPart(x, y);\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: isColoring ? '🎨 გააფერადე დათვი' : '✏️ დახატე დათვი'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ReferenceImage, {\n        src: `/images/${isColoring ? 'bear-colored.png' : 'bear-template.png'}`,\n        alt: \"\\u10E1\\u10D0\\u10DC\\u10D8\\u10DB\\u10E3\\u10E8\\u10DD \\u10DC\\u10D0\\u10EE\\u10D0\\u10E2\\u10D8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        ref: canvasRef,\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseLeave: stopDrawing,\n        onClick: handleCanvasClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {\n      children: colors.map(color => /*#__PURE__*/_jsxDEV(ColorButton, {\n        color: color.value,\n        onClick: () => setCurrentColor(color.value),\n        title: color.name\n      }, color.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: message && /*#__PURE__*/_jsxDEV(Message, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingGame, \"pZ9QltMQEPLQ1aXvKSsKK5+O14o=\");\n_c9 = DrawingGame;\nexport default DrawingGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"CanvasContainer\");\n$RefreshReg$(_c4, \"Canvas\");\n$RefreshReg$(_c5, \"ReferenceImage\");\n$RefreshReg$(_c6, \"ColorPalette\");\n$RefreshReg$(_c7, \"ColorButton\");\n$RefreshReg$(_c8, \"Message\");\n$RefreshReg$(_c9, \"DrawingGame\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","motion","AnimatePresence","templates","jsxDEV","_jsxDEV","GameContainer","div","_c","Title","h1","_c2","CanvasContainer","_c3","Canvas","canvas","_c4","ReferenceImage","img","_c5","ColorPalette","_c6","ColorButton","button","props","color","_c7","ControlButton","primary","colors","name","value","Message","_c8","DrawingGame","_s","canvasRef","currentColor","setCurrentColor","isDrawing","setIsDrawing","currentTemplate","bear","currentPart","setCurrentPart","completedParts","setCompletedParts","message","setMessage","isColoring","setIsColoring","drawnPoints","setDrawnPoints","current","ctx","getContext","width","height","lineJoin","lineCap","lineWidth","drawTemplate","clearRect","forEach","partIndex","part","parts","beginPath","moveTo","path","x","y","point","lineTo","closePath","fillStyle","fill","length","strokeStyle","stroke","startDrawing","e","rect","getBoundingClientRect","clientX","left","clientY","top","draw","prev","stopDrawing","checkDrawing","currentShape","tolerance","matches","templatePoints","i","templatePoint","foundMatch","j","drawnPoint","distance","Math","sqrt","pow","compliments","floor","random","setTimeout","fillPart","index","isPointInPath","handleCanvasClick","initial","opacity","animate","exit","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onClick","map","title","_c9","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/DrawingGame.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { templates } from '../data/drawingTemplates';\r\n\r\nconst GameContainer = styled(motion.div)`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  padding: 2rem;\r\n  background: linear-gradient(135deg, #fce4ec, #f3e5f5, #e3f2fd);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  color: #6a1b9a;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst CanvasContainer = styled.div`\r\n  position: relative;\r\n  margin: 2rem 0;\r\n  border-radius: 1rem;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n  background: white;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Canvas = styled.canvas`\r\n  border: 2px solid #e1bee7;\r\n  border-radius: 0.5rem;\r\n  cursor: crosshair;\r\n`;\r\n\r\nconst ReferenceImage = styled.img`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: -150px;\r\n  width: 120px;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  background: white;\r\n  padding: 0.5rem;\r\n\r\n  @media (max-width: 768px) {\r\n    position: static;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst ColorPalette = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin: 1rem 0;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ColorButton = styled.button`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  border: 3px solid white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  background-color: ${props => props.color};\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst ControlButton = styled(motion.button)`\r\n  padding: 0.8rem 1.5rem;\r\n  font-size: 1.2rem;\r\n  border-radius: 2rem;\r\n  background: ${props => props.primary ? '#6a1b9a' : '#fff'};\r\n  color: ${props => props.primary ? '#fff' : '#6a1b9a'};\r\n  border: 2px solid #6a1b9a;\r\n  cursor: pointer;\r\n  margin: 0.5rem;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst colors = [\r\n  { name: 'ყავისფერი', value: '#795548' },\r\n  { name: 'ცისფერი', value: '#03a9f4' },\r\n  { name: 'ყვითელი', value: '#fdd835' },\r\n  { name: 'მწვანე', value: '#4caf50' },\r\n  { name: 'წითელი', value: '#f44336' },\r\n  { name: 'იისფერი', value: '#9c27b0' },\r\n];\r\n\r\nconst Message = styled(motion.div)`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(255, 255, 255, 0.95);\r\n  padding: 2rem;\r\n  border-radius: 1rem;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  color: #6a1b9a;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst DrawingGame = () => {\r\n  const canvasRef = useRef(null);\r\n  const [currentColor, setCurrentColor] = useState(colors[0].value);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [currentTemplate] = useState(templates.bear);\r\n  const [currentPart, setCurrentPart] = useState(0);\r\n  const [completedParts, setCompletedParts] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isColoring, setIsColoring] = useState(false);\r\n  const [drawnPoints, setDrawnPoints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    canvas.width = 600;\r\n    canvas.height = 400;\r\n    \r\n    ctx.lineJoin = 'round';\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 5;\r\n\r\n    drawTemplate();\r\n  }, [currentPart, completedParts]);\r\n\r\n  const drawTemplate = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n    // Draw completed parts\r\n    completedParts.forEach(partIndex => {\r\n      const part = currentTemplate.parts[partIndex];\r\n      ctx.beginPath();\r\n      ctx.moveTo(part.path[0].x, part.path[0].y);\r\n      part.path.forEach(point => {\r\n        ctx.lineTo(point.x, point.y);\r\n      });\r\n      ctx.closePath();\r\n      ctx.fillStyle = part.color;\r\n      ctx.fill();\r\n    });\r\n\r\n    // Draw current part template as a light guide\r\n    if (!isColoring && currentPart < currentTemplate.parts.length) {\r\n      const part = currentTemplate.parts[currentPart];\r\n      ctx.beginPath();\r\n      ctx.moveTo(part.path[0].x, part.path[0].y);\r\n      part.path.forEach(point => {\r\n        ctx.lineTo(point.x, point.y);\r\n      });\r\n      ctx.closePath();\r\n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  const startDrawing = (e) => {\r\n    if (isColoring || currentPart >= currentTemplate.parts.length) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    setIsDrawing(true);\r\n    setDrawnPoints([{ x, y }]);\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.strokeStyle = currentColor;\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing || isColoring) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    setDrawnPoints(prev => [...prev, { x, y }]);\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    if (!isDrawing) return;\r\n    \r\n    setIsDrawing(false);\r\n    checkDrawing();\r\n  };\r\n\r\n  const checkDrawing = () => {\r\n    if (drawnPoints.length < 5) return;\r\n\r\n    const currentShape = currentTemplate.parts[currentPart];\r\n    const tolerance = currentShape.tolerance;\r\n    \r\n    // Simple shape matching algorithm\r\n    let matches = true;\r\n    const templatePoints = currentShape.path;\r\n    \r\n    for (let i = 0; i < templatePoints.length; i++) {\r\n      const templatePoint = templatePoints[i];\r\n      let foundMatch = false;\r\n      \r\n      for (let j = 0; j < drawnPoints.length; j++) {\r\n        const drawnPoint = drawnPoints[j];\r\n        const distance = Math.sqrt(\r\n          Math.pow(templatePoint.x - drawnPoint.x, 2) +\r\n          Math.pow(templatePoint.y - drawnPoint.y, 2)\r\n        );\r\n        \r\n        if (distance <= tolerance) {\r\n          foundMatch = true;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (!foundMatch) {\r\n        matches = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (matches) {\r\n      setCompletedParts(prev => [...prev, currentPart]);\r\n      setMessage(currentTemplate.compliments[Math.floor(Math.random() * currentTemplate.compliments.length)]);\r\n      setTimeout(() => setMessage(''), 2000);\r\n\r\n      if (currentPart + 1 >= currentTemplate.parts.length) {\r\n        setIsColoring(true);\r\n      } else {\r\n        setCurrentPart(prev => prev + 1);\r\n      }\r\n    } else {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      drawTemplate();\r\n    }\r\n    \r\n    setDrawnPoints([]);\r\n  };\r\n\r\n  const fillPart = (x, y) => {\r\n    if (!isColoring) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    completedParts.forEach((partIndex, index) => {\r\n      const part = currentTemplate.parts[partIndex];\r\n      ctx.beginPath();\r\n      ctx.moveTo(part.path[0].x, part.path[0].y);\r\n      part.path.forEach(point => {\r\n        ctx.lineTo(point.x, point.y);\r\n      });\r\n      ctx.closePath();\r\n      \r\n      if (ctx.isPointInPath(x, y)) {\r\n        part.color = currentColor;\r\n        drawTemplate();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCanvasClick = (e) => {\r\n    if (!isColoring) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    fillPart(x, y);\r\n  };\r\n\r\n  return (\r\n    <GameContainer\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <Title>\r\n        {isColoring ? '🎨 გააფერადე დათვი' : '✏️ დახატე დათვი'}\r\n      </Title>\r\n      \r\n      <CanvasContainer>\r\n        <ReferenceImage \r\n          src={`/images/${isColoring ? 'bear-colored.png' : 'bear-template.png'}`} \r\n          alt=\"სანიმუშო ნახატი\" \r\n        />\r\n        <Canvas\r\n          ref={canvasRef}\r\n          onMouseDown={startDrawing}\r\n          onMouseMove={draw}\r\n          onMouseUp={stopDrawing}\r\n          onMouseLeave={stopDrawing}\r\n          onClick={handleCanvasClick}\r\n        />\r\n      </CanvasContainer>\r\n\r\n      <ColorPalette>\r\n        {colors.map((color) => (\r\n          <ColorButton\r\n            key={color.value}\r\n            color={color.value}\r\n            onClick={() => setCurrentColor(color.value)}\r\n            title={color.name}\r\n          />\r\n        ))}\r\n      </ColorPalette>\r\n\r\n      <AnimatePresence>\r\n        {message && (\r\n          <Message\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n          >\r\n            {message}\r\n          </Message>\r\n        )}\r\n      </AnimatePresence>\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default DrawingGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}