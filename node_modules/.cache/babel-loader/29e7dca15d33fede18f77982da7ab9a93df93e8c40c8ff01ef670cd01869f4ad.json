{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNodeClientOffset = getNodeClientOffset;\nexports.getEventClientOffset = getEventClientOffset;\nexports.getDragPreviewOffset = getDragPreviewOffset;\nvar _BrowserDetector = require('./BrowserDetector');\nvar _MonotonicInterpolant = require('./MonotonicInterpolant');\nvar _MonotonicInterpolant2 = _interopRequireDefault(_MonotonicInterpolant);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint\n   no-mixed-operators: off\n*/\nvar ELEMENT_NODE = 1;\nfunction getNodeClientOffset(node) {\n  var el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n  if (!el) {\n    return null;\n  }\n  var _el$getBoundingClient = el.getBoundingClientRect(),\n    top = _el$getBoundingClient.top,\n    left = _el$getBoundingClient.left;\n  return {\n    x: left,\n    y: top\n  };\n}\nfunction getEventClientOffset(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\nfunction isImageNode(node) {\n  return node.nodeName === 'IMG' && ((0, _BrowserDetector.isFirefox)() || !document.documentElement.contains(node));\n}\nfunction getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight) {\n  var dragPreviewWidth = isImage ? dragPreview.width : sourceWidth;\n  var dragPreviewHeight = isImage ? dragPreview.height : sourceHeight;\n\n  // Work around @2x coordinate discrepancies in browsers\n  if ((0, _BrowserDetector.isSafari)() && isImage) {\n    dragPreviewHeight /= window.devicePixelRatio;\n    dragPreviewWidth /= window.devicePixelRatio;\n  }\n  return {\n    dragPreviewWidth: dragPreviewWidth,\n    dragPreviewHeight: dragPreviewHeight\n  };\n}\nfunction getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint) {\n  // The browsers will use the image intrinsic size under different conditions.\n  // Firefox only cares if it's an image, but WebKit also wants it to be detached.\n  var isImage = isImageNode(dragPreview);\n  var dragPreviewNode = isImage ? sourceNode : dragPreview;\n  var dragPreviewNodeOffsetFromClient = getNodeClientOffset(dragPreviewNode);\n  var offsetFromDragPreview = {\n    x: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n    y: clientOffset.y - dragPreviewNodeOffsetFromClient.y\n  };\n  var sourceWidth = sourceNode.offsetWidth,\n    sourceHeight = sourceNode.offsetHeight;\n  var anchorX = anchorPoint.anchorX,\n    anchorY = anchorPoint.anchorY;\n  var _getDragPreviewSize = getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight),\n    dragPreviewWidth = _getDragPreviewSize.dragPreviewWidth,\n    dragPreviewHeight = _getDragPreviewSize.dragPreviewHeight;\n  var calculateYOffset = function calculateYOffset() {\n    var interpolantY = new _MonotonicInterpolant2.default([0, 0.5, 1], [\n    // Dock to the top\n    offsetFromDragPreview.y,\n    // Align at the center\n    offsetFromDragPreview.y / sourceHeight * dragPreviewHeight,\n    // Dock to the bottom\n    offsetFromDragPreview.y + dragPreviewHeight - sourceHeight]);\n    var y = interpolantY.interpolate(anchorY);\n    // Work around Safari 8 positioning bug\n    if ((0, _BrowserDetector.isSafari)() && isImage) {\n      // We'll have to wait for @3x to see if this is entirely correct\n      y += (window.devicePixelRatio - 1) * dragPreviewHeight;\n    }\n    return y;\n  };\n  var calculateXOffset = function calculateXOffset() {\n    // Interpolate coordinates depending on anchor point\n    // If you know a simpler way to do this, let me know\n    var interpolantX = new _MonotonicInterpolant2.default([0, 0.5, 1], [\n    // Dock to the left\n    offsetFromDragPreview.x,\n    // Align at the center\n    offsetFromDragPreview.x / sourceWidth * dragPreviewWidth,\n    // Dock to the right\n    offsetFromDragPreview.x + dragPreviewWidth - sourceWidth]);\n    return interpolantX.interpolate(anchorX);\n  };\n\n  // Force offsets if specified in the options.\n  var offsetX = offsetPoint.offsetX,\n    offsetY = offsetPoint.offsetY;\n  var isManualOffsetX = offsetX === 0 || offsetX;\n  var isManualOffsetY = offsetY === 0 || offsetY;\n  return {\n    x: isManualOffsetX ? offsetX : calculateXOffset(),\n    y: isManualOffsetY ? offsetY : calculateYOffset()\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getNodeClientOffset","getEventClientOffset","getDragPreviewOffset","_BrowserDetector","require","_MonotonicInterpolant","_MonotonicInterpolant2","_interopRequireDefault","obj","__esModule","default","ELEMENT_NODE","node","el","nodeType","parentElement","_el$getBoundingClient","getBoundingClientRect","top","left","x","y","e","clientX","clientY","isImageNode","nodeName","isFirefox","document","documentElement","contains","getDragPreviewSize","isImage","dragPreview","sourceWidth","sourceHeight","dragPreviewWidth","width","dragPreviewHeight","height","isSafari","window","devicePixelRatio","sourceNode","clientOffset","anchorPoint","offsetPoint","dragPreviewNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","offsetHeight","anchorX","anchorY","_getDragPreviewSize","calculateYOffset","interpolantY","interpolate","calculateXOffset","interpolantX","offsetX","offsetY","isManualOffsetX","isManualOffsetY"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/node_modules/react-dnd-html5-backend/lib/OffsetUtils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.getNodeClientOffset = getNodeClientOffset;\nexports.getEventClientOffset = getEventClientOffset;\nexports.getDragPreviewOffset = getDragPreviewOffset;\n\nvar _BrowserDetector = require('./BrowserDetector');\n\nvar _MonotonicInterpolant = require('./MonotonicInterpolant');\n\nvar _MonotonicInterpolant2 = _interopRequireDefault(_MonotonicInterpolant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint\n   no-mixed-operators: off\n*/\nvar ELEMENT_NODE = 1;\n\nfunction getNodeClientOffset(node) {\n\tvar el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n\tif (!el) {\n\t\treturn null;\n\t}\n\n\tvar _el$getBoundingClient = el.getBoundingClientRect(),\n\t    top = _el$getBoundingClient.top,\n\t    left = _el$getBoundingClient.left;\n\n\treturn { x: left, y: top };\n}\n\nfunction getEventClientOffset(e) {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY\n\t};\n}\n\nfunction isImageNode(node) {\n\treturn node.nodeName === 'IMG' && ((0, _BrowserDetector.isFirefox)() || !document.documentElement.contains(node));\n}\n\nfunction getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight) {\n\tvar dragPreviewWidth = isImage ? dragPreview.width : sourceWidth;\n\tvar dragPreviewHeight = isImage ? dragPreview.height : sourceHeight;\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif ((0, _BrowserDetector.isSafari)() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio;\n\t\tdragPreviewWidth /= window.devicePixelRatio;\n\t}\n\treturn { dragPreviewWidth: dragPreviewWidth, dragPreviewHeight: dragPreviewHeight };\n}\n\nfunction getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint) {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tvar isImage = isImageNode(dragPreview);\n\tvar dragPreviewNode = isImage ? sourceNode : dragPreview;\n\tvar dragPreviewNodeOffsetFromClient = getNodeClientOffset(dragPreviewNode);\n\tvar offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y\n\t};\n\tvar sourceWidth = sourceNode.offsetWidth,\n\t    sourceHeight = sourceNode.offsetHeight;\n\tvar anchorX = anchorPoint.anchorX,\n\t    anchorY = anchorPoint.anchorY;\n\n\tvar _getDragPreviewSize = getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight),\n\t    dragPreviewWidth = _getDragPreviewSize.dragPreviewWidth,\n\t    dragPreviewHeight = _getDragPreviewSize.dragPreviewHeight;\n\n\tvar calculateYOffset = function calculateYOffset() {\n\t\tvar interpolantY = new _MonotonicInterpolant2.default([0, 0.5, 1], [\n\t\t// Dock to the top\n\t\toffsetFromDragPreview.y,\n\t\t// Align at the center\n\t\toffsetFromDragPreview.y / sourceHeight * dragPreviewHeight,\n\t\t// Dock to the bottom\n\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight]);\n\t\tvar y = interpolantY.interpolate(anchorY);\n\t\t// Work around Safari 8 positioning bug\n\t\tif ((0, _BrowserDetector.isSafari)() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight;\n\t\t}\n\t\treturn y;\n\t};\n\n\tvar calculateXOffset = function calculateXOffset() {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tvar interpolantX = new _MonotonicInterpolant2.default([0, 0.5, 1], [\n\t\t// Dock to the left\n\t\toffsetFromDragPreview.x,\n\t\t// Align at the center\n\t\toffsetFromDragPreview.x / sourceWidth * dragPreviewWidth,\n\t\t// Dock to the right\n\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth]);\n\t\treturn interpolantX.interpolate(anchorX);\n\t};\n\n\t// Force offsets if specified in the options.\n\tvar offsetX = offsetPoint.offsetX,\n\t    offsetY = offsetPoint.offsetY;\n\n\tvar isManualOffsetX = offsetX === 0 || offsetX;\n\tvar isManualOffsetY = offsetY === 0 || offsetY;\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset()\n\t};\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}