{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin: 20px;\n  width: fit-content;\n`;\n_c = Board;\nconst PuzzlePiece = styled.div`\n  width: ${props => 400 / props.size}px;\n  height: ${props => 400 / props.size}px;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 1px solid #ddd;\n  cursor: ${props => props.isCorrect ? 'default' : 'grab'};\n  transition: transform 0.2s;\n  \n  &:hover {\n    transform: ${props => props.isCorrect ? 'none' : 'scale(1.05)'};\n  }\n`;\n_c2 = PuzzlePiece;\nconst PuzzleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n_c3 = PuzzleContainer;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({\n      length: totalPieces\n    }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${index % difficulty * 100 / (difficulty - 1)}% ${Math.floor(index / difficulty) * 100 / (difficulty - 1)}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n    setPieces(initialPieces);\n    setCorrectPositions(new Set());\n  }, [difficulty, image]);\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const newPieces = Array.from(pieces);\n    const [removed] = newPieces.splice(result.source.index, 1);\n    newPieces.splice(result.destination.index, 0, removed);\n    const newCorrectPositions = new Set();\n    newPieces.forEach((piece, index) => {\n      if (parseInt(piece.id) === index) {\n        newCorrectPositions.add(index);\n      }\n    });\n    setPieces(newPieces);\n    setCorrectPositions(newCorrectPositions);\n  };\n  return /*#__PURE__*/_jsxDEV(PuzzleContainer, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"puzzle-board\",\n        direction: \"horizontal\",\n        children: provided => /*#__PURE__*/_jsxDEV(Board, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          size: difficulty,\n          children: [pieces.map((piece, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: piece.id,\n            index: index,\n            isDragDisabled: correctPositions.has(index),\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n                image: image,\n                size: difficulty,\n                bgPosition: piece.bgPosition,\n                isCorrect: correctPositions.has(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)\n          }, piece.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"hBVYSO0dFLhPzWFGDpqe/ct2nME=\");\n_c4 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"PuzzlePiece\");\n$RefreshReg$(_c3, \"PuzzleContainer\");\n$RefreshReg$(_c4, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","styled","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Board","div","props","size","_c","PuzzlePiece","image","bgPosition","isCorrect","_c2","PuzzleContainer","_c3","PuzzleBoard","difficulty","onProgress","onComplete","_s","pieces","setPieces","correctPositions","setCorrectPositions","Set","totalPieces","initialPieces","Array","from","length","_","index","id","String","Math","floor","correctIndex","sort","random","progress","round","handleDragEnd","result","destination","newPieces","removed","splice","source","newCorrectPositions","forEach","piece","parseInt","add","children","onDragEnd","droppableId","direction","provided","ref","innerRef","droppableProps","map","draggableId","isDragDisabled","has","snapshot","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c4","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin: 20px;\n  width: fit-content;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: ${props => 400 / props.size}px;\n  height: ${props => 400 / props.size}px;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 1px solid #ddd;\n  cursor: ${props => props.isCorrect ? 'default' : 'grab'};\n  transition: transform 0.2s;\n  \n  &:hover {\n    transform: ${props => props.isCorrect ? 'none' : 'scale(1.05)'};\n  }\n`;\n\nconst PuzzleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete }) => {\n  const [pieces, setPieces] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({ length: totalPieces }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${((index % difficulty) * 100) / (difficulty - 1)}% ${(Math.floor(index / difficulty) * 100) / (difficulty - 1)}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n\n    setPieces(initialPieces);\n    setCorrectPositions(new Set());\n  }, [difficulty, image]);\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const newPieces = Array.from(pieces);\n    const [removed] = newPieces.splice(result.source.index, 1);\n    newPieces.splice(result.destination.index, 0, removed);\n\n    const newCorrectPositions = new Set();\n    newPieces.forEach((piece, index) => {\n      if (parseInt(piece.id) === index) {\n        newCorrectPositions.add(index);\n      }\n    });\n\n    setPieces(newPieces);\n    setCorrectPositions(newCorrectPositions);\n  };\n\n  return (\n    <PuzzleContainer>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"puzzle-board\" direction=\"horizontal\">\n          {(provided) => (\n            <Board\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              size={difficulty}\n            >\n              {pieces.map((piece, index) => (\n                <Draggable\n                  key={piece.id}\n                  draggableId={piece.id}\n                  index={index}\n                  isDragDisabled={correctPositions.has(index)}\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <PuzzlePiece\n                        image={image}\n                        size={difficulty}\n                        bgPosition={piece.bgPosition}\n                        isCorrect={correctPositions.has(index)}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Board>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </PuzzleContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}