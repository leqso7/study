{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null\n};\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const saved = localStorage.getItem('gameProgress');\n    return saved ? JSON.parse(saved) : {\n      completedTasks: [],\n      taskScores: {},\n      puzzles: [],\n      completedScrambleTasks: []\n    };\n  });\n  const updatePlayerName = name => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n  const updateGameProgress = useCallback((gameType, taskId, progress) => {\n    setGameProgress(prev => {\n      const newProgress = {\n        ...prev\n      };\n      switch (gameType) {\n        case 'tasks':\n          if (!newProgress.completedTasks) {\n            newProgress.completedTasks = [];\n          }\n          if (!newProgress.completedTasks.includes(taskId)) {\n            newProgress.completedTasks = [...newProgress.completedTasks, taskId];\n          }\n          newProgress.taskScores = {\n            ...newProgress.taskScores,\n            [taskId]: progress\n          };\n          break;\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks) {\n            newProgress.completedScrambleTasks = [];\n          }\n          if (!newProgress.completedScrambleTasks.includes(taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, taskId];\n          }\n          break;\n      }\n\n      // ვინახავთ localStorage-ში\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  // დამხმარე ფუნქცია სიზუსტის გამოსათვლელად\n  const calculateAccuracy = (totalPieces, errors) => {\n    const correctFirstTry = totalPieces - errors;\n    return Math.round(correctFirstTry / totalPieces * 100);\n  };\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"aSVtOFrLY3lnjwYjcrW2BFu+wm4=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","jsxDEV","_jsxDEV","PlayerContext","initialGameProgress","puzzles","completedScrambleTasks","taskScores","completedTasks","scrambleScores","lastPlayed","PlayerProvider","children","_s","playerName","setPlayerName","localStorage","getItem","showNameModal","setShowNameModal","gameProgress","setGameProgress","saved","JSON","parse","updatePlayerName","name","setItem","updateGameProgress","gameType","taskId","progress","prev","newProgress","includes","stringify","calculateAccuracy","totalPieces","errors","correctFirstTry","Math","round","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\n\nconst PlayerContext = createContext();\n\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null\n};\n\nexport const PlayerProvider = ({ children }) => {\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const saved = localStorage.getItem('gameProgress');\n    return saved ? JSON.parse(saved) : {\n      completedTasks: [],\n      taskScores: {},\n      puzzles: [],\n      completedScrambleTasks: []\n    };\n  });\n\n  const updatePlayerName = (name) => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n\n  const updateGameProgress = useCallback((gameType, taskId, progress) => {\n    setGameProgress(prev => {\n      const newProgress = { ...prev };\n      \n      switch(gameType) {\n        case 'tasks':\n          if (!newProgress.completedTasks) {\n            newProgress.completedTasks = [];\n          }\n          if (!newProgress.completedTasks.includes(taskId)) {\n            newProgress.completedTasks = [...newProgress.completedTasks, taskId];\n          }\n          newProgress.taskScores = {\n            ...newProgress.taskScores,\n            [taskId]: progress\n          };\n          break;\n          \n        case 'scramble':\n          if (!newProgress.completedScrambleTasks) {\n            newProgress.completedScrambleTasks = [];\n          }\n          if (!newProgress.completedScrambleTasks.includes(taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, taskId];\n          }\n          break;\n      }\n      \n      // ვინახავთ localStorage-ში\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  // დამხმარე ფუნქცია სიზუსტის გამოსათვლელად\n  const calculateAccuracy = (totalPieces, errors) => {\n    const correctFirstTry = totalPieces - errors;\n    return Math.round((correctFirstTry / totalPieces) * 100);\n  };\n\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n\n  return (\n    <PlayerContext.Provider value={value}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}