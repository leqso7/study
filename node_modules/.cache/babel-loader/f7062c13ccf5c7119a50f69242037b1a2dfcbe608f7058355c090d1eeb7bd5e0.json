{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null,\n  stats: {\n    totalPuzzlesCompleted: 0,\n    totalTasksCompleted: 0,\n    totalScrambleCompleted: 0\n  }\n};\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : initialGameProgress;\n  });\n  useEffect(() => {\n    localStorage.setItem('gameProgress', JSON.stringify(gameProgress));\n  }, [gameProgress]);\n  const updateGameProgress = (gameType, data) => {\n    const timestamp = new Date().toISOString();\n    setGameProgress(prevProgress => {\n      const newProgress = {\n        ...prevProgress\n      };\n      const stats = {\n        ...prevProgress.stats\n      };\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles.includes(data.puzzleId)) {\n            newProgress.puzzles = [...newProgress.puzzles, data.puzzleId];\n            stats.totalPuzzlesCompleted++;\n          }\n          break;\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks.includes(data.taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, data.taskId];\n            stats.totalScrambleCompleted++;\n          }\n          if (data.score !== undefined) {\n            newProgress.scrambleScores[data.taskId] = {\n              score: data.score,\n              timestamp\n            };\n          }\n          break;\n        case 'task':\n          if (!newProgress.completedTasks.includes(data.taskId)) {\n            newProgress.completedTasks = [...newProgress.completedTasks, data.taskId];\n            stats.totalTasksCompleted++;\n          }\n          if (data.score !== undefined) {\n            newProgress.taskScores[data.taskId] = {\n              score: data.score,\n              timestamp\n            };\n          }\n          break;\n      }\n      newProgress.lastPlayed = timestamp;\n      newProgress.stats = stats;\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n  const resetProgress = () => {\n    setGameProgress(initialGameProgress);\n    localStorage.setItem('gameProgress', JSON.stringify(initialGameProgress));\n  };\n  const value = {\n    gameProgress,\n    updateGameProgress,\n    resetProgress\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"Pz6RfhI/LErcu8fIWsCkOXj+TCA=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","PlayerContext","initialGameProgress","puzzles","completedScrambleTasks","taskScores","completedTasks","scrambleScores","lastPlayed","stats","totalPuzzlesCompleted","totalTasksCompleted","totalScrambleCompleted","PlayerProvider","children","_s","gameProgress","setGameProgress","savedProgress","localStorage","getItem","JSON","parse","setItem","stringify","updateGameProgress","gameType","data","timestamp","Date","toISOString","prevProgress","newProgress","includes","puzzleId","taskId","score","undefined","resetProgress","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst PlayerContext = createContext();\n\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null,\n  stats: {\n    totalPuzzlesCompleted: 0,\n    totalTasksCompleted: 0,\n    totalScrambleCompleted: 0\n  }\n};\n\nexport const PlayerProvider = ({ children }) => {\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : initialGameProgress;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('gameProgress', JSON.stringify(gameProgress));\n  }, [gameProgress]);\n\n  const updateGameProgress = (gameType, data) => {\n    const timestamp = new Date().toISOString();\n\n    setGameProgress(prevProgress => {\n      const newProgress = { ...prevProgress };\n      const stats = { ...prevProgress.stats };\n\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles.includes(data.puzzleId)) {\n            newProgress.puzzles = [...newProgress.puzzles, data.puzzleId];\n            stats.totalPuzzlesCompleted++;\n          }\n          break;\n\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks.includes(data.taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, data.taskId];\n            stats.totalScrambleCompleted++;\n          }\n          if (data.score !== undefined) {\n            newProgress.scrambleScores[data.taskId] = {\n              score: data.score,\n              timestamp\n            };\n          }\n          break;\n\n        case 'task':\n          if (!newProgress.completedTasks.includes(data.taskId)) {\n            newProgress.completedTasks = [...newProgress.completedTasks, data.taskId];\n            stats.totalTasksCompleted++;\n          }\n          if (data.score !== undefined) {\n            newProgress.taskScores[data.taskId] = {\n              score: data.score,\n              timestamp\n            };\n          }\n          break;\n      }\n\n      newProgress.lastPlayed = timestamp;\n      newProgress.stats = stats;\n      \n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      \n      return newProgress;\n    });\n  };\n\n  const resetProgress = () => {\n    setGameProgress(initialGameProgress);\n    localStorage.setItem('gameProgress', JSON.stringify(initialGameProgress));\n  };\n\n  const value = {\n    gameProgress,\n    updateGameProgress,\n    resetProgress\n  };\n\n  return (\n    <PlayerContext.Provider value={value}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}