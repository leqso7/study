{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\ScrambleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../styles/ScrambleGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animals = [{\n  name: 'ზებრა',\n  image: 'ზებრა.webp'\n}, {\n  name: 'სპილო',\n  image: 'სპილო.webp'\n}, {\n  name: 'ლომი',\n  image: 'ლომი.webp'\n}, {\n  name: 'დათვი',\n  image: 'დათვი.webp'\n}, {\n  name: 'მგელი',\n  image: 'მგელო.webp'\n}, {\n  name: 'ირემი',\n  image: 'ირემი.webp'\n}, {\n  name: 'თხა',\n  image: 'თხა.webp'\n}, {\n  name: 'კურდღელი',\n  image: 'კურდღელი.webp'\n}, {\n  name: 'ფლამინგო',\n  image: 'ფლამინგო.webp'\n}, {\n  name: 'სელაპი',\n  image: 'სელაპი.webp'\n}, {\n  name: 'ციყვი',\n  image: 'ციყვი.webp'\n}, {\n  name: 'ენოტი',\n  image: 'ენოტი.webp'\n}, {\n  name: 'ზარმაცა',\n  image: 'ზარმაცა.webp'\n}, {\n  name: 'ზღარბი',\n  image: 'ზღარბი.webp'\n}, {\n  name: 'ქამელეონი',\n  image: 'ქამელეონი.webp'\n}, {\n  name: 'ოპოსუმი',\n  image: 'ოპოსუმი.webp'\n}, {\n  name: 'რვაფეხა',\n  image: 'რვაფეხა.webp'\n}, {\n  name: 'თახვი',\n  image: 'თახვი.webp'\n}, {\n  name: 'ბეგემოტი',\n  image: 'ბეგემოტი.webp'\n}, {\n  name: 'ლამა',\n  image: 'ლამა.webp'\n}, {\n  name: 'ჟირაფი',\n  image: 'ჟირაფი.webp'\n}, {\n  name: 'კენგურუ',\n  image: 'კენგურუ.webp'\n}, {\n  name: 'ბუ',\n  image: 'ბუ.webp'\n}, {\n  name: 'პანდა',\n  image: 'პანდა.webp'\n}, {\n  name: 'მელია',\n  image: 'მელია.webp'\n}, {\n  name: 'დელფინი',\n  image: 'დელფინი.webp'\n}, {\n  name: 'კოალა',\n  image: 'კოალა.webp'\n}, {\n  name: 'პინგვინი',\n  image: 'პნგვინი.webp'\n}, {\n  name: 'კიბორჩხალა',\n  image: 'კიბორჩხალა.webp'\n}, {\n  name: 'ობობა',\n  image: 'ობობა.webp'\n}, {\n  name: 'გველი',\n  image: 'გველი.webp'\n}, {\n  name: 'ხვლიკი',\n  image: 'ხვლიკი.webp'\n}, {\n  name: 'ზვიგენი',\n  image: 'ზვიგენი.webp'\n}, {\n  name: 'ფარშევანგი',\n  image: 'ფარშევანგი.webp'\n}, {\n  name: 'კოდალა',\n  image: 'კოდალა.webp'\n}, {\n  name: 'აქლემი',\n  image: 'აქლემი.webp'\n}, {\n  name: 'პეპელა',\n  image: 'პეპელა.webp'\n}, {\n  name: 'არწივი',\n  image: 'არწივი.webp'\n}];\nconst scrambleWord = word => {\n  const originalLetters = word.split('');\n  let scrambledIndices = Array.from({\n    length: word.length\n  }, (_, i) => i);\n  for (let i = 0; i < word.length; i++) {\n    let currentIndex = scrambledIndices[i];\n    if (currentIndex === i) {\n      for (let j = i + 1; j < word.length; j++) {\n        if (scrambledIndices[j] !== i) {\n          [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n          break;\n        }\n      }\n      if (scrambledIndices[i] === i) {\n        for (let j = i - 1; j >= 0; j--) {\n          if (scrambledIndices[j] !== j) {\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\n            break;\n          }\n        }\n      }\n    }\n  }\n  return scrambledIndices.map((index, i) => ({\n    id: `letter-${i}`,\n    content: originalLetters[index],\n    originalIndex: index\n  }));\n};\nconst ScrambleGame = () => {\n  _s();\n  const [currentAnimal, setCurrentAnimal] = useState(animals[Math.floor(Math.random() * animals.length)]);\n  const [scrambledLetters, setScrambledLetters] = useState(scrambleWord(currentAnimal.name));\n  const [placedLetters, setPlacedLetters] = useState(Array(currentAnimal.name.length).fill(null));\n  const [correctPositions, setCorrectPositions] = useState([]);\n  const [wrongPosition, setWrongPosition] = useState(null);\n  const lettersContainerRef = useRef(null);\n  const targetContainerRef = useRef(null);\n  const [draggedLetter, setDraggedLetter] = useState(null);\n  const initializeAnimal = animal => {\n    setCurrentAnimal(animal);\n    setScrambledLetters(scrambleWord(animal.name));\n    setPlacedLetters(Array(animal.name.length).fill(null));\n    setCorrectPositions([]);\n  };\n  const handleDragStart = (e, letter, index) => {\n    setDraggedLetter({\n      letter,\n      index\n    });\n    e.target.classList.add('dragging');\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, targetIndex) => {\n    e.preventDefault();\n    if (!draggedLetter) return;\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\n      setWrongPosition(targetIndex);\n      setTimeout(() => {\n        setWrongPosition(null);\n      }, 500);\n      return;\n    }\n    const newPlacedLetters = [...placedLetters];\n    const newScrambledLetters = [...scrambledLetters];\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\n    newScrambledLetters.splice(draggedLetter.index, 1);\n    setPlacedLetters(newPlacedLetters);\n    setScrambledLetters(newScrambledLetters);\n    const newCorrectPositions = [];\n    newPlacedLetters.forEach((letter, index) => {\n      if (letter && letter.content === currentAnimal.name[index]) {\n        newCorrectPositions.push(index);\n      }\n    });\n    setCorrectPositions(newCorrectPositions);\n    if (newCorrectPositions.length === currentAnimal.name.length) {\n      const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n      initializeAnimal(randomAnimal);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scramble-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"game-title\",\n      children: \"\\u10D3\\u10D0\\u10D0\\u10DA\\u10D0\\u10D2\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0\\u10D0\\u10D3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-instructions\",\n      children: \"\\u10D2\\u10D0\\u10D3\\u10DB\\u10DD\\u10D8\\u10E2\\u10D0\\u10DC\\u10D4 \\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8 \\u10D3\\u10D0 \\u10E9\\u10D0\\u10E1\\u10D5\\u10D8 \\u10E1\\u10EC\\u10DD\\u10E0 \\u10D0\\u10D3\\u10D2\\u10D8\\u10DA\\u10D0\\u10E1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/${currentAnimal.image}`,\n      alt: currentAnimal.name,\n      className: \"animal-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetContainerRef,\n      className: \"target-container\",\n      children: placedLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \n                      ${letter ? 'filled' : ''} \n                      ${wrongPosition === index ? 'wrong' : ''}`,\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, index),\n        children: letter && letter.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lettersContainerRef,\n      className: \"letters-container\",\n      children: scrambledLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-id\": letter.id,\n        className: \"letter\",\n        draggable: true,\n        onDragStart: e => handleDragStart(e, letter, index),\n        children: letter.content\n      }, letter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrambleGame, \"RWqVv8UYm3K9xO4qVgtwkl+7NNk=\");\n_c = ScrambleGame;\nexport default ScrambleGame;\nvar _c;\n$RefreshReg$(_c, \"ScrambleGame\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","animals","name","image","scrambleWord","word","originalLetters","split","scrambledIndices","Array","from","length","_","i","currentIndex","j","map","index","id","content","originalIndex","ScrambleGame","_s","currentAnimal","setCurrentAnimal","Math","floor","random","scrambledLetters","setScrambledLetters","placedLetters","setPlacedLetters","fill","correctPositions","setCorrectPositions","wrongPosition","setWrongPosition","lettersContainerRef","targetContainerRef","draggedLetter","setDraggedLetter","initializeAnimal","animal","handleDragStart","e","letter","target","classList","add","handleDragOver","preventDefault","handleDrop","targetIndex","setTimeout","newPlacedLetters","newScrambledLetters","splice","newCorrectPositions","forEach","push","randomAnimal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","ref","includes","onDragOver","onDrop","draggable","onDragStart","_c","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/ScrambleGame.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport '../styles/ScrambleGame.css';\r\n\r\nconst animals = [\r\n  { name: 'ზებრა', image: 'ზებრა.webp' },\r\n  { name: 'სპილო', image: 'სპილო.webp' },\r\n  { name: 'ლომი', image: 'ლომი.webp' },\r\n  { name: 'დათვი', image: 'დათვი.webp' },\r\n  { name: 'მგელი', image: 'მგელო.webp' },\r\n  { name: 'ირემი', image: 'ირემი.webp' },\r\n  { name: 'თხა', image: 'თხა.webp' },\r\n  { name: 'კურდღელი', image: 'კურდღელი.webp' },\r\n  { name: 'ფლამინგო', image: 'ფლამინგო.webp' },\r\n  { name: 'სელაპი', image: 'სელაპი.webp' },\r\n  { name: 'ციყვი', image: 'ციყვი.webp' },\r\n  { name: 'ენოტი', image: 'ენოტი.webp' },\r\n  { name: 'ზარმაცა', image: 'ზარმაცა.webp' },\r\n  { name: 'ზღარბი', image: 'ზღარბი.webp' },\r\n  { name: 'ქამელეონი', image: 'ქამელეონი.webp' },\r\n  { name: 'ოპოსუმი', image: 'ოპოსუმი.webp' },\r\n  { name: 'რვაფეხა', image: 'რვაფეხა.webp' },\r\n  { name: 'თახვი', image: 'თახვი.webp' },\r\n  { name: 'ბეგემოტი', image: 'ბეგემოტი.webp' },\r\n  { name: 'ლამა', image: 'ლამა.webp' },\r\n  { name: 'ჟირაფი', image: 'ჟირაფი.webp' },\r\n  { name: 'კენგურუ', image: 'კენგურუ.webp' },\r\n  { name: 'ბუ', image: 'ბუ.webp' },\r\n  { name: 'პანდა', image: 'პანდა.webp' },\r\n  { name: 'მელია', image: 'მელია.webp' },\r\n  { name: 'დელფინი', image: 'დელფინი.webp' },\r\n  { name: 'კოალა', image: 'კოალა.webp' },\r\n  { name: 'პინგვინი', image: 'პნგვინი.webp' },\r\n  { name: 'კიბორჩხალა', image: 'კიბორჩხალა.webp' },\r\n  { name: 'ობობა', image: 'ობობა.webp' },\r\n  { name: 'გველი', image: 'გველი.webp' },\r\n  { name: 'ხვლიკი', image: 'ხვლიკი.webp' },\r\n  { name: 'ზვიგენი', image: 'ზვიგენი.webp' },\r\n  { name: 'ფარშევანგი', image: 'ფარშევანგი.webp' },\r\n  { name: 'კოდალა', image: 'კოდალა.webp' },\r\n  { name: 'აქლემი', image: 'აქლემი.webp' },\r\n  { name: 'პეპელა', image: 'პეპელა.webp' },\r\n  { name: 'არწივი', image: 'არწივი.webp' }\r\n];\r\n\r\nconst scrambleWord = (word) => {\r\n  const originalLetters = word.split('');\r\n  let scrambledIndices = Array.from({ length: word.length }, (_, i) => i);\r\n  \r\n  for (let i = 0; i < word.length; i++) {\r\n    let currentIndex = scrambledIndices[i];\r\n    if (currentIndex === i) {\r\n      for (let j = i + 1; j < word.length; j++) {\r\n        if (scrambledIndices[j] !== i) {\r\n          [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\r\n          break;\r\n        }\r\n      }\r\n      if (scrambledIndices[i] === i) {\r\n        for (let j = i - 1; j >= 0; j--) {\r\n          if (scrambledIndices[j] !== j) {\r\n            [scrambledIndices[i], scrambledIndices[j]] = [scrambledIndices[j], scrambledIndices[i]];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  return scrambledIndices.map((index, i) => ({\r\n    id: `letter-${i}`,\r\n    content: originalLetters[index],\r\n    originalIndex: index\r\n  }));\r\n};\r\n\r\nconst ScrambleGame = () => {\r\n  const [currentAnimal, setCurrentAnimal] = useState(animals[Math.floor(Math.random() * animals.length)]);\r\n  const [scrambledLetters, setScrambledLetters] = useState(scrambleWord(currentAnimal.name));\r\n  const [placedLetters, setPlacedLetters] = useState(Array(currentAnimal.name.length).fill(null));\r\n  const [correctPositions, setCorrectPositions] = useState([]);\r\n  const [wrongPosition, setWrongPosition] = useState(null);\r\n  const lettersContainerRef = useRef(null);\r\n  const targetContainerRef = useRef(null);\r\n  const [draggedLetter, setDraggedLetter] = useState(null);\r\n\r\n  const initializeAnimal = (animal) => {\r\n    setCurrentAnimal(animal);\r\n    setScrambledLetters(scrambleWord(animal.name));\r\n    setPlacedLetters(Array(animal.name.length).fill(null));\r\n    setCorrectPositions([]);\r\n  };\r\n\r\n  const handleDragStart = (e, letter, index) => {\r\n    setDraggedLetter({ letter, index });\r\n    e.target.classList.add('dragging');\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (e, targetIndex) => {\r\n    e.preventDefault();\r\n    if (!draggedLetter) return;\r\n\r\n    if (draggedLetter.letter.content !== currentAnimal.name[targetIndex]) {\r\n      setWrongPosition(targetIndex);\r\n      setTimeout(() => {\r\n        setWrongPosition(null);\r\n      }, 500);\r\n      return;\r\n    }\r\n\r\n    const newPlacedLetters = [...placedLetters];\r\n    const newScrambledLetters = [...scrambledLetters];\r\n\r\n    newPlacedLetters[targetIndex] = draggedLetter.letter;\r\n    newScrambledLetters.splice(draggedLetter.index, 1);\r\n\r\n    setPlacedLetters(newPlacedLetters);\r\n    setScrambledLetters(newScrambledLetters);\r\n\r\n    const newCorrectPositions = [];\r\n    newPlacedLetters.forEach((letter, index) => {\r\n      if (letter && letter.content === currentAnimal.name[index]) {\r\n        newCorrectPositions.push(index);\r\n      }\r\n    });\r\n\r\n    setCorrectPositions(newCorrectPositions);\r\n\r\n    if (newCorrectPositions.length === currentAnimal.name.length) {\r\n      const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\r\n      initializeAnimal(randomAnimal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scramble-game\">\r\n      <h2 className=\"game-title\">დაალაგე ასოები სწორად</h2>\r\n      <p className=\"game-instructions\">\r\n        გადმოიტანე ასოები და ჩასვი სწორ ადგილას\r\n      </p>\r\n      \r\n      <img \r\n        src={`${process.env.PUBLIC_URL}/photos/${currentAnimal.image}`} \r\n        alt={currentAnimal.name}\r\n        className=\"animal-image\"\r\n      />\r\n      \r\n      <div \r\n        ref={targetContainerRef}\r\n        className=\"target-container\"\r\n      >\r\n        {placedLetters.map((letter, index) => (\r\n          <div\r\n            key={index}\r\n            className={`letter-slot ${correctPositions.includes(index) ? 'correct' : ''} \r\n                      ${letter ? 'filled' : ''} \r\n                      ${wrongPosition === index ? 'wrong' : ''}`}\r\n            onDragOver={handleDragOver}\r\n            onDrop={(e) => handleDrop(e, index)}\r\n          >\r\n            {letter && letter.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div \r\n        ref={lettersContainerRef}\r\n        className=\"letters-container\"\r\n      >\r\n        {scrambledLetters.map((letter, index) => (\r\n          <div\r\n            key={letter.id}\r\n            data-id={letter.id}\r\n            className=\"letter\"\r\n            draggable={true}\r\n            onDragStart={(e) => handleDragStart(e, letter, index)}\r\n          >\r\n            {letter.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrambleGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}