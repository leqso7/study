{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexports.default = dragOffset;\nexports.getSourceClientOffset = getSourceClientOffset;\nexports.getDifferenceFromInitialOffset = getDifferenceFromInitialOffset;\nvar _dragDrop = require('../actions/dragDrop');\nvar initialState = {\n  initialSourceClientOffset: null,\n  initialClientOffset: null,\n  clientOffset: null\n};\nfunction areOffsetsEqual(offsetA, offsetB) {\n  if (offsetA === offsetB) {\n    return true;\n  }\n  return offsetA && offsetB && offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n}\nfunction dragOffset() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n  switch (action.type) {\n    case _dragDrop.BEGIN_DRAG:\n      return {\n        initialSourceClientOffset: action.sourceClientOffset,\n        initialClientOffset: action.clientOffset,\n        clientOffset: action.clientOffset\n      };\n    case _dragDrop.HOVER:\n      if (areOffsetsEqual(state.clientOffset, action.clientOffset)) {\n        return state;\n      }\n      return _extends({}, state, {\n        clientOffset: action.clientOffset\n      });\n    case _dragDrop.END_DRAG:\n    case _dragDrop.DROP:\n      return initialState;\n    default:\n      return state;\n  }\n}\nfunction getSourceClientOffset(state) {\n  var clientOffset = state.clientOffset,\n    initialClientOffset = state.initialClientOffset,\n    initialSourceClientOffset = state.initialSourceClientOffset;\n  if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n    return null;\n  }\n  return {\n    x: clientOffset.x + initialSourceClientOffset.x - initialClientOffset.x,\n    y: clientOffset.y + initialSourceClientOffset.y - initialClientOffset.y\n  };\n}\nfunction getDifferenceFromInitialOffset(state) {\n  var clientOffset = state.clientOffset,\n    initialClientOffset = state.initialClientOffset;\n  if (!clientOffset || !initialClientOffset) {\n    return null;\n  }\n  return {\n    x: clientOffset.x - initialClientOffset.x,\n    y: clientOffset.y - initialClientOffset.y\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","dragOffset","getSourceClientOffset","getDifferenceFromInitialOffset","_dragDrop","require","initialState","initialSourceClientOffset","initialClientOffset","clientOffset","areOffsetsEqual","offsetA","offsetB","x","y","state","undefined","action","type","BEGIN_DRAG","sourceClientOffset","HOVER","END_DRAG","DROP"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/node_modules/dnd-core/lib/reducers/dragOffset.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = dragOffset;\nexports.getSourceClientOffset = getSourceClientOffset;\nexports.getDifferenceFromInitialOffset = getDifferenceFromInitialOffset;\n\nvar _dragDrop = require('../actions/dragDrop');\n\nvar initialState = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null\n};\n\nfunction areOffsetsEqual(offsetA, offsetB) {\n\tif (offsetA === offsetB) {\n\t\treturn true;\n\t}\n\treturn offsetA && offsetB && offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n}\n\nfunction dragOffset() {\n\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\tvar action = arguments[1];\n\n\tswitch (action.type) {\n\t\tcase _dragDrop.BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: action.sourceClientOffset,\n\t\t\t\tinitialClientOffset: action.clientOffset,\n\t\t\t\tclientOffset: action.clientOffset\n\t\t\t};\n\t\tcase _dragDrop.HOVER:\n\t\t\tif (areOffsetsEqual(state.clientOffset, action.clientOffset)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\treturn _extends({}, state, {\n\t\t\t\tclientOffset: action.clientOffset\n\t\t\t});\n\t\tcase _dragDrop.END_DRAG:\n\t\tcase _dragDrop.DROP:\n\t\t\treturn initialState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction getSourceClientOffset(state) {\n\tvar clientOffset = state.clientOffset,\n\t    initialClientOffset = state.initialClientOffset,\n\t    initialSourceClientOffset = state.initialSourceClientOffset;\n\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null;\n\t}\n\treturn {\n\t\tx: clientOffset.x + initialSourceClientOffset.x - initialClientOffset.x,\n\t\ty: clientOffset.y + initialSourceClientOffset.y - initialClientOffset.y\n\t};\n}\n\nfunction getDifferenceFromInitialOffset(state) {\n\tvar clientOffset = state.clientOffset,\n\t    initialClientOffset = state.initialClientOffset;\n\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null;\n\t}\n\treturn {\n\t\tx: clientOffset.x - initialClientOffset.x,\n\t\ty: clientOffset.y - initialClientOffset.y\n\t};\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}