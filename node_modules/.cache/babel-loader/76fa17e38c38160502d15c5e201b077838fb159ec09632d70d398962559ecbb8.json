{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n_c = GameContainer;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n_c2 = TopSection;\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  height: 100%;\n`;\n_c3 = RightSection;\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n_c4 = Card;\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n_c5 = CardTitle;\nconst ImageCard = styled(Card)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = ImageCard;\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  ${props => props.isExpanded && `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    border: none;\n    border-radius: 0;\n  `}\n`;\n_c7 = ImageContainer;\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.isExpanded ? 'contain' : `${props.size * 100}% ${props.size * 100}%`};\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: all 0.3s ease;\n`;\n_c8 = OriginalImage;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n_c9 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c10 = PuzzlePiece;\nconst AnswerButton = styled.button`\n  padding: 1rem;\n  font-size: 1.2rem;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #45a049;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  &:disabled {\n    background: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c11 = AnswerButton;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c12 = ButtonsContainer;\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c13 = Button;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c14 = Message;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c15 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c16 = DraggedPiece;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #2196F3;\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n  margin: 0 auto;\n`;\n_c17 = LoadingSpinner;\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n_c18 = LoadingOverlay;\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu,\n  onImageChange,\n  onError\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [errorCount, setErrorCount] = useState(0);\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageExpanded, setIsImageExpanded] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [isToastClosing, setIsToastClosing] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswerSubmitted, setIsAnswerSubmitted] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n    return pieces;\n  }, [difficulty]);\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      try {\n        const totalPieces = difficulty * difficulty;\n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n        const shuffledPieces = [...initialPieces].sort(() => Math.random() - 0.5).map((piece, index) => ({\n          ...piece,\n          currentPos: index\n        }));\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  const handlePaste = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      var _e$clipboardData;\n      const items = (_e$clipboardData = e.clipboardData) === null || _e$clipboardData === void 0 ? void 0 : _e$clipboardData.items;\n      if (!items) return;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const file = items[i].getAsFile();\n          const reader = new FileReader();\n          reader.onload = event => {\n            onImageChange(event.target.result);\n            setIsLoading(false);\n          };\n          reader.readAsDataURL(file);\n          return;\n        }\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error handling paste:', error);\n      setIsLoading(false);\n    }\n  };\n  const handleSourcePieceClick = index => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n      setErrorCount(prev => prev + 1);\n      onError();\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const handleAnswerClick = answer => {\n    if (!isAnswerSubmitted) {\n      setSelectedAnswer(answer);\n      const isCorrect = checkAnswer(answer);\n      if (isCorrect) {\n        const newCorrectPositions = new Set(correctPositions);\n        newCorrectPositions.add(answer);\n        setCorrectPositions(newCorrectPositions);\n        onProgress(newCorrectPositions.size / (difficulty * difficulty) * 100);\n      } else {\n        setErrorCount(prev => prev + 1);\n        onError();\n      }\n      setIsAnswerSubmitted(true);\n      setTimeout(() => {\n        setIsAnswerSubmitted(false);\n        setSelectedAnswer(null);\n      }, 1000);\n    }\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async clipboardItems => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = e => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch(err => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n  const toggleImageExpand = () => {\n    setIsImageExpanded(!isImageExpanded);\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete(errorCount);\n    }\n  }, [correctPositions, difficulty, onComplete, errorCount, onProgress]);\n  useEffect(() => {\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TopSection, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFAE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), \"\\u10D0\\u10E5 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4 \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n            children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            size: difficulty,\n            isTarget: true,\n            children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n              image: piece ? image : null,\n              size: difficulty,\n              bgPosition: piece ? piece.bgPosition : '',\n              isTarget: !piece,\n              isPlaced: piece !== null,\n              isWrongAttempt: wrongAttempts.has(index),\n              onClick: () => handleTargetPieceClick(index),\n              children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightSection, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83E\\uDDE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n              children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Board, {\n              size: difficulty,\n              isTarget: false,\n              children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n                image: image,\n                size: difficulty,\n                bgPosition: piece.bgPosition,\n                onClick: () => handleSourcePieceClick(index),\n                isDragging: draggedPiece === index,\n                children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n                  children: parseInt(piece.id) + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this)\n              }, piece.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDDBC\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this), \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 'auto',\n                fontSize: '0.8em',\n                opacity: 0.7\n              },\n              children: \"(\\u10D3\\u10D0\\u10D0\\u10ED\\u10D8\\u10E0\\u10D4 \\u10D2\\u10D0\\u10E1\\u10D0\\u10D3\\u10D8\\u10D3\\u10D4\\u10D1\\u10DA\\u10D0\\u10D3)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n            size: difficulty,\n            isExpanded: isImageExpanded,\n            onClick: toggleImageExpand,\n            children: /*#__PURE__*/_jsxDEV(OriginalImage, {\n              image: image,\n              size: difficulty,\n              isExpanded: isImageExpanded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n            children: [/*#__PURE__*/_jsxDEV(AnswerButton, {\n              onClick: () => handleAnswerClick(0),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AnswerButton, {\n              onClick: () => handleAnswerClick(1),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AnswerButton, {\n              onClick: () => handleAnswerClick(2),\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: toggleHints,\n              children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onBackToMenu,\n              children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"EALCK0POzr0YYWz4xwh/WSramDA=\");\n_c19 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"TopSection\");\n$RefreshReg$(_c3, \"RightSection\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"ImageCard\");\n$RefreshReg$(_c7, \"ImageContainer\");\n$RefreshReg$(_c8, \"OriginalImage\");\n$RefreshReg$(_c9, \"Board\");\n$RefreshReg$(_c10, \"PuzzlePiece\");\n$RefreshReg$(_c11, \"AnswerButton\");\n$RefreshReg$(_c12, \"ButtonsContainer\");\n$RefreshReg$(_c13, \"Button\");\n$RefreshReg$(_c14, \"Message\");\n$RefreshReg$(_c15, \"HintOverlay\");\n$RefreshReg$(_c16, \"DraggedPiece\");\n$RefreshReg$(_c17, \"LoadingSpinner\");\n$RefreshReg$(_c18, \"LoadingOverlay\");\n$RefreshReg$(_c19, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","keyframes","jsxDEV","_jsxDEV","GameContainer","div","_c","TopSection","_c2","RightSection","_c3","BottomSection","Card","_c4","CardTitle","h3","_c5","ImageCard","_c6","ImageContainer","props","size","isExpanded","_c7","OriginalImage","image","_c8","Board","isTarget","_c9","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","isDragging","_c10","AnswerButton","button","_c11","ButtonsContainer","_c12","Button","variant","_c13","Message","_c14","HintOverlay","_c15","DraggedPiece","_c16","spin","LoadingSpinner","_c17","LoadingOverlay","_c18","fadeIn","fadeOut","Toast","isClosing","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","onImageChange","onError","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","errorCount","setErrorCount","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","isLoading","setIsLoading","isImageExpanded","setIsImageExpanded","showToast","setShowToast","isToastClosing","setIsToastClosing","selectedAnswer","setSelectedAnswer","isAnswerSubmitted","setIsAnswerSubmitted","initialPieces","totalPieces","pieceSize","i","j","push","id","correctIndex","initializePuzzle","console","error","Promise","resolve","setTimeout","shuffledPieces","sort","Math","random","map","piece","index","currentPos","initialTargetBoard","Array","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handlePaste","preventDefault","_e$clipboardData","items","clipboardData","length","type","indexOf","file","getAsFile","reader","FileReader","onload","event","target","result","readAsDataURL","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","prev","handleAnswerClick","answer","isCorrect","checkAnswer","toggleHints","handlePasteClick","navigator","clipboard","read","then","clipboardItems","clipboardItem","types","startsWith","blob","getType","catch","err","toggleImageExpand","progress","round","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","has","onClick","marginLeft","fontSize","opacity","left","top","backgroundImage","backgroundSize","backgroundPosition","_c19","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  height: 100%;\n`;\n\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n\nconst ImageCard = styled(Card)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  ${props => props.isExpanded && `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    border: none;\n    border-radius: 0;\n  `}\n`;\n\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.isExpanded ? 'contain' : `${props.size * 100}% ${props.size * 100}%`};\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: all 0.3s ease;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst AnswerButton = styled.button`\n  padding: 1rem;\n  font-size: 1.2rem;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #45a049;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  &:disabled {\n    background: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #2196F3;\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n  margin: 0 auto;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\n\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu, onImageChange, onError }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [errorCount, setErrorCount] = useState(0);\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageExpanded, setIsImageExpanded] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [isToastClosing, setIsToastClosing] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswerSubmitted, setIsAnswerSubmitted] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n\n    return pieces;\n  }, [difficulty]);\n\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      \n      try {\n        const totalPieces = difficulty * difficulty;\n        \n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        const shuffledPieces = [...initialPieces]\n          .sort(() => Math.random() - 0.5)\n          .map((piece, index) => ({\n            ...piece,\n            currentPos: index\n          }));\n\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        \n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  const handlePaste = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      const items = e.clipboardData?.items;\n      if (!items) return;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const file = items[i].getAsFile();\n          const reader = new FileReader();\n          \n          reader.onload = (event) => {\n            onImageChange(event.target.result);\n            setIsLoading(false);\n          };\n          \n          reader.readAsDataURL(file);\n          return;\n        }\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error handling paste:', error);\n      setIsLoading(false);\n    }\n  };\n\n  const handleSourcePieceClick = (index) => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n      setErrorCount(prev => prev + 1);\n      onError();\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const handleAnswerClick = (answer) => {\n    if (!isAnswerSubmitted) {\n      setSelectedAnswer(answer);\n      const isCorrect = checkAnswer(answer);\n      \n      if (isCorrect) {\n        const newCorrectPositions = new Set(correctPositions);\n        newCorrectPositions.add(answer);\n        setCorrectPositions(newCorrectPositions);\n        onProgress((newCorrectPositions.size / (difficulty * difficulty)) * 100);\n      } else {\n        setErrorCount(prev => prev + 1);\n        onError();\n      }\n      \n      setIsAnswerSubmitted(true);\n      setTimeout(() => {\n        setIsAnswerSubmitted(false);\n        setSelectedAnswer(null);\n      }, 1000);\n    }\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async (clipboardItems) => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch((err) => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n\n  const toggleImageExpand = () => {\n    setIsImageExpanded(!isImageExpanded);\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete(errorCount);\n    }\n  }, [correctPositions, difficulty, onComplete, errorCount, onProgress]);\n\n  useEffect(() => {\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, []);\n\n  return (\n    <GameContainer>\n      <TopSection>\n        <Card>\n          <CardTitle>\n            <span>🎮</span>\n            აქ ააწყვე პაზლი\n          </CardTitle>\n          <div style={{ position: 'relative' }}>\n            {isLoading && (\n              <LoadingOverlay>\n                <LoadingSpinner />\n              </LoadingOverlay>\n            )}\n            <Board size={difficulty} isTarget={true}>\n              {targetBoard.map((piece, index) => (\n                <PuzzlePiece\n                  key={index}\n                  image={piece ? image : null}\n                  size={difficulty}\n                  bgPosition={piece ? piece.bgPosition : ''}\n                  isTarget={!piece}\n                  isPlaced={piece !== null}\n                  isWrongAttempt={wrongAttempts.has(index)}\n                  onClick={() => handleTargetPieceClick(index)}\n                >\n                  {!piece && showHints && (\n                    <Message>\n                      {index + 1}\n                    </Message>\n                  )}\n                </PuzzlePiece>\n              ))}\n            </Board>\n          </div>\n        </Card>\n\n        <RightSection>\n          <Card>\n            <CardTitle>\n              <span>🧩</span>\n              პაზლის ნაწილები\n            </CardTitle>\n            <div style={{ position: 'relative' }}>\n              {isLoading && (\n                <LoadingOverlay>\n                  <LoadingSpinner />\n                </LoadingOverlay>\n              )}\n              <Board size={difficulty} isTarget={false}>\n                {pieces.map((piece, index) => piece && (\n                  <PuzzlePiece\n                    key={piece.id}\n                    image={image}\n                    size={difficulty}\n                    bgPosition={piece.bgPosition}\n                    onClick={() => handleSourcePieceClick(index)}\n                    isDragging={draggedPiece === index}\n                  >\n                    {showHints && (\n                      <HintOverlay>\n                        {parseInt(piece.id) + 1}\n                      </HintOverlay>\n                    )}\n                  </PuzzlePiece>\n                ))}\n              </Board>\n            </div>\n          </Card>\n\n          <ImageCard>\n            <CardTitle>\n              <span>🖼️</span>\n              ორიგინალი სურათი\n              <span style={{ marginLeft: 'auto', fontSize: '0.8em', opacity: 0.7 }}>\n                (დააჭირე გასადიდებლად)\n              </span>\n            </CardTitle>\n            <ImageContainer \n              size={difficulty} \n              isExpanded={isImageExpanded}\n              onClick={toggleImageExpand}\n            >\n              <OriginalImage \n                image={image} \n                size={difficulty}\n                isExpanded={isImageExpanded}\n              />\n            </ImageContainer>\n            <ButtonsContainer>\n              <AnswerButton onClick={() => handleAnswerClick(0)}>1</AnswerButton>\n              <AnswerButton onClick={() => handleAnswerClick(1)}>2</AnswerButton>\n              <AnswerButton onClick={() => handleAnswerClick(2)}>3</AnswerButton>\n              <Button variant=\"primary\" onClick={toggleHints}>\n                {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n              </Button>\n              <Button onClick={onBackToMenu}>\n                🏠 მთავარ მენიუში დაბრუნება\n              </Button>\n            </ButtonsContainer>\n          </ImageCard>\n        </RightSection>\n      </TopSection>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,aAAa;AAQnB,MAAMG,UAAU,GAAGP,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,UAAU;AAOhB,MAAME,YAAY,GAAGT,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,YAAY;AAOlB,MAAME,aAAa,GAAGX,MAAM,CAACK,GAAG;AAChC;AACA;AACA,CAAC;AAED,MAAMO,IAAI,GAAGZ,MAAM,CAACK,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAPID,IAAI;AASV,MAAME,SAAS,GAAGd,MAAM,CAACe,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,SAAS;AAUf,MAAMG,SAAS,GAAGjB,MAAM,CAACY,IAAI,CAAC;AAC9B;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAJID,SAAS;AAMf,MAAME,cAAc,GAAGnB,MAAM,CAACK,GAAG;AACjC;AACA,wBAAwBe,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,GAAG,CAAC,IAAI,CAAC,SAASD,KAAK,IAAIA,KAAK,CAACC,IAAI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,KAAK,IAAIA,KAAK,CAACE,UAAU,IAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AAACC,GAAA,GArBIJ,cAAc;AAuBpB,MAAMK,aAAa,GAAGxB,MAAM,CAACK,GAAG;AAChC;AACA;AACA,0BAA0Be,KAAK,IAAIA,KAAK,CAACK,KAAK;AAC9C,qBAAqBL,KAAK,IAAIA,KAAK,CAACE,UAAU,GAAG,SAAS,GAAG,GAAGF,KAAK,CAACC,IAAI,GAAG,GAAG,KAAKD,KAAK,CAACC,IAAI,GAAG,GAAG,GAAG;AACxG;AACA;AACA;AACA,CAAC;AAACK,GAAA,GARIF,aAAa;AAUnB,MAAMG,KAAK,GAAG3B,MAAM,CAACK,GAAG;AACxB;AACA,kCAAkCe,KAAK,IAAIA,KAAK,CAACC,IAAI;AACrD;AACA,sBAAsBD,KAAK,IAAIA,KAAK,CAACQ,QAAQ,GAAG,0BAA0B,GAAG,aAAa;AAC1F;AACA;AACA,uBAAuBR,KAAK,IAAIA,KAAK,CAACQ,QAAQ,GAAG,yBAAyB,GAAG,aAAa;AAC1F;AACA,CAAC;AAACC,GAAA,GATIF,KAAK;AAWX,MAAMG,WAAW,GAAG9B,MAAM,CAACK,GAAG;AAC9B;AACA;AACA,sBAAsBe,KAAK,IAAIA,KAAK,CAACK,KAAK,GAAG,OAAOL,KAAK,CAACK,KAAK,GAAG,GAAG,MAAM;AAC3E,qBAAqBL,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,GAAG,KAAKD,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,GAAG;AAC5E,yBAAyBD,KAAK,IAAIA,KAAK,CAACW,UAAU;AAClD,sBAAsBX,KAAK,IAAIA,KAAK,CAACY,cAAc,GAAG,SAAS,GAAGZ,KAAK,CAACQ,QAAQ,GAAG,aAAa,GAAG,SAAS;AAC5G,YAAYR,KAAK,IAAIA,KAAK,CAACa,QAAQ,GAAG,SAAS,GAAG,SAAS;AAC3D;AACA;AACA;AACA;AACA,sBAAsBb,KAAK,IAAI;EAC3B,IAAIA,KAAK,CAACY,cAAc,EAAE,OAAO,wBAAwB;EACzD,OAAOZ,KAAK,CAACQ,QAAQ,GAAG,0BAA0B,GAAG,aAAa;AACpE,CAAC;AACH;AACA;AACA,aAAaR,KAAK,IAAIA,KAAK,CAACc,UAAU,GAAG,CAAC,GAAG,CAAC;AAC9C,qBAAqBd,KAAK,IAAIA,KAAK,CAACc,UAAU,GAAG,GAAG,GAAG,CAAC;AACxD;AACA;AACA;AACA,iBAAiBd,KAAK,IAAIA,KAAK,CAACa,QAAQ,IAAIb,KAAK,CAACc,UAAU,GAAG,MAAM,GAAG,aAAa;AACrF;AACA;AACA;AACA,CAAC;AAACC,IAAA,GA3BIL,WAAW;AA6BjB,MAAMM,YAAY,GAAGpC,MAAM,CAACqC,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAvBIF,YAAY;AAyBlB,MAAMG,gBAAgB,GAAGvC,MAAM,CAACK,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACmC,IAAA,GALID,gBAAgB;AAOtB,MAAME,MAAM,GAAGzC,MAAM,CAACqC,MAAM;AAC5B,sBAAsBjB,KAAK,IAAIA,KAAK,CAACsB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBtB,KAAK,IAAIA,KAAK,CAACsB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AACpF;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAtBIF,MAAM;AAwBZ,MAAMG,OAAO,GAAG5C,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AAACwC,IAAA,GAJID,OAAO;AAMb,MAAME,WAAW,GAAG9C,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0C,IAAA,GAZID,WAAW;AAcjB,MAAME,YAAY,GAAGhD,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC4C,IAAA,GAVID,YAAY;AAYlB,MAAME,IAAI,GAAGjD,SAAS;AACtB;AACA;AACA,CAAC;AAED,MAAMkD,cAAc,GAAGnD,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,eAAe6C,IAAI;AACnB;AACA,CAAC;AAACE,IAAA,GARID,cAAc;AAUpB,MAAME,cAAc,GAAGrD,MAAM,CAACK,GAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}