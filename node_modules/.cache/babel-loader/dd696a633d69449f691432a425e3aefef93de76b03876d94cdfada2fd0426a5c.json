{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n_c = GameContainer;\nconst SetupContainer = styled.div`\n  margin: 20px auto;\n  max-width: 400px;\n`;\n_c2 = SetupContainer;\nconst NumberSelect = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n_c3 = NumberSelect;\nconst StartButton = styled.button`\n  padding: 10px 20px;\n  margin: 10px;\n  font-size: 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = StartButton;\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 20px;\n  margin: 20px auto;\n  max-width: 800px;\n`;\n_c5 = ImagesGrid;\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 8px;\n  padding: 10px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n  }\n\n  img {\n    width: 100%;\n    height: 150px;\n    object-fit: cover;\n    border-radius: 4px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 16px;\n  }\n`;\n_c6 = ImageCard;\nconst Timer = styled.div`\n  font-size: 24px;\n  margin: 20px;\n  color: #333;\n`;\n_c7 = Timer;\nconst Message = styled.div`\n  font-size: 24px;\n  margin: 20px;\n  color: #333;\n  font-weight: bold;\n`;\n_c8 = Message;\nconst MemoryGame = () => {\n  _s();\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [gameState, setGameState] = useState('setup'); // setup, showing, memorizing, playing\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const {\n    updateGameProgress\n  } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = ['ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp', 'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp', 'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp', 'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp', 'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp', 'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp', 'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp', 'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'];\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = [...allImages].sort(() => Math.random() - 0.5);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n  }, [numberOfImages, loadImages]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n  }, [selectRandomImages]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => [...prev].sort(() => Math.random() - 0.5));\n    setGameState('playing');\n  }, []);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback(image => {\n    if (gameState !== 'playing') return;\n    setUserSequence(prev => {\n      const newSequence = [...prev, image];\n\n      // თუ სწორი თანმიმდევრობაა\n      if (newSequence.length === selectedImages.length) {\n        const isCorrect = newSequence.every((img, index) => img === selectedImages[index]);\n        if (isCorrect) {\n          updateGameProgress('memory', Date.now(), {\n            score: 100\n          });\n          setTimeout(() => {\n            alert('გილოცავ! სწორად გაიხსენე თანმიმდევრობა! 🎉');\n            setGameState('setup');\n            setUserSequence([]);\n          }, 500);\n        } else {\n          setTimeout(() => {\n            alert('სამწუხაროდ თანმიმდევრობა არასწორია. სცადე თავიდან! 🤔');\n            setUserSequence([]);\n          }, 500);\n        }\n      }\n      return newSequence;\n    });\n  }, [gameState, selectedImages, updateGameProgress]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    if (gameState === 'showing' && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n    } else if (timer === 0 && gameState === 'showing') {\n      setGameState('memorizing');\n      setTimer(2);\n    } else if (timer === 0 && gameState === 'memorizing') {\n      shuffleImages();\n    }\n    return () => clearInterval(interval);\n  }, [timer, gameState, shuffleImages]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u10DB\\u10D4\\u10EE\\u10E1\\u10D8\\u10D4\\u10E0\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DB\\u10D0\\u10E8\\u10D8 \\uD83E\\uDDE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), gameState === 'setup' && /*#__PURE__*/_jsxDEV(SetupContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u10D0\\u10D8\\u10E0\\u10E9\\u10D8\\u10D4 \\u10E0\\u10D0\\u10DB\\u10D3\\u10D4\\u10DC\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8 \\u10D2\\u10D8\\u10DC\\u10D3\\u10D0 \\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberSelect, {\n        value: numberOfImages,\n        onChange: e => setNumberOfImages(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"3 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 4,\n          children: \"4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"5 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: startGame,\n        children: \"\\u10D3\\u10D0\\u10EC\\u10E7\\u10D4\\u10D1\\u10D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), gameState === 'showing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        children: [timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: \"\\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n        children: selectedImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'memorizing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        children: [timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: \"\\u10D3\\u10D0\\u10EE\\u10E3\\u10ED\\u10D4 \\u10D7\\u10D5\\u10D0\\u10DA\\u10D4\\u10D1\\u10D8!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        children: \"\\u10D0\\u10E6\\u10D0\\u10D3\\u10D2\\u10D8\\u10DC\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n        children: shuffledImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          isSelected: userSequence.includes(image),\n          isPlayable: true,\n          onClick: () => handleImageClick(image),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"nEHiJKQHCCAH6EZEKJlrKExS+qU=\", false, function () {\n  return [usePlayer, useNavigate];\n});\n_c9 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"SetupContainer\");\n$RefreshReg$(_c3, \"NumberSelect\");\n$RefreshReg$(_c4, \"StartButton\");\n$RefreshReg$(_c5, \"ImagesGrid\");\n$RefreshReg$(_c6, \"ImageCard\");\n$RefreshReg$(_c7, \"Timer\");\n$RefreshReg$(_c8, \"Message\");\n$RefreshReg$(_c9, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","useNavigate","usePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","GameContainer","div","_c","SetupContainer","_c2","NumberSelect","select","_c3","StartButton","button","_c4","ImagesGrid","_c5","ImageCard","props","isSelected","isPlayable","_c6","Timer","_c7","Message","_c8","MemoryGame","_s","numberOfImages","setNumberOfImages","selectedImages","setSelectedImages","shuffledImages","setShuffledImages","gameState","setGameState","timer","setTimer","userSequence","setUserSequence","updateGameProgress","navigate","loadImages","images","map","filename","name","replace","url","process","env","PUBLIC_URL","error","console","selectRandomImages","allImages","log","shuffled","sort","Math","random","selected","slice","startGame","shuffleImages","prev","handleImageClick","image","newSequence","length","isCorrect","every","img","index","Date","now","score","setTimeout","alert","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","onClick","src","alt","includes","_c9","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\n\nconst GameContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n\nconst SetupContainer = styled.div`\n  margin: 20px auto;\n  max-width: 400px;\n`;\n\nconst NumberSelect = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst StartButton = styled.button`\n  padding: 10px 20px;\n  margin: 10px;\n  font-size: 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 20px;\n  margin: 20px auto;\n  max-width: 800px;\n`;\n\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 8px;\n  padding: 10px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n  }\n\n  img {\n    width: 100%;\n    height: 150px;\n    object-fit: cover;\n    border-radius: 4px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 16px;\n  }\n`;\n\nconst Timer = styled.div`\n  font-size: 24px;\n  margin: 20px;\n  color: #333;\n`;\n\nconst Message = styled.div`\n  font-size: 24px;\n  margin: 20px;\n  color: #333;\n  font-weight: bold;\n`;\n\nconst MemoryGame = () => {\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [gameState, setGameState] = useState('setup'); // setup, showing, memorizing, playing\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const { updateGameProgress } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = [\n        'ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp',\n        'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp',\n        'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp',\n        'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp',\n        'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp',\n        'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp',\n        'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp',\n        'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'\n      ];\n\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = [...allImages].sort(() => Math.random() - 0.5);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n  }, [numberOfImages, loadImages]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n  }, [selectRandomImages]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => [...prev].sort(() => Math.random() - 0.5));\n    setGameState('playing');\n  }, []);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image) => {\n    if (gameState !== 'playing') return;\n\n    setUserSequence(prev => {\n      const newSequence = [...prev, image];\n      \n      // თუ სწორი თანმიმდევრობაა\n      if (newSequence.length === selectedImages.length) {\n        const isCorrect = newSequence.every((img, index) => img === selectedImages[index]);\n        \n        if (isCorrect) {\n          updateGameProgress('memory', Date.now(), { score: 100 });\n          setTimeout(() => {\n            alert('გილოცავ! სწორად გაიხსენე თანმიმდევრობა! 🎉');\n            setGameState('setup');\n            setUserSequence([]);\n          }, 500);\n        } else {\n          setTimeout(() => {\n            alert('სამწუხაროდ თანმიმდევრობა არასწორია. სცადე თავიდან! 🤔');\n            setUserSequence([]);\n          }, 500);\n        }\n      }\n      \n      return newSequence;\n    });\n  }, [gameState, selectedImages, updateGameProgress]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    \n    if (gameState === 'showing' && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n    } else if (timer === 0 && gameState === 'showing') {\n      setGameState('memorizing');\n      setTimer(2);\n    } else if (timer === 0 && gameState === 'memorizing') {\n      shuffleImages();\n    }\n\n    return () => clearInterval(interval);\n  }, [timer, gameState, shuffleImages]);\n\n  return (\n    <GameContainer>\n      <h1>მეხსიერების თამაში 🧠</h1>\n\n      {gameState === 'setup' && (\n        <SetupContainer>\n          <h2>აირჩიე რამდენი სურათი გინდა დაიმახსოვრო:</h2>\n          <NumberSelect \n            value={numberOfImages} \n            onChange={(e) => setNumberOfImages(Number(e.target.value))}\n          >\n            <option value={3}>3 სურათი</option>\n            <option value={4}>4 სურათი</option>\n            <option value={5}>5 სურათი</option>\n          </NumberSelect>\n          <StartButton onClick={startGame}>დაწყება</StartButton>\n        </SetupContainer>\n      )}\n\n      {gameState === 'showing' && (\n        <>\n          <Timer>{timer} წამი</Timer>\n          <Message>დაიმახსოვრე სურათების თანმიმდევრობა!</Message>\n          <ImagesGrid>\n            {selectedImages.map((image, index) => (\n              <ImageCard key={index}>\n                <img src={image.url} alt={image.name} />\n                <p>{image.name}</p>\n              </ImageCard>\n            ))}\n          </ImagesGrid>\n        </>\n      )}\n\n      {gameState === 'memorizing' && (\n        <>\n          <Timer>{timer} წამი</Timer>\n          <Message>დახუჭე თვალები!</Message>\n        </>\n      )}\n\n      {gameState === 'playing' && (\n        <>\n          <Message>აღადგინე სურათების თანმიმდევრობა!</Message>\n          <ImagesGrid>\n            {shuffledImages.map((image, index) => (\n              <ImageCard \n                key={index}\n                isSelected={userSequence.includes(image)}\n                isPlayable={true}\n                onClick={() => handleImageClick(image)}\n              >\n                <img src={image.url} alt={image.name} />\n                <p>{image.name}</p>\n              </ImageCard>\n            ))}\n          </ImagesGrid>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default MemoryGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}