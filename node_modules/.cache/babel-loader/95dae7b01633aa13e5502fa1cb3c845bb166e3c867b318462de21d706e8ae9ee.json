{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null,\n  colorMatching: []\n};\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : initialGameProgress;\n  });\n  useEffect(() => {\n    localStorage.setItem('gameProgress', JSON.stringify(gameProgress));\n  }, [gameProgress]);\n  const updateGameProgress = (gameType, timestamp, data) => {\n    setGameProgress(prevProgress => {\n      const newProgress = {\n        ...prevProgress\n      };\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles.includes(data.puzzleId)) {\n            newProgress.puzzles = [...newProgress.puzzles, data.puzzleId];\n          }\n          break;\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks.includes(data.taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, data.taskId];\n          }\n          if (data.score) {\n            newProgress.scrambleScores[data.taskId] = data.score;\n          }\n          break;\n        case 'task':\n          if (!newProgress.completedTasks.includes(data.taskId)) {\n            newProgress.completedTasks = [...newProgress.completedTasks, data.taskId];\n          }\n          if (data.score) {\n            newProgress.taskScores[data.taskId] = data.score;\n          }\n          break;\n        case 'colorMatching':\n          newProgress.colorMatching = [...newProgress.colorMatching, {\n            score: data.score,\n            matchedPairs: data.matchedPairs,\n            timestamp: timestamp\n          }];\n          break;\n      }\n      newProgress.lastPlayed = timestamp;\n      return newProgress;\n    });\n  };\n  const resetProgress = () => {\n    setGameProgress(initialGameProgress);\n    localStorage.setItem('gameProgress', JSON.stringify(initialGameProgress));\n  };\n  const value = {\n    gameProgress,\n    updateGameProgress,\n    resetProgress\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"Pz6RfhI/LErcu8fIWsCkOXj+TCA=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","PlayerContext","initialGameProgress","puzzles","completedScrambleTasks","taskScores","completedTasks","scrambleScores","lastPlayed","colorMatching","PlayerProvider","children","_s","gameProgress","setGameProgress","savedProgress","localStorage","getItem","JSON","parse","setItem","stringify","updateGameProgress","gameType","timestamp","data","prevProgress","newProgress","includes","puzzleId","taskId","score","matchedPairs","resetProgress","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst PlayerContext = createContext();\n\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null,\n  colorMatching: []\n};\n\nexport const PlayerProvider = ({ children }) => {\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : initialGameProgress;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('gameProgress', JSON.stringify(gameProgress));\n  }, [gameProgress]);\n\n  const updateGameProgress = (gameType, timestamp, data) => {\n    setGameProgress(prevProgress => {\n      const newProgress = { ...prevProgress };\n\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles.includes(data.puzzleId)) {\n            newProgress.puzzles = [...newProgress.puzzles, data.puzzleId];\n          }\n          break;\n\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks.includes(data.taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, data.taskId];\n          }\n          if (data.score) {\n            newProgress.scrambleScores[data.taskId] = data.score;\n          }\n          break;\n\n        case 'task':\n          if (!newProgress.completedTasks.includes(data.taskId)) {\n            newProgress.completedTasks = [...newProgress.completedTasks, data.taskId];\n          }\n          if (data.score) {\n            newProgress.taskScores[data.taskId] = data.score;\n          }\n          break;\n\n        case 'colorMatching':\n          newProgress.colorMatching = [\n            ...newProgress.colorMatching,\n            {\n              score: data.score,\n              matchedPairs: data.matchedPairs,\n              timestamp: timestamp\n            }\n          ];\n          break;\n      }\n\n      newProgress.lastPlayed = timestamp;\n      return newProgress;\n    });\n  };\n\n  const resetProgress = () => {\n    setGameProgress(initialGameProgress);\n    localStorage.setItem('gameProgress', JSON.stringify(initialGameProgress));\n  };\n\n  const value = {\n    gameProgress,\n    updateGameProgress,\n    resetProgress\n  };\n\n  return (\n    <PlayerContext.Provider value={value}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}