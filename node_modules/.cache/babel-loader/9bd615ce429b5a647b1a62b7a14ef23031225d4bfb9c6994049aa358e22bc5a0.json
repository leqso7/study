{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : {\n      puzzles: [],\n      tasks: [],\n      scramble: [],\n      lastPlayed: null\n    };\n  });\n  const updatePlayerName = name => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n  const updateGameProgress = (gameType, taskIndex, score) => {\n    setGameProgress(prev => {\n      let newProgress = {\n        ...prev\n      };\n      if (gameType === 'tasks') {\n        // Initialize arrays if they don't exist\n        if (!newProgress.completedTasks) newProgress.completedTasks = [];\n        if (!newProgress.taskScores) newProgress.taskScores = {};\n\n        // Add task to completed tasks if not already there\n        if (!newProgress.completedTasks.includes(taskIndex)) {\n          newProgress.completedTasks = [...newProgress.completedTasks, taskIndex];\n        }\n\n        // Update task score\n        newProgress.taskScores = {\n          ...newProgress.taskScores,\n          [taskIndex]: score\n        };\n      } else if (gameType === -1) {\n        // Reset progress\n        newProgress = {\n          puzzles: [],\n          completedTasks: [],\n          taskScores: {},\n          scramble: [],\n          lastPlayed: null\n        };\n      } else {\n        // Handle other game types (puzzles, scramble)\n        if (!newProgress[gameType]) newProgress[gameType] = [];\n        newProgress[gameType] = [...newProgress[gameType], taskIndex];\n        newProgress.lastPlayed = {\n          type: gameType,\n          date: new Date().toISOString()\n        };\n      }\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"l1B5TO55wqipOGVe3cW97z3QSBo=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","PlayerContext","PlayerProvider","children","_s","playerName","setPlayerName","localStorage","getItem","showNameModal","setShowNameModal","gameProgress","setGameProgress","savedProgress","JSON","parse","puzzles","tasks","scramble","lastPlayed","updatePlayerName","name","setItem","updateGameProgress","gameType","taskIndex","score","prev","newProgress","completedTasks","taskScores","includes","type","date","Date","toISOString","stringify","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst PlayerContext = createContext();\n\nexport const PlayerProvider = ({ children }) => {\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : {\n      puzzles: [],\n      tasks: [],\n      scramble: [],\n      lastPlayed: null\n    };\n  });\n\n  const updatePlayerName = (name) => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n\n  const updateGameProgress = (gameType, taskIndex, score) => {\n    setGameProgress(prev => {\n      let newProgress = { ...prev };\n      \n      if (gameType === 'tasks') {\n        // Initialize arrays if they don't exist\n        if (!newProgress.completedTasks) newProgress.completedTasks = [];\n        if (!newProgress.taskScores) newProgress.taskScores = {};\n        \n        // Add task to completed tasks if not already there\n        if (!newProgress.completedTasks.includes(taskIndex)) {\n          newProgress.completedTasks = [...newProgress.completedTasks, taskIndex];\n        }\n        \n        // Update task score\n        newProgress.taskScores = {\n          ...newProgress.taskScores,\n          [taskIndex]: score\n        };\n      } else if (gameType === -1) {\n        // Reset progress\n        newProgress = {\n          puzzles: [],\n          completedTasks: [],\n          taskScores: {},\n          scramble: [],\n          lastPlayed: null\n        };\n      } else {\n        // Handle other game types (puzzles, scramble)\n        if (!newProgress[gameType]) newProgress[gameType] = [];\n        newProgress[gameType] = [...newProgress[gameType], taskIndex];\n        newProgress.lastPlayed = {\n          type: gameType,\n          date: new Date().toISOString()\n        };\n      }\n      \n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n\n  return (\n    <PlayerContext.Provider value={value}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}