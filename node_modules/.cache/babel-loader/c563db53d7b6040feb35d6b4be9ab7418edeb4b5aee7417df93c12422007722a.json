{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PuzzleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n`;\n_c = PuzzleContainer;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  width: 400px;\n  height: 400px;\n`;\n_c2 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 1px solid #ddd;\n  cursor: ${props => props.isCorrect ? 'default' : 'pointer'};\n  transition: transform 0.2s;\n  \n  &:hover {\n    transform: ${props => props.isCorrect ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n  }\n`;\n_c3 = PuzzlePiece;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({\n      length: totalPieces\n    }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${index % difficulty * 100 / (difficulty - 1)}% ${Math.floor(index / difficulty) * 100 / (difficulty - 1)}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n    setPieces(initialPieces);\n    setCorrectPositions(new Set());\n    setSelectedPiece(null);\n  }, [difficulty, image]);\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  const handlePieceClick = clickedIndex => {\n    if (correctPositions.has(clickedIndex)) return;\n    if (selectedPiece === null) {\n      setSelectedPiece(clickedIndex);\n    } else {\n      // Swap pieces\n      const newPieces = [...pieces];\n      const temp = newPieces[clickedIndex];\n      newPieces[clickedIndex] = newPieces[selectedPiece];\n      newPieces[selectedPiece] = temp;\n      setPieces(newPieces);\n\n      // Check for correct positions\n      const newCorrectPositions = new Set();\n      newPieces.forEach((piece, index) => {\n        if (parseInt(piece.id) === index) {\n          newCorrectPositions.add(index);\n        }\n      });\n      setCorrectPositions(newCorrectPositions);\n      setSelectedPiece(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PuzzleContainer, {\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      size: difficulty,\n      children: pieces.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n        image: image,\n        size: difficulty,\n        bgPosition: piece.bgPosition,\n        isCorrect: correctPositions.has(index),\n        onClick: () => handlePieceClick(index),\n        style: {\n          outline: selectedPiece === index ? '3px solid #2196F3' : 'none',\n          opacity: correctPositions.has(index) ? 1 : 0.9\n        }\n      }, piece.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"sZu/89cK5ctk8kXby4qsYIKY+WA=\");\n_c4 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PuzzleContainer\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"PuzzlePiece\");\n$RefreshReg$(_c4, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","PuzzleContainer","div","_c","Board","props","size","_c2","PuzzlePiece","image","bgPosition","isCorrect","_c3","PuzzleBoard","difficulty","onProgress","onComplete","_s","pieces","setPieces","selectedPiece","setSelectedPiece","correctPositions","setCorrectPositions","Set","totalPieces","initialPieces","Array","from","length","_","index","id","String","Math","floor","correctIndex","sort","random","progress","round","handlePieceClick","clickedIndex","has","newPieces","temp","newCorrectPositions","forEach","piece","parseInt","add","children","map","onClick","style","outline","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst PuzzleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  width: 400px;\n  height: 400px;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 1px solid #ddd;\n  cursor: ${props => props.isCorrect ? 'default' : 'pointer'};\n  transition: transform 0.2s;\n  \n  &:hover {\n    transform: ${props => props.isCorrect ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n  }\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({ length: totalPieces }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${((index % difficulty) * 100) / (difficulty - 1)}% ${(Math.floor(index / difficulty) * 100) / (difficulty - 1)}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n\n    setPieces(initialPieces);\n    setCorrectPositions(new Set());\n    setSelectedPiece(null);\n  }, [difficulty, image]);\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  const handlePieceClick = (clickedIndex) => {\n    if (correctPositions.has(clickedIndex)) return;\n\n    if (selectedPiece === null) {\n      setSelectedPiece(clickedIndex);\n    } else {\n      // Swap pieces\n      const newPieces = [...pieces];\n      const temp = newPieces[clickedIndex];\n      newPieces[clickedIndex] = newPieces[selectedPiece];\n      newPieces[selectedPiece] = temp;\n      setPieces(newPieces);\n\n      // Check for correct positions\n      const newCorrectPositions = new Set();\n      newPieces.forEach((piece, index) => {\n        if (parseInt(piece.id) === index) {\n          newCorrectPositions.add(index);\n        }\n      });\n      setCorrectPositions(newCorrectPositions);\n      setSelectedPiece(null);\n    }\n  };\n\n  return (\n    <PuzzleContainer>\n      <Board size={difficulty}>\n        {pieces.map((piece, index) => (\n          <PuzzlePiece\n            key={piece.id}\n            image={image}\n            size={difficulty}\n            bgPosition={piece.bgPosition}\n            isCorrect={correctPositions.has(index)}\n            onClick={() => handlePieceClick(index)}\n            style={{\n              outline: selectedPiece === index ? '3px solid #2196F3' : 'none',\n              opacity: correctPositions.has(index) ? 1 : 0.9,\n            }}\n          />\n        ))}\n      </Board>\n    </PuzzleContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}