{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    background: linear-gradient(-45deg, \n      rgba(41, 128, 185, 0.8),\n      rgba(52, 152, 219, 0.8),\n      rgba(44, 62, 80, 0.8),\n      rgba(52, 73, 94, 0.8)\n    );\n    background-size: 400% 400%;\n    animation: gradient 15s ease infinite;\n    display: flex;\n    flex-direction: column;\n  }\n\n  #root {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n_c = GlobalStyle;\nconst GameContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  min-height: 100vh;\n`;\n_c2 = GameContainer;\nconst SetupContainer = styled.div`\n  margin: 40px auto;\n  max-width: 500px;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 40px;\n  border-radius: 20px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(10px);\n  animation: fadeIn 0.5s ease-out;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  h1 {\n    color: #2c3e50;\n    font-size: 2.5em;\n    margin-bottom: 30px;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  h2 {\n    color: #34495e;\n    font-size: 1.5em;\n    margin-bottom: 25px;\n    font-weight: 500;\n  }\n`;\n_c3 = SetupContainer;\nconst NumberSelect = styled.select`\n  padding: 15px 25px;\n  margin: 20px;\n  font-size: 18px;\n  border: 2px solid #e0e0e0;\n  border-radius: 12px;\n  background-color: white;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s ease;\n  width: 80%;\n  max-width: 300px;\n  color: #2c3e50;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 15px center;\n  background-size: 15px;\n\n  &:hover {\n    border-color: #4CAF50;\n    box-shadow: 0 2px 8px rgba(76, 175, 80, 0.2);\n  }\n\n  &:focus {\n    border-color: #4CAF50;\n    box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);\n  }\n`;\n_c4 = NumberSelect;\nconst GameModeToggle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin: 30px 0;\n  padding: 5px;\n  background: #f5f5f5;\n  border-radius: 15px;\n  width: 90%;\n  max-width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n_c5 = GameModeToggle;\nconst ToggleButton = styled.button`\n  padding: 12px 24px;\n  background-color: ${props => props.active ? '#4CAF50' : 'transparent'};\n  color: ${props => props.active ? 'white' : '#666'};\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  flex: 1;\n\n  &:hover {\n    background-color: ${props => props.active ? '#45a049' : '#e0e0e0'};\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n_c6 = ToggleButton;\nconst StartButton = styled.button`\n  padding: 16px 40px;\n  margin: 30px;\n  font-size: 20px;\n  background: linear-gradient(45deg, #4CAF50, #45a049);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);\n  width: 80%;\n  max-width: 300px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n\n  &:hover {\n    background: linear-gradient(45deg, #45a049, #4CAF50);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);\n  }\n\n  &:active {\n    transform: translateY(1px);\n    box-shadow: 0 2px 10px rgba(76, 175, 80, 0.3);\n  }\n`;\n_c7 = StartButton;\nconst GameTitle = styled.h1`\n  font-size: 3em;\n  color: #2c3e50;\n  margin-bottom: 40px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  font-weight: 700;\n  letter-spacing: -1px;\n  \n  span {\n    color: #4CAF50;\n  }\n`;\n_c8 = GameTitle;\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 30px;\n  margin: 40px auto;\n  max-width: 1000px;\n  justify-items: center;\n  align-items: center;\n`;\n_c9 = ImagesGrid;\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 12px;\n  padding: 15px;\n  cursor: ${props => props.isPlayable ? 'pointer' : 'not-allowed'};\n  transition: all 0.3s ease;\n  position: relative;\n  width: 250px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n    box-shadow: ${props => props.isPlayable ? '0 8px 16px rgba(0, 0, 0, 0.2)' : '0 4px 8px rgba(0, 0, 0, 0.1)'};\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n  }\n\n  .order-number {\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 35px;\n    height: 35px;\n    background-color: #4CAF50;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 18px;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c10 = ImageCard;\nconst Timer = styled.div`\n  font-size: 32px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n\n  .hourglass {\n    font-size: 36px;\n    animation: rotate 2s infinite linear;\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n_c11 = Timer;\nconst Message = styled.div`\n  font-size: 28px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n`;\n_c12 = Message;\nconst SuccessMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 20px 40px;\n  border-radius: 10px;\n  font-size: 24px;\n  font-weight: bold;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n  z-index: 1000;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c13 = SuccessMessage;\nconst ErrorMessage = styled(SuccessMessage)`\n  background-color: rgba(244, 67, 54, 0.9);\n`;\n_c14 = ErrorMessage;\nconst OptionCard = styled(ImageCard)`\n  cursor: pointer;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  transform: ${props => props.selected ? 'scale(1.02)' : 'none'};\n  border-color: ${props => props.selected ? '#4CAF50' : '#ddd'};\n  margin: 0;\n  min-width: 200px;\n  flex: 1;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: ${props => props.disabled ? 'none' : 'scale(1.02)'};\n    border-color: #4CAF50;\n  }\n\n  img {\n    height: 150px;\n    object-fit: cover;\n  }\n\n  p {\n    margin: 8px 0;\n    font-size: 16px;\n  }\n`;\n_c15 = OptionCard;\nconst OptionsGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  margin: 20px auto;\n  max-width: 1000px;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow-x: auto;\n`;\n_c16 = OptionsGrid;\nconst MemoryGame = () => {\n  _s();\n  const [gameState, setGameState] = useState('setup');\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [gameMode, setGameMode] = useState('sequence'); // sequence or missing\n  const [missingImage, setMissingImage] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [optionImages, setOptionImages] = useState([]);\n  const {\n    updateGameProgress\n  } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = ['ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp', 'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp', 'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp', 'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp', 'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp', 'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp', 'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp', 'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'];\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // Fisher-Yates shuffle ალგორითმი\n  const shuffleArray = useCallback(array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // ვიყენებთ crypto.getRandomValues უფრო ძლიერი შემთხვევითობისთვის\n      const j = Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1) * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n    // ვამოწმებთ რომ ახალი მასივი არ იყოს იგივე რაც ორიგინალი ან უკუღმა დალაგებული\n    const isReverse = shuffled.every((item, index) => item === array[array.length - 1 - index]);\n    const isSame = shuffled.every((item, index) => item === array[index]);\n    if (isReverse || isSame) {\n      // თუ უკუღმა ან იგივე თანმიმდევრობაა, კიდევ ერთხელ ვურევთ\n      return shuffleArray(array);\n    }\n    return shuffled;\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = shuffleArray(allImages);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n    if (gameMode === 'missing') {\n      // დამატებითი ფოტოების არჩევა ოფციებისთვის\n      const remainingImages = shuffled.slice(numberOfImages, numberOfImages + 3);\n      const randomIndex = Math.floor(Math.random() * selected.length);\n      const missingImg = selected[randomIndex];\n      setMissingImage(missingImg);\n\n      // ოფციების შექმნა\n      const options = shuffleArray([...remainingImages, missingImg]);\n      setOptionImages(options);\n    }\n  }, [numberOfImages, gameMode]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n    setSelectedOption(null);\n  }, [selectRandomImages]);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image, index) => {\n    if (gameState !== 'playing') return;\n    if (gameMode === 'sequence') {\n      setUserSequence(prev => {\n        const newSequence = [...prev, {\n          image,\n          index\n        }];\n        if (newSequence.length === selectedImages.length) {\n          const isCorrect = selectedImages.every((img, idx) => newSequence[idx].image.name === img.name);\n          if (isCorrect) {\n            updateGameProgress('memory', Date.now(), {\n              score: 100\n            });\n            setShowSuccess(true);\n            setTimeout(() => {\n              setShowSuccess(false);\n              setGameState('setup');\n              setUserSequence([]);\n            }, 2000);\n          } else {\n            setShowError(true);\n            setTimeout(() => {\n              setShowError(false);\n              setUserSequence([]);\n            }, 2000);\n          }\n        }\n        return newSequence;\n      });\n    }\n  }, [gameState, gameMode, selectedImages, updateGameProgress]);\n\n  // ოფციის არჩევა\n  const handleOptionSelect = useCallback(image => {\n    if (gameState !== 'playing') return;\n    setSelectedOption(image);\n    const isCorrect = image.name === missingImage.name;\n    if (isCorrect) {\n      updateGameProgress('memory', Date.now(), {\n        score: 100\n      });\n      setShowSuccess(true);\n      setTimeout(() => {\n        setShowSuccess(false);\n        setGameState('setup');\n        setSelectedOption(null);\n      }, 2000);\n    } else {\n      setShowError(true);\n      setTimeout(() => {\n        setShowError(false);\n        setSelectedOption(null);\n      }, 2000);\n    }\n  }, [gameState, missingImage, updateGameProgress]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => {\n      const shuffled = shuffleArray(prev);\n      console.log('Original order:', prev.map(img => img.name));\n      console.log('Shuffled order:', shuffled.map(img => img.name));\n      return shuffled;\n    });\n    setGameState('playing');\n  }, [shuffleArray]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    if ((gameState === 'showing' || gameState === 'memorizing') && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => {\n          console.log('Timer tick:', prev - 1);\n          return prev - 1;\n        });\n      }, 1000);\n      console.log('Starting timer:', timer, 'State:', gameState);\n    } else if (timer === 0) {\n      if (gameState === 'showing') {\n        console.log('Switching to memorizing');\n        setGameState('memorizing');\n        setTimer(2);\n      } else if (gameState === 'memorizing') {\n        console.log('Switching to playing');\n        shuffleImages();\n      }\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [timer, gameState, shuffleImages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContainer, {\n      children: [gameState === 'setup' && /*#__PURE__*/_jsxDEV(SetupContainer, {\n        children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n          children: [\"\\u10DB\\u10D4\\u10EE\\u10E1\\u10D8\\u10D4\\u10E0\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DB\\u10D0\\u10E8\\u10D8 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDDE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u10D0\\u10D8\\u10E0\\u10E9\\u10D8\\u10D4 \\u10E0\\u10D0\\u10DB\\u10D3\\u10D4\\u10DC\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8 \\u10D2\\u10D8\\u10DC\\u10D3\\u10D0 \\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberSelect, {\n          value: numberOfImages,\n          onChange: e => setNumberOfImages(Number(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"3 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 4,\n            children: \"4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 5,\n            children: \"5 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameModeToggle, {\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            active: gameMode === 'sequence',\n            onClick: () => setGameMode('sequence'),\n            children: \"\\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            active: gameMode === 'missing',\n            onClick: () => setGameMode('missing'),\n            children: \"\\u10E4\\u10DD\\u10E2\\u10DD\\u10E1 \\u10D0\\u10DB\\u10DD\\u10D9\\u10DA\\u10D4\\u10D1\\u10D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: startGame,\n          children: \"\\u10D3\\u10D0\\u10EC\\u10E7\\u10D4\\u10D1\\u10D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        show: true,\n        children: [\"\\u10D2\\u10D8\\u10DA\\u10DD\\u10EA\\u10D0\\u10D5! \", gameMode === 'sequence' ? 'სწორად გაიხსენე თანმიმდევრობა!' : 'სწორად გამოიცანი რომელი ფოტო აკლდა!', \" \\uD83C\\uDF89\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this), showError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        show: true,\n        children: [\"\\u10E1\\u10D0\\u10DB\\u10EC\\u10E3\\u10EE\\u10D0\\u10E0\\u10DD\\u10D3 \", gameMode === 'sequence' ? 'თანმიმდევრობა არასწორია' : 'ვერ გამოიცანი რომელი ფოტო აკლდა', \". \\u10E1\\u10EA\\u10D0\\u10D3\\u10D4 \\u10D7\\u10D0\\u10D5\\u10D8\\u10D3\\u10D0\\u10DC! \\uD83E\\uDD14\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this), gameState === 'showing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hourglass\",\n            children: \"\\u231B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          show: true,\n          children: \"\\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n          children: selectedImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url,\n              alt: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), gameState === 'memorizing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hourglass\",\n            children: \"\\u231B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          show: true,\n          children: [\"\\u10D3\\u10D0\\u10EE\\u10E3\\u10ED\\u10D4 \\u10D7\\u10D5\\u10D0\\u10DA\\u10D4\\u10D1\\u10D8! \", timer, \" \\u10EC\\u10D0\\u10DB\\u10D8 \\u10D3\\u10D0\\u10E0\\u10E9\\u10D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), gameState === 'playing' && gameMode === 'sequence' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          show: true,\n          children: \"\\u10D0\\u10E6\\u10D0\\u10D3\\u10D2\\u10D8\\u10DC\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n          children: shuffledImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n            isSelected: userSequence.some(seq => seq.index === index),\n            isPlayable: !userSequence.some(seq => seq.index === index),\n            onClick: () => !userSequence.some(seq => seq.index === index) && handleImageClick(image, index),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url,\n              alt: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this), userSequence.findIndex(seq => seq.index === index) > -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-number\",\n              children: userSequence.findIndex(seq => seq.index === index) + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          show: true,\n          children: userSequence.length < selectedImages.length ? `აირჩიე ${userSequence.length + 1}-ე სურათი` : 'ყველა სურათი არჩეულია'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), gameState === 'playing' && gameMode === 'missing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          show: true,\n          children: \"\\u10E0\\u10DD\\u10DB\\u10D4\\u10DA\\u10D8 \\u10E4\\u10DD\\u10E2\\u10DD \\u10D0\\u10D9\\u10DA\\u10D8\\u10D0?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n          children: shuffledImages.filter(img => img.name !== missingImage.name).map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url,\n              alt: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          show: true,\n          children: \"\\u10D0\\u10D8\\u10E0\\u10E9\\u10D8\\u10D4 \\u10E1\\u10EC\\u10DD\\u10E0\\u10D8 \\u10DE\\u10D0\\u10E1\\u10E3\\u10EE\\u10D8:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n          children: optionImages.map((image, index) => /*#__PURE__*/_jsxDEV(OptionCard, {\n            selected: (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.name) === image.name,\n            onClick: () => handleOptionSelect(image),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url,\n              alt: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MemoryGame, \"LgLV1LUCF2X2HQ6QL/jD5S+1e38=\", false, function () {\n  return [usePlayer, useNavigate];\n});\n_c17 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"GameContainer\");\n$RefreshReg$(_c3, \"SetupContainer\");\n$RefreshReg$(_c4, \"NumberSelect\");\n$RefreshReg$(_c5, \"GameModeToggle\");\n$RefreshReg$(_c6, \"ToggleButton\");\n$RefreshReg$(_c7, \"StartButton\");\n$RefreshReg$(_c8, \"GameTitle\");\n$RefreshReg$(_c9, \"ImagesGrid\");\n$RefreshReg$(_c10, \"ImageCard\");\n$RefreshReg$(_c11, \"Timer\");\n$RefreshReg$(_c12, \"Message\");\n$RefreshReg$(_c13, \"SuccessMessage\");\n$RefreshReg$(_c14, \"ErrorMessage\");\n$RefreshReg$(_c15, \"OptionCard\");\n$RefreshReg$(_c16, \"OptionsGrid\");\n$RefreshReg$(_c17, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","createGlobalStyle","useNavigate","usePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalStyle","_c","GameContainer","div","_c2","SetupContainer","_c3","NumberSelect","select","_c4","GameModeToggle","_c5","ToggleButton","button","props","active","_c6","StartButton","_c7","GameTitle","h1","_c8","ImagesGrid","_c9","ImageCard","isSelected","isPlayable","_c10","Timer","_c11","Message","show","_c12","SuccessMessage","_c13","ErrorMessage","_c14","OptionCard","disabled","selected","_c15","OptionsGrid","_c16","MemoryGame","_s","gameState","setGameState","numberOfImages","setNumberOfImages","selectedImages","setSelectedImages","shuffledImages","setShuffledImages","timer","setTimer","userSequence","setUserSequence","showSuccess","setShowSuccess","showError","setShowError","gameMode","setGameMode","missingImage","setMissingImage","selectedOption","setSelectedOption","optionImages","setOptionImages","updateGameProgress","navigate","loadImages","images","map","filename","name","replace","url","process","env","PUBLIC_URL","error","console","shuffleArray","array","shuffled","i","length","j","Math","floor","crypto","getRandomValues","Uint32Array","isReverse","every","item","index","isSame","selectRandomImages","allImages","log","slice","remainingImages","randomIndex","random","missingImg","options","startGame","handleImageClick","image","prev","newSequence","isCorrect","img","idx","Date","now","score","setTimeout","handleOptionSelect","shuffleImages","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","onClick","className","src","alt","some","seq","findIndex","filter","_c17","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\n\nconst GlobalStyle = createGlobalStyle`\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    background: linear-gradient(-45deg, \n      rgba(41, 128, 185, 0.8),\n      rgba(52, 152, 219, 0.8),\n      rgba(44, 62, 80, 0.8),\n      rgba(52, 73, 94, 0.8)\n    );\n    background-size: 400% 400%;\n    animation: gradient 15s ease infinite;\n    display: flex;\n    flex-direction: column;\n  }\n\n  #root {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst GameContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  min-height: 100vh;\n`;\n\nconst SetupContainer = styled.div`\n  margin: 40px auto;\n  max-width: 500px;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 40px;\n  border-radius: 20px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(10px);\n  animation: fadeIn 0.5s ease-out;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  h1 {\n    color: #2c3e50;\n    font-size: 2.5em;\n    margin-bottom: 30px;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  h2 {\n    color: #34495e;\n    font-size: 1.5em;\n    margin-bottom: 25px;\n    font-weight: 500;\n  }\n`;\n\nconst NumberSelect = styled.select`\n  padding: 15px 25px;\n  margin: 20px;\n  font-size: 18px;\n  border: 2px solid #e0e0e0;\n  border-radius: 12px;\n  background-color: white;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s ease;\n  width: 80%;\n  max-width: 300px;\n  color: #2c3e50;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 15px center;\n  background-size: 15px;\n\n  &:hover {\n    border-color: #4CAF50;\n    box-shadow: 0 2px 8px rgba(76, 175, 80, 0.2);\n  }\n\n  &:focus {\n    border-color: #4CAF50;\n    box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);\n  }\n`;\n\nconst GameModeToggle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin: 30px 0;\n  padding: 5px;\n  background: #f5f5f5;\n  border-radius: 15px;\n  width: 90%;\n  max-width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst ToggleButton = styled.button`\n  padding: 12px 24px;\n  background-color: ${props => props.active ? '#4CAF50' : 'transparent'};\n  color: ${props => props.active ? 'white' : '#666'};\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  flex: 1;\n\n  &:hover {\n    background-color: ${props => props.active ? '#45a049' : '#e0e0e0'};\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst StartButton = styled.button`\n  padding: 16px 40px;\n  margin: 30px;\n  font-size: 20px;\n  background: linear-gradient(45deg, #4CAF50, #45a049);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);\n  width: 80%;\n  max-width: 300px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n\n  &:hover {\n    background: linear-gradient(45deg, #45a049, #4CAF50);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);\n  }\n\n  &:active {\n    transform: translateY(1px);\n    box-shadow: 0 2px 10px rgba(76, 175, 80, 0.3);\n  }\n`;\n\nconst GameTitle = styled.h1`\n  font-size: 3em;\n  color: #2c3e50;\n  margin-bottom: 40px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  font-weight: 700;\n  letter-spacing: -1px;\n  \n  span {\n    color: #4CAF50;\n  }\n`;\n\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 30px;\n  margin: 40px auto;\n  max-width: 1000px;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 12px;\n  padding: 15px;\n  cursor: ${props => props.isPlayable ? 'pointer' : 'not-allowed'};\n  transition: all 0.3s ease;\n  position: relative;\n  width: 250px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n    box-shadow: ${props => props.isPlayable ? '0 8px 16px rgba(0, 0, 0, 0.2)' : '0 4px 8px rgba(0, 0, 0, 0.1)'};\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n  }\n\n  .order-number {\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 35px;\n    height: 35px;\n    background-color: #4CAF50;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 18px;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Timer = styled.div`\n  font-size: 32px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n\n  .hourglass {\n    font-size: 36px;\n    animation: rotate 2s infinite linear;\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Message = styled.div`\n  font-size: 28px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n`;\n\nconst SuccessMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 20px 40px;\n  border-radius: 10px;\n  font-size: 24px;\n  font-weight: bold;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n  z-index: 1000;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst ErrorMessage = styled(SuccessMessage)`\n  background-color: rgba(244, 67, 54, 0.9);\n`;\n\nconst OptionCard = styled(ImageCard)`\n  cursor: pointer;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  transform: ${props => props.selected ? 'scale(1.02)' : 'none'};\n  border-color: ${props => props.selected ? '#4CAF50' : '#ddd'};\n  margin: 0;\n  min-width: 200px;\n  flex: 1;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: ${props => props.disabled ? 'none' : 'scale(1.02)'};\n    border-color: #4CAF50;\n  }\n\n  img {\n    height: 150px;\n    object-fit: cover;\n  }\n\n  p {\n    margin: 8px 0;\n    font-size: 16px;\n  }\n`;\n\nconst OptionsGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  margin: 20px auto;\n  max-width: 1000px;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow-x: auto;\n`;\n\nconst MemoryGame = () => {\n  const [gameState, setGameState] = useState('setup');\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [gameMode, setGameMode] = useState('sequence'); // sequence or missing\n  const [missingImage, setMissingImage] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [optionImages, setOptionImages] = useState([]);\n  const { updateGameProgress } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = [\n        'ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp',\n        'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp',\n        'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp',\n        'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp',\n        'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp',\n        'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp',\n        'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp',\n        'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'\n      ];\n\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // Fisher-Yates shuffle ალგორითმი\n  const shuffleArray = useCallback((array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // ვიყენებთ crypto.getRandomValues უფრო ძლიერი შემთხვევითობისთვის\n      const j = Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1) * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    \n    // ვამოწმებთ რომ ახალი მასივი არ იყოს იგივე რაც ორიგინალი ან უკუღმა დალაგებული\n    const isReverse = shuffled.every((item, index) => item === array[array.length - 1 - index]);\n    const isSame = shuffled.every((item, index) => item === array[index]);\n    \n    if (isReverse || isSame) {\n      // თუ უკუღმა ან იგივე თანმიმდევრობაა, კიდევ ერთხელ ვურევთ\n      return shuffleArray(array);\n    }\n    \n    return shuffled;\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = shuffleArray(allImages);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n\n    if (gameMode === 'missing') {\n      // დამატებითი ფოტოების არჩევა ოფციებისთვის\n      const remainingImages = shuffled.slice(numberOfImages, numberOfImages + 3);\n      const randomIndex = Math.floor(Math.random() * selected.length);\n      const missingImg = selected[randomIndex];\n      setMissingImage(missingImg);\n      \n      // ოფციების შექმნა\n      const options = shuffleArray([...remainingImages, missingImg]);\n      setOptionImages(options);\n    }\n  }, [numberOfImages, gameMode]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n    setSelectedOption(null);\n  }, [selectRandomImages]);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image, index) => {\n    if (gameState !== 'playing') return;\n\n    if (gameMode === 'sequence') {\n      setUserSequence(prev => {\n        const newSequence = [...prev, { image, index }];\n        \n        if (newSequence.length === selectedImages.length) {\n          const isCorrect = selectedImages.every((img, idx) => \n            newSequence[idx].image.name === img.name\n          );\n          \n          if (isCorrect) {\n            updateGameProgress('memory', Date.now(), { score: 100 });\n            setShowSuccess(true);\n            setTimeout(() => {\n              setShowSuccess(false);\n              setGameState('setup');\n              setUserSequence([]);\n            }, 2000);\n          } else {\n            setShowError(true);\n            setTimeout(() => {\n              setShowError(false);\n              setUserSequence([]);\n            }, 2000);\n          }\n        }\n        \n        return newSequence;\n      });\n    }\n  }, [gameState, gameMode, selectedImages, updateGameProgress]);\n\n  // ოფციის არჩევა\n  const handleOptionSelect = useCallback((image) => {\n    if (gameState !== 'playing') return;\n    \n    setSelectedOption(image);\n    const isCorrect = image.name === missingImage.name;\n    \n    if (isCorrect) {\n      updateGameProgress('memory', Date.now(), { score: 100 });\n      setShowSuccess(true);\n      setTimeout(() => {\n        setShowSuccess(false);\n        setGameState('setup');\n        setSelectedOption(null);\n      }, 2000);\n    } else {\n      setShowError(true);\n      setTimeout(() => {\n        setShowError(false);\n        setSelectedOption(null);\n      }, 2000);\n    }\n  }, [gameState, missingImage, updateGameProgress]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => {\n      const shuffled = shuffleArray(prev);\n      console.log('Original order:', prev.map(img => img.name));\n      console.log('Shuffled order:', shuffled.map(img => img.name));\n      return shuffled;\n    });\n    setGameState('playing');\n  }, [shuffleArray]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    \n    if ((gameState === 'showing' || gameState === 'memorizing') && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => {\n          console.log('Timer tick:', prev - 1);\n          return prev - 1;\n        });\n      }, 1000);\n\n      console.log('Starting timer:', timer, 'State:', gameState);\n    } else if (timer === 0) {\n      if (gameState === 'showing') {\n        console.log('Switching to memorizing');\n        setGameState('memorizing');\n        setTimer(2);\n      } else if (gameState === 'memorizing') {\n        console.log('Switching to playing');\n        shuffleImages();\n      }\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [timer, gameState, shuffleImages]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <GameContainer>\n        {gameState === 'setup' && (\n          <SetupContainer>\n            <GameTitle>მეხსიერების თამაში <span>🧠</span></GameTitle>\n            <h2>აირჩიე რამდენი სურათი გინდა დაიმახსოვრო:</h2>\n            <NumberSelect \n              value={numberOfImages} \n              onChange={(e) => setNumberOfImages(Number(e.target.value))}\n            >\n              <option value={3}>3 სურათი</option>\n              <option value={4}>4 სურათი</option>\n              <option value={5}>5 სურათი</option>\n            </NumberSelect>\n            \n            <GameModeToggle>\n              <ToggleButton \n                active={gameMode === 'sequence'} \n                onClick={() => setGameMode('sequence')}\n              >\n                თანმიმდევრობა\n              </ToggleButton>\n              <ToggleButton \n                active={gameMode === 'missing'} \n                onClick={() => setGameMode('missing')}\n              >\n                ფოტოს ამოკლება\n              </ToggleButton>\n            </GameModeToggle>\n\n            <StartButton onClick={startGame}>დაწყება</StartButton>\n          </SetupContainer>\n        )}\n\n        {showSuccess && (\n          <SuccessMessage show>\n            გილოცავ! {gameMode === 'sequence' ? 'სწორად გაიხსენე თანმიმდევრობა!' : 'სწორად გამოიცანი რომელი ფოტო აკლდა!'} 🎉\n          </SuccessMessage>\n        )}\n\n        {showError && (\n          <ErrorMessage show>\n            სამწუხაროდ {gameMode === 'sequence' ? 'თანმიმდევრობა არასწორია' : 'ვერ გამოიცანი რომელი ფოტო აკლდა'}. სცადე თავიდან! 🤔\n          </ErrorMessage>\n        )}\n\n        {gameState === 'showing' && (\n          <>\n            <Timer>\n              <span className=\"hourglass\">⌛</span>\n              {timer} წამი\n            </Timer>\n            <Message show>დაიმახსოვრე სურათები!</Message>\n            <ImagesGrid>\n              {selectedImages.map((image, index) => (\n                <ImageCard key={index}>\n                  <img src={image.url} alt={image.name} />\n                  <p>{image.name}</p>\n                </ImageCard>\n              ))}\n            </ImagesGrid>\n          </>\n        )}\n\n        {gameState === 'memorizing' && (\n          <>\n            <Timer>\n              <span className=\"hourglass\">⌛</span>\n              {timer} წამი\n            </Timer>\n            <Message show>დახუჭე თვალები! {timer} წამი დარჩა</Message>\n          </>\n        )}\n\n        {gameState === 'playing' && gameMode === 'sequence' && (\n          <>\n            <Message show>აღადგინე სურათების თანმიმდევრობა!</Message>\n            <ImagesGrid>\n              {shuffledImages.map((image, index) => (\n                <ImageCard \n                  key={index}\n                  isSelected={userSequence.some(seq => seq.index === index)}\n                  isPlayable={!userSequence.some(seq => seq.index === index)}\n                  onClick={() => !userSequence.some(seq => seq.index === index) && handleImageClick(image, index)}\n                >\n                  <img src={image.url} alt={image.name} />\n                  <p>{image.name}</p>\n                  {userSequence.findIndex(seq => seq.index === index) > -1 && (\n                    <div className=\"order-number\">\n                      {userSequence.findIndex(seq => seq.index === index) + 1}\n                    </div>\n                  )}\n                </ImageCard>\n              ))}\n            </ImagesGrid>\n            <Message show>\n              {userSequence.length < selectedImages.length \n                ? `აირჩიე ${userSequence.length + 1}-ე სურათი`\n                : 'ყველა სურათი არჩეულია'}\n            </Message>\n          </>\n        )}\n\n        {gameState === 'playing' && gameMode === 'missing' && (\n          <>\n            <Message show>რომელი ფოტო აკლია?</Message>\n            <ImagesGrid>\n              {shuffledImages.filter(img => img.name !== missingImage.name).map((image, index) => (\n                <ImageCard key={index}>\n                  <img src={image.url} alt={image.name} />\n                  <p>{image.name}</p>\n                </ImageCard>\n              ))}\n            </ImagesGrid>\n            <Message show>აირჩიე სწორი პასუხი:</Message>\n            <OptionsGrid>\n              {optionImages.map((image, index) => (\n                <OptionCard\n                  key={index}\n                  selected={selectedOption?.name === image.name}\n                  onClick={() => handleOptionSelect(image)}\n                >\n                  <img src={image.url} alt={image.name} />\n                  <p>{image.name}</p>\n                </OptionCard>\n              ))}\n            </OptionsGrid>\n          </>\n        )}\n      </GameContainer>\n    </>\n  );\n};\n\nexport default MemoryGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,WAAW,GAAGP,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,EAAA,GAlCID,WAAW;AAoCjB,MAAME,aAAa,GAAGV,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIF,aAAa;AAcnB,MAAMG,cAAc,GAAGb,MAAM,CAACW,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAlCID,cAAc;AAoCpB,MAAME,YAAY,GAAGf,MAAM,CAACgB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA5BIF,YAAY;AA8BlB,MAAMG,cAAc,GAAGlB,MAAM,CAACW,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAbID,cAAc;AAepB,MAAME,YAAY,GAAGpB,MAAM,CAACqB,MAAM;AAClC;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,aAAa;AACvE,WAAWD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,OAAO,GAAG,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GApBIJ,YAAY;AAsBlB,MAAMK,WAAW,GAAGzB,MAAM,CAACqB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GA3BID,WAAW;AA6BjB,MAAME,SAAS,GAAG3B,MAAM,CAAC4B,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,SAAS;AAaf,MAAMG,UAAU,GAAG9B,MAAM,CAACW,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GARID,UAAU;AAUhB,MAAME,SAAS,GAAGhC,MAAM,CAACW,GAAG;AAC5B,sBAAsBW,KAAK,IAAIA,KAAK,CAACW,UAAU,GAAG,SAAS,GAAG,MAAM;AACpE;AACA;AACA,YAAYX,KAAK,IAAIA,KAAK,CAACY,UAAU,GAAG,SAAS,GAAG,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBZ,KAAK,IAAIA,KAAK,CAACY,UAAU,GAAG,aAAa,GAAG,MAAM;AACnE,kBAAkBZ,KAAK,IAAIA,KAAK,CAACY,UAAU,GAAG,+BAA+B,GAAG,8BAA8B;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}