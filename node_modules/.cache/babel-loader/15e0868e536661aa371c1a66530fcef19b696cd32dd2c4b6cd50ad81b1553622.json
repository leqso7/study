{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : {\n      puzzles: [],\n      completedTasks: [],\n      taskScores: {},\n      completedScrambleTasks: [],\n      scrambleScores: {},\n      lastPlayed: null\n    };\n  });\n  const updatePlayerName = name => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n  const updateGameProgress = (gameType, imageId, progress) => {\n    setGameProgress(prev => {\n      const newProgress = {\n        ...prev\n      };\n\n      // ინიციალიზაცია თუ არ არსებობს\n      if (!newProgress.puzzles) {\n        newProgress.puzzles = [];\n      }\n\n      // ვამატებთ ახალ პაზლს\n      newProgress.puzzles.push({\n        id: imageId,\n        date: new Date().toISOString(),\n        difficulty: progress.difficulty,\n        errors: progress.errors,\n        totalPieces: progress.difficulty * progress.difficulty,\n        accuracy: calculateAccuracy(progress.difficulty * progress.difficulty, progress.errors)\n      });\n\n      // ვინახავთ localStorage-ში\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n\n  // დამხმარე ფუნქცია სიზუსტის გამოსათვლელად\n  const calculateAccuracy = (totalPieces, errors) => {\n    const correctFirstTry = totalPieces - errors;\n    return Math.round(correctFirstTry / totalPieces * 100);\n  };\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"g4NRLqR6z3XH+estaEP4cOFMsAQ=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","PlayerContext","PlayerProvider","children","_s","playerName","setPlayerName","localStorage","getItem","showNameModal","setShowNameModal","gameProgress","setGameProgress","savedProgress","JSON","parse","puzzles","completedTasks","taskScores","completedScrambleTasks","scrambleScores","lastPlayed","updatePlayerName","name","setItem","updateGameProgress","gameType","imageId","progress","prev","newProgress","push","id","date","Date","toISOString","difficulty","errors","totalPieces","accuracy","calculateAccuracy","stringify","correctFirstTry","Math","round","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst PlayerContext = createContext();\n\nexport const PlayerProvider = ({ children }) => {\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : {\n      puzzles: [],\n      completedTasks: [],\n      taskScores: {},\n      completedScrambleTasks: [],\n      scrambleScores: {},\n      lastPlayed: null\n    };\n  });\n\n  const updatePlayerName = (name) => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n\n  const updateGameProgress = (gameType, imageId, progress) => {\n    setGameProgress(prev => {\n      const newProgress = { ...prev };\n      \n      // ინიციალიზაცია თუ არ არსებობს\n      if (!newProgress.puzzles) {\n        newProgress.puzzles = [];\n      }\n      \n      // ვამატებთ ახალ პაზლს\n      newProgress.puzzles.push({\n        id: imageId,\n        date: new Date().toISOString(),\n        difficulty: progress.difficulty,\n        errors: progress.errors,\n        totalPieces: progress.difficulty * progress.difficulty,\n        accuracy: calculateAccuracy(progress.difficulty * progress.difficulty, progress.errors)\n      });\n      \n      // ვინახავთ localStorage-ში\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      \n      return newProgress;\n    });\n  };\n\n  // დამხმარე ფუნქცია სიზუსტის გამოსათვლელად\n  const calculateAccuracy = (totalPieces, errors) => {\n    const correctFirstTry = totalPieces - errors;\n    return Math.round((correctFirstTry / totalPieces) * 100);\n  };\n\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n\n  return (\n    <PlayerContext.Provider value={value}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}