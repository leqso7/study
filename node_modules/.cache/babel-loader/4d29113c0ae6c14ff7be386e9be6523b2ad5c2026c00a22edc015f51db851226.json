{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\ScrambleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../styles/ScrambleGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animals = [{\n  name: '·Éñ·Éî·Éë·É†·Éê',\n  image: '·Éñ·Éî·Éë·É†·Éê.webp'\n}, {\n  name: '·É°·Éû·Éò·Éö·Éù',\n  image: '·É°·Éû·Éò·Éö·Éù.webp'\n}, {\n  name: '·Éö·Éù·Éõ·Éò',\n  image: '·Éö·Éù·Éõ·Éò.webp'\n}, {\n  name: '·Éì·Éê·Éó·Éï·Éò',\n  image: '·Éì·Éê·Éó·Éï·Éò.webp'\n}, {\n  name: '·Éõ·Éí·Éî·Éö·Éò',\n  image: '·Éõ·Éí·Éî·Éö·Éù.webp'\n}, {\n  name: '·Éò·É†·Éî·Éõ·Éò',\n  image: '·Éò·É†·Éî·Éõ·Éò.webp'\n}, {\n  name: '·Éó·ÉÆ·Éê',\n  image: '·Éó·ÉÆ·Éê.webp'\n}, {\n  name: '·Éô·É£·É†·Éì·É¶·Éî·Éö·Éò',\n  image: '·Éô·É£·É†·Éì·É¶·Éî·Éö·Éò.webp'\n}];\nconst ScrambleGame = () => {\n  _s();\n  const [currentAnimal, setCurrentAnimal] = useState(null);\n  const [scrambledLetters, setScrambledLetters] = useState([]);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const scrambleWord = word => {\n    return word.split('').sort(() => Math.random() - 0.5).map((letter, index) => ({\n      id: `letter-${index}`,\n      content: letter\n    }));\n  };\n  const selectRandomAnimal = () => {\n    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\n    setCurrentAnimal(randomAnimal);\n    setScrambledLetters(scrambleWord(randomAnimal.name));\n    setIsCorrect(false);\n  };\n  useEffect(() => {\n    selectRandomAnimal();\n  }, []);\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(scrambledLetters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setScrambledLetters(items);\n\n    // Check if word is correct\n    const currentWord = items.map(item => item.content).join('');\n    if (currentWord === currentAnimal.name) {\n      setIsCorrect(true);\n      setTimeout(() => {\n        selectRandomAnimal();\n      }, 1500);\n    }\n  };\n  if (!currentAnimal) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scramble-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/src/·É§·Éù·É¢·Éù·Éî·Éë·Éò/${currentAnimal.image}`,\n      alt: currentAnimal.name,\n      className: \"animal-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"letters\",\n        direction: \"horizontal\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"letters-container\",\n          children: [scrambledLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: letter.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: \"letter\",\n              children: letter.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, letter.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isCorrect && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: \"\\u10E1\\u10EC\\u10DD\\u10E0\\u10D8\\u10D0! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: selectRandomAnimal,\n      className: \"scramble-button\",\n      children: \"\\u10D0\\u10E1\\u10DD\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D0\\u10E0\\u10D4\\u10D5\\u10D0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrambleGame, \"/nk+dGMV5hI1SDHfOCkCHItcMlE=\");\n_c = ScrambleGame;\nexport default ScrambleGame;\nvar _c;\n$RefreshReg$(_c, \"ScrambleGame\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","animals","name","image","ScrambleGame","_s","currentAnimal","setCurrentAnimal","scrambledLetters","setScrambledLetters","isCorrect","setIsCorrect","scrambleWord","word","split","sort","Math","random","map","letter","index","id","content","selectRandomAnimal","randomAnimal","floor","length","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","currentWord","item","join","setTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","droppableId","direction","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/ScrambleGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport '../styles/ScrambleGame.css';\r\n\r\nconst animals = [\r\n  { name: '·Éñ·Éî·Éë·É†·Éê', image: '·Éñ·Éî·Éë·É†·Éê.webp' },\r\n  { name: '·É°·Éû·Éò·Éö·Éù', image: '·É°·Éû·Éò·Éö·Éù.webp' },\r\n  { name: '·Éö·Éù·Éõ·Éò', image: '·Éö·Éù·Éõ·Éò.webp' },\r\n  { name: '·Éì·Éê·Éó·Éï·Éò', image: '·Éì·Éê·Éó·Éï·Éò.webp' },\r\n  { name: '·Éõ·Éí·Éî·Éö·Éò', image: '·Éõ·Éí·Éî·Éö·Éù.webp' },\r\n  { name: '·Éò·É†·Éî·Éõ·Éò', image: '·Éò·É†·Éî·Éõ·Éò.webp' },\r\n  { name: '·Éó·ÉÆ·Éê', image: '·Éó·ÉÆ·Éê.webp' },\r\n  { name: '·Éô·É£·É†·Éì·É¶·Éî·Éö·Éò', image: '·Éô·É£·É†·Éì·É¶·Éî·Éö·Éò.webp' },\r\n];\r\n\r\nconst ScrambleGame = () => {\r\n  const [currentAnimal, setCurrentAnimal] = useState(null);\r\n  const [scrambledLetters, setScrambledLetters] = useState([]);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n\r\n  const scrambleWord = (word) => {\r\n    return word\r\n      .split('')\r\n      .sort(() => Math.random() - 0.5)\r\n      .map((letter, index) => ({\r\n        id: `letter-${index}`,\r\n        content: letter\r\n      }));\r\n  };\r\n\r\n  const selectRandomAnimal = () => {\r\n    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];\r\n    setCurrentAnimal(randomAnimal);\r\n    setScrambledLetters(scrambleWord(randomAnimal.name));\r\n    setIsCorrect(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    selectRandomAnimal();\r\n  }, []);\r\n\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(scrambledLetters);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setScrambledLetters(items);\r\n\r\n    // Check if word is correct\r\n    const currentWord = items.map(item => item.content).join('');\r\n    if (currentWord === currentAnimal.name) {\r\n      setIsCorrect(true);\r\n      setTimeout(() => {\r\n        selectRandomAnimal();\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  if (!currentAnimal) return null;\r\n\r\n  return (\r\n    <div className=\"scramble-game\">\r\n      <img \r\n        src={`/src/·É§·Éù·É¢·Éù·Éî·Éë·Éò/${currentAnimal.image}`} \r\n        alt={currentAnimal.name}\r\n        className=\"animal-image\"\r\n      />\r\n      \r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"letters\" direction=\"horizontal\">\r\n          {(provided) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className=\"letters-container\"\r\n            >\r\n              {scrambledLetters.map((letter, index) => (\r\n                <Draggable key={letter.id} draggableId={letter.id} index={index}>\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      className=\"letter\"\r\n                    >\r\n                      {letter.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n\r\n      {isCorrect && <div className=\"success-message\">·É°·É¨·Éù·É†·Éò·Éê! üéâ</div>}\r\n      \r\n      <button onClick={selectRandomAnimal} className=\"scramble-button\">\r\n        ·Éê·É°·Éù·Éî·Éë·Éò·É° ·Éê·É†·Éî·Éï·Éê\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrambleGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAG,CACd;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACtC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACtC;EAAED,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAY,CAAC,EACpC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACtC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACtC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACtC;EAAED,IAAI,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAW,CAAC,EAClC;EAAED,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAgB,CAAC,CAC7C;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMkB,YAAY,GAAIC,IAAI,IAAK;IAC7B,OAAOA,IAAI,CACRC,KAAK,CAAC,EAAE,CAAC,CACTC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,MAAM;MACvBC,EAAE,EAAE,UAAUD,KAAK,EAAE;MACrBE,OAAO,EAAEH;IACX,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,YAAY,GAAGvB,OAAO,CAACe,IAAI,CAACS,KAAK,CAACT,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGhB,OAAO,CAACyB,MAAM,CAAC,CAAC;IACxEnB,gBAAgB,CAACiB,YAAY,CAAC;IAC9Bf,mBAAmB,CAACG,YAAY,CAACY,YAAY,CAACtB,IAAI,CAAC,CAAC;IACpDS,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd4B,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,aAAa,GAAIC,MAAM,IAAK;IAChC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAEzB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACxB,gBAAgB,CAAC;IAC1C,MAAM,CAACyB,aAAa,CAAC,GAAGH,KAAK,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACf,KAAK,EAAE,CAAC,CAAC;IAC5DU,KAAK,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACT,KAAK,EAAE,CAAC,EAAEa,aAAa,CAAC;IAExDxB,mBAAmB,CAACqB,KAAK,CAAC;;IAE1B;IACA,MAAMM,WAAW,GAAGN,KAAK,CAACZ,GAAG,CAACmB,IAAI,IAAIA,IAAI,CAACf,OAAO,CAAC,CAACgB,IAAI,CAAC,EAAE,CAAC;IAC5D,IAAIF,WAAW,KAAK9B,aAAa,CAACJ,IAAI,EAAE;MACtCS,YAAY,CAAC,IAAI,CAAC;MAClB4B,UAAU,CAAC,MAAM;QACfhB,kBAAkB,CAAC,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,IAAI,CAACjB,aAAa,EAAE,OAAO,IAAI;EAE/B,oBACEN,OAAA;IAAKwC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzC,OAAA;MACE0C,GAAG,EAAE,gBAAgBpC,aAAa,CAACH,KAAK,EAAG;MAC3CwC,GAAG,EAAErC,aAAa,CAACJ,IAAK;MACxBsC,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAEF/C,OAAA,CAACJ,eAAe;MAACoD,SAAS,EAAErB,aAAc;MAAAc,QAAA,eACxCzC,OAAA,CAACH,SAAS;QAACoD,WAAW,EAAC,SAAS;QAACC,SAAS,EAAC,YAAY;QAAAT,QAAA,EACnDU,QAAQ,iBACRnD,OAAA;UAAA,GACMmD,QAAQ,CAACC,cAAc;UAC3BC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UACvBd,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAE5BjC,gBAAgB,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClCpB,OAAA,CAACF,SAAS;YAAiByD,WAAW,EAAEpC,MAAM,CAACE,EAAG;YAACD,KAAK,EAAEA,KAAM;YAAAqB,QAAA,EAC5DU,QAAQ,iBACRnD,OAAA;cACEqD,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACK,cAAc;cAAA,GACvBL,QAAQ,CAACM,eAAe;cAC5BjB,SAAS,EAAC,QAAQ;cAAAC,QAAA,EAEjBtB,MAAM,CAACG;YAAO;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UACN,GAVa5B,MAAM,CAACE,EAAE;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWd,CACZ,CAAC,EACDI,QAAQ,CAACO,WAAW;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EAEjBrC,SAAS,iBAAIV,OAAA;MAAKwC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/D/C,OAAA;MAAQ2D,OAAO,EAAEpC,kBAAmB;MAACiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAEjE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA1FID,YAAY;AAAAwD,EAAA,GAAZxD,YAAY;AA4FlB,eAAeA,YAAY;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}