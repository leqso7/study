{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  align-items: flex-start;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst OriginalImage = styled.div`\n  width: 200px;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n`;\n_c2 = OriginalImage;\nconst HintButton = styled.button`\n  background-color: #2196F3;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #1976D2;\n    transform: scale(1.05);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n_c3 = HintButton;\nconst MenuButton = styled(HintButton)`\n  background-color: #4CAF50;\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background-color: #388E3C;\n  }\n`;\n_c4 = MenuButton;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c5 = ButtonsContainer;\nconst BoardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c6 = BoardsContainer;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? '#f5f5f5' : '#fff'};\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  width: 400px;\n  height: 400px;\n  box-sizing: border-box;\n`;\n_c7 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : '#ddd'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? '#f0f0f0' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n  }\n`;\n_c8 = PuzzlePiece;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c9 = Message;\nconst Title = styled.h2`\n  color: #2196F3;\n  margin: 0 0 10px 0;\n  font-size: 1.2rem;\n`;\n_c10 = Title;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c11 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c12 = DraggedPiece;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({\n      length: totalPieces\n    }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${index % difficulty * (100 / (difficulty - 1))}% ${Math.floor(index / difficulty) * (100 / (difficulty - 1))}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n    const initialTargetBoard = Array(totalPieces).fill(null);\n    setPieces(initialPieces);\n    setTargetBoard(initialTargetBoard);\n    setCorrectPositions(new Set());\n    setSelectedPiece(null);\n    setWrongAttempts(new Set());\n    setDraggedPiece(null);\n  }, [image]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  const handleSourcePieceClick = index => {\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set()); // გავასუფთავოთ წითელი ინდიკატორები ახალი ნაწილის არჩევისას\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetBoard[targetIndex] !== null) return;\n    const selectedPieceData = pieces[draggedPiece];\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OriginalImage, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(HintButton, {\n          onClick: toggleHints,\n          children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuButton, {\n          onClick: onBackToMenu,\n          children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          size: difficulty,\n          isTarget: false,\n          children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            image: image,\n            size: difficulty,\n            bgPosition: piece.bgPosition,\n            onClick: () => handleSourcePieceClick(index),\n            isDragging: draggedPiece === index,\n            children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n              children: [\"\\u10D0\\u10D3\\u10D2\\u10D8\\u10DA\\u10D8: \", parseInt(piece.id) + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)\n          }, piece.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"\\u10E1\\u10D0\\u10DB\\u10D8\\u10D6\\u10DC\\u10D4 \\u10E9\\u10D0\\u10E0\\u10E9\\u10DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          size: difficulty,\n          isTarget: true,\n          children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            image: piece ? image : null,\n            size: difficulty,\n            bgPosition: piece ? piece.bgPosition : '',\n            isTarget: !piece,\n            isPlaced: piece !== null,\n            isWrongAttempt: wrongAttempts.has(index),\n            onClick: () => handleTargetPieceClick(index),\n            children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x - 50}px`,\n        top: `${mousePosition.y - 50}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"IQ6LSnlZ4ELI1wQRsLqlOVYAVaA=\");\n_c13 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"OriginalImage\");\n$RefreshReg$(_c3, \"HintButton\");\n$RefreshReg$(_c4, \"MenuButton\");\n$RefreshReg$(_c5, \"ButtonsContainer\");\n$RefreshReg$(_c6, \"BoardsContainer\");\n$RefreshReg$(_c7, \"Board\");\n$RefreshReg$(_c8, \"PuzzlePiece\");\n$RefreshReg$(_c9, \"Message\");\n$RefreshReg$(_c10, \"Title\");\n$RefreshReg$(_c11, \"HintOverlay\");\n$RefreshReg$(_c12, \"DraggedPiece\");\n$RefreshReg$(_c13, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","GameContainer","div","_c","OriginalImage","props","image","_c2","HintButton","button","_c3","MenuButton","_c4","ButtonsContainer","_c5","BoardsContainer","_c6","Board","size","isTarget","_c7","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","isDragging","_c8","Message","_c9","Title","h2","_c10","HintOverlay","_c11","DraggedPiece","_c12","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","totalPieces","initialPieces","Array","from","length","_","index","id","String","Math","floor","correctIndex","sort","random","initialTargetBoard","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","toggleHints","progress","round","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","piece","has","style","left","top","backgroundImage","backgroundSize","backgroundPosition","_c13","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  align-items: flex-start;\n  padding: 20px;\n`;\n\nconst OriginalImage = styled.div`\n  width: 200px;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n`;\n\nconst HintButton = styled.button`\n  background-color: #2196F3;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #1976D2;\n    transform: scale(1.05);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nconst MenuButton = styled(HintButton)`\n  background-color: #4CAF50;\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background-color: #388E3C;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst BoardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? '#f5f5f5' : '#fff'};\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  width: 400px;\n  height: 400px;\n  box-sizing: border-box;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : '#ddd'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? '#f0f0f0' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst Title = styled.h2`\n  color: #2196F3;\n  margin: 0 0 10px 0;\n  font-size: 1.2rem;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({ length: totalPieces }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${(index % difficulty) * (100 / (difficulty - 1))}% ${Math.floor(index / difficulty) * (100 / (difficulty - 1))}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n\n    const initialTargetBoard = Array(totalPieces).fill(null);\n    \n    setPieces(initialPieces);\n    setTargetBoard(initialTargetBoard);\n    setCorrectPositions(new Set());\n    setSelectedPiece(null);\n    setWrongAttempts(new Set());\n    setDraggedPiece(null);\n  }, [image]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  const handleSourcePieceClick = (index) => {\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set()); // გავასუფთავოთ წითელი ინდიკატორები ახალი ნაწილის არჩევისას\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetBoard[targetIndex] !== null) return;\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  return (\n    <GameContainer>\n      <div>\n        <Title>ორიგინალი სურათი</Title>\n        <OriginalImage image={image} />\n        <ButtonsContainer>\n          <HintButton onClick={toggleHints}>\n            {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n          </HintButton>\n          <MenuButton onClick={onBackToMenu}>\n            🏠 მთავარ მენიუში დაბრუნება\n          </MenuButton>\n        </ButtonsContainer>\n      </div>\n      \n      <BoardsContainer>\n        <div>\n          <Title>პაზლის ნაწილები</Title>\n          <Board size={difficulty} isTarget={false}>\n            {pieces.map((piece, index) => piece && (\n              <PuzzlePiece\n                key={piece.id}\n                image={image}\n                size={difficulty}\n                bgPosition={piece.bgPosition}\n                onClick={() => handleSourcePieceClick(index)}\n                isDragging={draggedPiece === index}\n              >\n                {showHints && (\n                  <HintOverlay>\n                    ადგილი: {parseInt(piece.id) + 1}\n                  </HintOverlay>\n                )}\n              </PuzzlePiece>\n            ))}\n          </Board>\n        </div>\n\n        <div>\n          <Title>სამიზნე ჩარჩო</Title>\n          <Board size={difficulty} isTarget={true}>\n            {targetBoard.map((piece, index) => (\n              <PuzzlePiece\n                key={index}\n                image={piece ? image : null}\n                size={difficulty}\n                bgPosition={piece ? piece.bgPosition : ''}\n                isTarget={!piece}\n                isPlaced={piece !== null}\n                isWrongAttempt={wrongAttempts.has(index)}\n                onClick={() => handleTargetPieceClick(index)}\n              >\n                {!piece && showHints && (\n                  <Message>\n                    {index + 1}\n                  </Message>\n                )}\n              </PuzzlePiece>\n            ))}\n          </Board>\n        </div>\n      </BoardsContainer>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x - 50}px`,\n            top: `${mousePosition.y - 50}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}