{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  padding: 1.5rem;\n  overflow: hidden;\n`;\n_c = GameContainer;\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 90vh;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-radius: 2rem;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  padding: 2rem;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(25, 118, 210, 0.3);\n    border-radius: 4px;\n    \n    &:hover {\n      background: rgba(25, 118, 210, 0.5);\n    }\n  }\n`;\n_c2 = MainContent;\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 2rem;\n  width: 100%;\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n_c3 = ContentGrid;\nconst LeftColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c4 = LeftColumn;\nconst RightColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c5 = RightColumn;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1), 0 3px 10px rgba(0, 0, 0, 0.05);\n  border-radius: 1.5rem;\n  padding: 1.5rem;\n  height: fit-content;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12), 0 4px 12px rgba(0, 0, 0, 0.06);\n  }\n`;\n_c6 = Card;\nconst CardTitle = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  color: #1976D2;\n  letter-spacing: 0.5px;\n`;\n_c7 = CardTitle;\nconst ImageCard = styled(Card)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n`;\n_c8 = ImageCard;\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 4}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 1rem;\n  overflow: hidden;\n  border: 3px solid rgba(25, 118, 210, 0.15);\n  margin: 0 auto;\n  cursor: pointer;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  \n  &:hover {\n    transform: scale(1.02);\n    border-color: rgba(25, 118, 210, 0.3);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  }\n  \n  ${props => props.isExpanded && `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    border: none;\n    border-radius: 1.5rem;\n    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n  `}\n`;\n_c9 = ImageContainer;\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.isExpanded ? 'contain' : `${props.size * 100}% ${props.size * 100}%`};\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n`;\n_c10 = OriginalImage;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 4px;\n  background-color: ${props => props.isTarget ? 'rgba(236, 239, 241, 0.7)' : 'transparent'};\n  padding: 1rem;\n  border-radius: 1.5rem;\n  border: 3px dashed ${props => props.isTarget ? 'rgba(25, 118, 210, 0.3)' : 'transparent'};\n  aspect-ratio: 1;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background-color: ${props => props.isTarget ? 'rgba(236, 239, 241, 0.9)' : 'rgba(236, 239, 241, 0.1)'};\n  }\n`;\n_c11 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  aspect-ratio: 1;\n  background-color: rgba(255, 255, 255, 0.95);\n  border-radius: 1rem;\n  overflow: hidden;\n  cursor: grab;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n  }\n  \n  &:active {\n    cursor: grabbing;\n    transform: scale(1.05);\n    box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n  }\n`;\n_c12 = PuzzlePiece;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c13 = ButtonsContainer;\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c14 = Button;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c15 = Message;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c16 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c17 = DraggedPiece;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst LoadingSpinner = styled.div`\n  width: 48px;\n  height: 48px;\n  border: 4px solid rgba(236, 239, 241, 0.9);\n  border-top: 4px solid #1976D2;\n  border-radius: 50%;\n  animation: ${spin} 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  margin: 2rem auto;\n`;\n_c18 = LoadingSpinner;\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n_c19 = LoadingOverlay;\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu,\n  onImageChange,\n  onError\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [errorCount, setErrorCount] = useState(0);\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageExpanded, setIsImageExpanded] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [isToastClosing, setIsToastClosing] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n    return pieces;\n  }, [difficulty]);\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      try {\n        const totalPieces = difficulty * difficulty;\n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n        const shuffledPieces = [...initialPieces].sort(() => Math.random() - 0.5).map((piece, index) => ({\n          ...piece,\n          currentPos: index\n        }));\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  const handlePaste = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      var _e$clipboardData;\n      const items = (_e$clipboardData = e.clipboardData) === null || _e$clipboardData === void 0 ? void 0 : _e$clipboardData.items;\n      if (!items) return;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const file = items[i].getAsFile();\n          const reader = new FileReader();\n          reader.onload = event => {\n            onImageChange(event.target.result);\n            setIsLoading(false);\n          };\n          reader.readAsDataURL(file);\n          return;\n        }\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error handling paste:', error);\n      setIsLoading(false);\n    }\n  };\n  const handleSourcePieceClick = index => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n      setErrorCount(prev => prev + 1);\n      onError();\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async clipboardItems => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = e => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch(err => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n  const toggleImageExpand = () => {\n    setIsImageExpanded(!isImageExpanded);\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete(errorCount);\n    }\n  }, [correctPositions, difficulty, onComplete, errorCount, onProgress]);\n  useEffect(() => {\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(ContentGrid, {\n        children: [/*#__PURE__*/_jsxDEV(LeftColumn, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83C\\uDFAE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this), \"\\u10D0\\u10E5 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4 \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n                children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Board, {\n                size: difficulty,\n                isTarget: true,\n                children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n                  image: piece ? image : null,\n                  size: difficulty,\n                  bgPosition: piece ? piece.bgPosition : '',\n                  isTarget: !piece,\n                  isPlaced: piece !== null,\n                  isWrongAttempt: wrongAttempts.has(index),\n                  onClick: () => handleTargetPieceClick(index),\n                  children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightColumn, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83E\\uDDE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this), \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n                children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Board, {\n                size: difficulty,\n                isTarget: false,\n                children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n                  image: image,\n                  size: difficulty,\n                  bgPosition: piece.bgPosition,\n                  onClick: () => handleSourcePieceClick(index),\n                  isDragging: draggedPiece === index,\n                  children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n                    children: parseInt(piece.id) + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 25\n                  }, this)\n                }, piece.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83D\\uDDBC\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 17\n              }, this), \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: 'auto',\n                  fontSize: '0.8em',\n                  opacity: 0.7\n                },\n                children: \"(\\u10D3\\u10D0\\u10D0\\u10ED\\u10D8\\u10E0\\u10D4 \\u10D2\\u10D0\\u10E1\\u10D0\\u10D3\\u10D8\\u10D3\\u10D4\\u10D1\\u10DA\\u10D0\\u10D3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n              size: difficulty,\n              isExpanded: isImageExpanded,\n              onClick: toggleImageExpand,\n              children: /*#__PURE__*/_jsxDEV(OriginalImage, {\n                image: image,\n                size: difficulty,\n                isExpanded: isImageExpanded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: toggleHints,\n                children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onBackToMenu,\n                children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 516,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"ecfSRVPUr4JTbkDfJcuw7GUW5Q0=\");\n_c20 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"ContentGrid\");\n$RefreshReg$(_c4, \"LeftColumn\");\n$RefreshReg$(_c5, \"RightColumn\");\n$RefreshReg$(_c6, \"Card\");\n$RefreshReg$(_c7, \"CardTitle\");\n$RefreshReg$(_c8, \"ImageCard\");\n$RefreshReg$(_c9, \"ImageContainer\");\n$RefreshReg$(_c10, \"OriginalImage\");\n$RefreshReg$(_c11, \"Board\");\n$RefreshReg$(_c12, \"PuzzlePiece\");\n$RefreshReg$(_c13, \"ButtonsContainer\");\n$RefreshReg$(_c14, \"Button\");\n$RefreshReg$(_c15, \"Message\");\n$RefreshReg$(_c16, \"HintOverlay\");\n$RefreshReg$(_c17, \"DraggedPiece\");\n$RefreshReg$(_c18, \"LoadingSpinner\");\n$RefreshReg$(_c19, \"LoadingOverlay\");\n$RefreshReg$(_c20, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","keyframes","jsxDEV","_jsxDEV","GameContainer","div","_c","MainContent","_c2","ContentGrid","_c3","LeftColumn","_c4","RightColumn","_c5","Card","_c6","CardTitle","h3","_c7","ImageCard","_c8","ImageContainer","props","size","isExpanded","_c9","OriginalImage","image","_c10","Board","isTarget","_c11","PuzzlePiece","_c12","ButtonsContainer","_c13","Button","button","variant","_c14","Message","_c15","HintOverlay","_c16","DraggedPiece","_c17","spin","LoadingSpinner","_c18","LoadingOverlay","_c19","fadeIn","fadeOut","Toast","isClosing","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","onImageChange","onError","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","errorCount","setErrorCount","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","isLoading","setIsLoading","isImageExpanded","setIsImageExpanded","showToast","setShowToast","isToastClosing","setIsToastClosing","initialPieces","totalPieces","pieceSize","i","j","push","id","bgPosition","correctIndex","initializePuzzle","console","error","Promise","resolve","setTimeout","shuffledPieces","sort","Math","random","map","piece","index","currentPos","initialTargetBoard","Array","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handlePaste","preventDefault","_e$clipboardData","items","clipboardData","length","type","indexOf","file","getAsFile","reader","FileReader","onload","event","target","result","readAsDataURL","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","prev","toggleHints","handlePasteClick","navigator","clipboard","read","then","clipboardItems","clipboardItem","types","startsWith","blob","getType","catch","err","toggleImageExpand","progress","round","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","isPlaced","isWrongAttempt","has","onClick","isDragging","marginLeft","fontSize","opacity","left","top","backgroundImage","backgroundSize","backgroundPosition","_c20","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  padding: 1.5rem;\n  overflow: hidden;\n`;\n\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 90vh;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-radius: 2rem;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  padding: 2rem;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(25, 118, 210, 0.3);\n    border-radius: 4px;\n    \n    &:hover {\n      background: rgba(25, 118, 210, 0.5);\n    }\n  }\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 2rem;\n  width: 100%;\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst LeftColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst RightColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1), 0 3px 10px rgba(0, 0, 0, 0.05);\n  border-radius: 1.5rem;\n  padding: 1.5rem;\n  height: fit-content;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12), 0 4px 12px rgba(0, 0, 0, 0.06);\n  }\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  color: #1976D2;\n  letter-spacing: 0.5px;\n`;\n\nconst ImageCard = styled(Card)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 4}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 1rem;\n  overflow: hidden;\n  border: 3px solid rgba(25, 118, 210, 0.15);\n  margin: 0 auto;\n  cursor: pointer;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  \n  &:hover {\n    transform: scale(1.02);\n    border-color: rgba(25, 118, 210, 0.3);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  }\n  \n  ${props => props.isExpanded && `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    border: none;\n    border-radius: 1.5rem;\n    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n  `}\n`;\n\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.isExpanded ? 'contain' : `${props.size * 100}% ${props.size * 100}%`};\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 4px;\n  background-color: ${props => props.isTarget ? 'rgba(236, 239, 241, 0.7)' : 'transparent'};\n  padding: 1rem;\n  border-radius: 1.5rem;\n  border: 3px dashed ${props => props.isTarget ? 'rgba(25, 118, 210, 0.3)' : 'transparent'};\n  aspect-ratio: 1;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background-color: ${props => props.isTarget ? 'rgba(236, 239, 241, 0.9)' : 'rgba(236, 239, 241, 0.1)'};\n  }\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  aspect-ratio: 1;\n  background-color: rgba(255, 255, 255, 0.95);\n  border-radius: 1rem;\n  overflow: hidden;\n  cursor: grab;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n  }\n  \n  &:active {\n    cursor: grabbing;\n    transform: scale(1.05);\n    box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 48px;\n  height: 48px;\n  border: 4px solid rgba(236, 239, 241, 0.9);\n  border-top: 4px solid #1976D2;\n  border-radius: 50%;\n  animation: ${spin} 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  margin: 2rem auto;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\n\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu, onImageChange, onError }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [errorCount, setErrorCount] = useState(0);\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageExpanded, setIsImageExpanded] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [isToastClosing, setIsToastClosing] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n\n    return pieces;\n  }, [difficulty]);\n\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      \n      try {\n        const totalPieces = difficulty * difficulty;\n        \n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        const shuffledPieces = [...initialPieces]\n          .sort(() => Math.random() - 0.5)\n          .map((piece, index) => ({\n            ...piece,\n            currentPos: index\n          }));\n\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        \n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  const handlePaste = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      const items = e.clipboardData?.items;\n      if (!items) return;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const file = items[i].getAsFile();\n          const reader = new FileReader();\n          \n          reader.onload = (event) => {\n            onImageChange(event.target.result);\n            setIsLoading(false);\n          };\n          \n          reader.readAsDataURL(file);\n          return;\n        }\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error handling paste:', error);\n      setIsLoading(false);\n    }\n  };\n\n  const handleSourcePieceClick = (index) => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n      setErrorCount(prev => prev + 1);\n      onError();\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async (clipboardItems) => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch((err) => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n\n  const toggleImageExpand = () => {\n    setIsImageExpanded(!isImageExpanded);\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete(errorCount);\n    }\n  }, [correctPositions, difficulty, onComplete, errorCount, onProgress]);\n\n  useEffect(() => {\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, []);\n\n  return (\n    <GameContainer>\n      <MainContent>\n        <ContentGrid>\n          <LeftColumn>\n            <Card>\n              <CardTitle>\n                <span>🎮</span>\n                აქ ააწყვე პაზლი\n              </CardTitle>\n              <div style={{ position: 'relative' }}>\n                {isLoading && (\n                  <LoadingOverlay>\n                    <LoadingSpinner />\n                  </LoadingOverlay>\n                )}\n                <Board size={difficulty} isTarget={true}>\n                  {targetBoard.map((piece, index) => (\n                    <PuzzlePiece\n                      key={index}\n                      image={piece ? image : null}\n                      size={difficulty}\n                      bgPosition={piece ? piece.bgPosition : ''}\n                      isTarget={!piece}\n                      isPlaced={piece !== null}\n                      isWrongAttempt={wrongAttempts.has(index)}\n                      onClick={() => handleTargetPieceClick(index)}\n                    >\n                      {!piece && showHints && (\n                        <Message>\n                          {index + 1}\n                        </Message>\n                      )}\n                    </PuzzlePiece>\n                  ))}\n                </Board>\n              </div>\n            </Card>\n          </LeftColumn>\n\n          <RightColumn>\n            <Card>\n              <CardTitle>\n                <span>🧩</span>\n                პაზლის ნაწილები\n              </CardTitle>\n              <div style={{ position: 'relative' }}>\n                {isLoading && (\n                  <LoadingOverlay>\n                    <LoadingSpinner />\n                  </LoadingOverlay>\n                )}\n                <Board size={difficulty} isTarget={false}>\n                  {pieces.map((piece, index) => piece && (\n                    <PuzzlePiece\n                      key={piece.id}\n                      image={image}\n                      size={difficulty}\n                      bgPosition={piece.bgPosition}\n                      onClick={() => handleSourcePieceClick(index)}\n                      isDragging={draggedPiece === index}\n                    >\n                      {showHints && (\n                        <HintOverlay>\n                          {parseInt(piece.id) + 1}\n                        </HintOverlay>\n                      )}\n                    </PuzzlePiece>\n                  ))}\n                </Board>\n              </div>\n            </Card>\n\n            <ImageCard>\n              <CardTitle>\n                <span>🖼️</span>\n                ორიგინალი სურათი\n                <span style={{ marginLeft: 'auto', fontSize: '0.8em', opacity: 0.7 }}>\n                  (დააჭირე გასადიდებლად)\n                </span>\n              </CardTitle>\n              <ImageContainer \n                size={difficulty} \n                isExpanded={isImageExpanded}\n                onClick={toggleImageExpand}\n              >\n                <OriginalImage \n                  image={image} \n                  size={difficulty}\n                  isExpanded={isImageExpanded}\n                />\n              </ImageContainer>\n              <ButtonsContainer>\n                <Button variant=\"primary\" onClick={toggleHints}>\n                  {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n                </Button>\n                <Button onClick={onBackToMenu}>\n                  🏠 მთავარ მენიუში დაბრუნება\n                </Button>\n              </ButtonsContainer>\n            </ImageCard>\n          </RightColumn>\n        </ContentGrid>\n      </MainContent>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,aAAa;AASnB,MAAMG,WAAW,GAAGP,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GA/BID,WAAW;AAiCjB,MAAME,WAAW,GAAGT,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAPID,WAAW;AASjB,MAAME,UAAU,GAAGX,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAJID,UAAU;AAMhB,MAAME,WAAW,GAAGb,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAJID,WAAW;AAMjB,MAAME,IAAI,GAAGf,MAAM,CAACK,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAdID,IAAI;AAgBV,MAAME,SAAS,GAAGjB,MAAM,CAACkB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIF,SAAS;AAWf,MAAMG,SAAS,GAAGpB,MAAM,CAACe,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GANID,SAAS;AAQf,MAAME,cAAc,GAAGtB,MAAM,CAACK,GAAG;AACjC;AACA,wBAAwBkB,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,GAAG,CAAC,IAAI,CAAC,SAASD,KAAK,IAAIA,KAAK,CAACC,IAAI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,KAAK,IAAIA,KAAK,CAACE,UAAU,IAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AAACC,GAAA,GA5BIJ,cAAc;AA8BpB,MAAMK,aAAa,GAAG3B,MAAM,CAACK,GAAG;AAChC;AACA;AACA,0BAA0BkB,KAAK,IAAIA,KAAK,CAACK,KAAK;AAC9C,qBAAqBL,KAAK,IAAIA,KAAK,CAACE,UAAU,GAAG,SAAS,GAAG,GAAGF,KAAK,CAACC,IAAI,GAAG,GAAG,KAAKD,KAAK,CAACC,IAAI,GAAG,GAAG,GAAG;AACxG;AACA;AACA;AACA,CAAC;AAACK,IAAA,GARIF,aAAa;AAUnB,MAAMG,KAAK,GAAG9B,MAAM,CAACK,GAAG;AACxB;AACA,kCAAkCkB,KAAK,IAAIA,KAAK,CAACC,IAAI;AACrD;AACA,sBAAsBD,KAAK,IAAIA,KAAK,CAACQ,QAAQ,GAAG,0BAA0B,GAAG,aAAa;AAC1F;AACA;AACA,uBAAuBR,KAAK,IAAIA,KAAK,CAACQ,QAAQ,GAAG,yBAAyB,GAAG,aAAa;AAC1F;AACA;AACA;AACA;AACA,wBAAwBR,KAAK,IAAIA,KAAK,CAACQ,QAAQ,GAAG,0BAA0B,GAAG,0BAA0B;AACzG;AACA,CAAC;AAACC,IAAA,GAdIF,KAAK;AAgBX,MAAMG,WAAW,GAAGjC,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6B,IAAA,GArBID,WAAW;AAuBjB,MAAME,gBAAgB,GAAGnC,MAAM,CAACK,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAAC+B,IAAA,GALID,gBAAgB;AAOtB,MAAME,MAAM,GAAGrC,MAAM,CAACsC,MAAM;AAC5B,sBAAsBf,KAAK,IAAIA,KAAK,CAACgB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBhB,KAAK,IAAIA,KAAK,CAACgB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AACpF;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAtBIH,MAAM;AAwBZ,MAAMI,OAAO,GAAGzC,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AAACqC,IAAA,GAJID,OAAO;AAMb,MAAME,WAAW,GAAG3C,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuC,IAAA,GAZID,WAAW;AAcjB,MAAME,YAAY,GAAG7C,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,IAAA,GAVID,YAAY;AAYlB,MAAME,IAAI,GAAG9C,SAAS;AACtB;AACA;AACA,CAAC;AAED,MAAM+C,cAAc,GAAGhD,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,eAAe0C,IAAI;AACnB;AACA,CAAC;AAACE,IAAA,GARID,cAAc;AAUpB,MAAME,cAAc,GAAGlD,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8C,IAAA,GAXID,cAAc;AAapB,MAAME,MAAM,GAAGnD,SAAS;AACxB;AACA;AACA,CAAC;AAED,MAAMoD,OAAO,GAAGpD,SAAS;AACzB;AACA;AACA,CAAC;AAED,MAAMqD,KAAK,GAAGtD,MAAM,CAACK,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAekB,KAAK,IAAIA,KAAK,CAACgC,SAAS,GAAGF,OAAO,GAAGD,MAAM;AAC1D;AACA,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAC;EAAE5B,KAAK;EAAE6B,UAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}