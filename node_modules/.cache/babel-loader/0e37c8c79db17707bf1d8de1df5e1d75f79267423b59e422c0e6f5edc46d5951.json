{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  align-items: flex-start;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst OriginalImage = styled.div`\n  width: 200px;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n`;\n_c2 = OriginalImage;\nconst HintButton = styled.button`\n  background-color: #2196F3;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #1976D2;\n    transform: scale(1.05);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n_c3 = HintButton;\nconst BoardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c4 = BoardsContainer;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? '#f5f5f5' : '#fff'};\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  width: 400px;\n  height: 400px;\n  box-sizing: border-box;\n`;\n_c5 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : '#ddd'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? '#f0f0f0' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  \n  &:hover {\n    transform: ${props => props.isPlaced ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n  }\n`;\n_c6 = PuzzlePiece;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c7 = Message;\nconst Title = styled.h2`\n  color: #2196F3;\n  margin: 0 0 10px 0;\n  font-size: 1.2rem;\n`;\n_c8 = Title;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c9 = HintOverlay;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({\n      length: totalPieces\n    }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${index % difficulty * (100 / (difficulty - 1))}% ${Math.floor(index / difficulty) * (100 / (difficulty - 1))}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n    const initialTargetBoard = Array(totalPieces).fill(null);\n    setPieces(initialPieces);\n    setTargetBoard(initialTargetBoard);\n    setCorrectPositions(new Set());\n    setSelectedPiece(null);\n    setShowHints(false);\n    setWrongAttempts(new Set());\n  }, [difficulty, image]);\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  const handleSourcePieceClick = index => {\n    if (selectedPiece === index) {\n      setSelectedPiece(null);\n    } else {\n      setSelectedPiece(index);\n    }\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (selectedPiece === null || targetBoard[targetIndex] !== null) return;\n    const selectedPieceData = pieces[selectedPiece];\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[selectedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      // დავიმახსოვროთ არასწორი მცდელობა\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OriginalImage, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HintButton, {\n        onClick: toggleHints,\n        children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          size: difficulty,\n          isTarget: false,\n          children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            image: image,\n            size: difficulty,\n            bgPosition: piece.bgPosition,\n            onClick: () => handleSourcePieceClick(index),\n            children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n              children: [\"\\u10D0\\u10D3\\u10D2\\u10D8\\u10DA\\u10D8: \", parseInt(piece.id) + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)\n          }, piece.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"\\u10E1\\u10D0\\u10DB\\u10D8\\u10D6\\u10DC\\u10D4 \\u10E9\\u10D0\\u10E0\\u10E9\\u10DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          size: difficulty,\n          isTarget: true,\n          children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            image: piece ? image : null,\n            size: difficulty,\n            bgPosition: piece ? piece.bgPosition : '',\n            isTarget: !piece,\n            isPlaced: piece !== null,\n            isWrongAttempt: wrongAttempts.has(index),\n            onClick: () => handleTargetPieceClick(index),\n            children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"UWbkV7vx+CI2yI009Xjwd296tNM=\");\n_c10 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"OriginalImage\");\n$RefreshReg$(_c3, \"HintButton\");\n$RefreshReg$(_c4, \"BoardsContainer\");\n$RefreshReg$(_c5, \"Board\");\n$RefreshReg$(_c6, \"PuzzlePiece\");\n$RefreshReg$(_c7, \"Message\");\n$RefreshReg$(_c8, \"Title\");\n$RefreshReg$(_c9, \"HintOverlay\");\n$RefreshReg$(_c10, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","GameContainer","div","_c","OriginalImage","props","image","_c2","HintButton","button","_c3","BoardsContainer","_c4","Board","size","isTarget","_c5","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","_c6","Message","_c7","Title","h2","_c8","HintOverlay","_c9","PuzzleBoard","difficulty","onProgress","onComplete","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","totalPieces","initialPieces","Array","from","length","_","index","id","String","Math","floor","correctIndex","sort","random","initialTargetBoard","fill","progress","round","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","toggleHints","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","piece","has","_c10","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  align-items: flex-start;\n  padding: 20px;\n`;\n\nconst OriginalImage = styled.div`\n  width: 200px;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n`;\n\nconst HintButton = styled.button`\n  background-color: #2196F3;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #1976D2;\n    transform: scale(1.05);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nconst BoardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? '#f5f5f5' : '#fff'};\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  width: 400px;\n  height: 400px;\n  box-sizing: border-box;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : '#ddd'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? '#f0f0f0' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  \n  &:hover {\n    transform: ${props => props.isPlaced ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst Title = styled.h2`\n  color: #2196F3;\n  margin: 0 0 10px 0;\n  font-size: 1.2rem;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const initialPieces = Array.from({ length: totalPieces }, (_, index) => ({\n      id: String(index),\n      bgPosition: `${(index % difficulty) * (100 / (difficulty - 1))}% ${Math.floor(index / difficulty) * (100 / (difficulty - 1))}%`,\n      correctIndex: index\n    })).sort(() => Math.random() - 0.5);\n\n    const initialTargetBoard = Array(totalPieces).fill(null);\n    \n    setPieces(initialPieces);\n    setTargetBoard(initialTargetBoard);\n    setCorrectPositions(new Set());\n    setSelectedPiece(null);\n    setShowHints(false);\n    setWrongAttempts(new Set());\n  }, [difficulty, image]);\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  const handleSourcePieceClick = (index) => {\n    if (selectedPiece === index) {\n      setSelectedPiece(null);\n    } else {\n      setSelectedPiece(index);\n    }\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (selectedPiece === null || targetBoard[targetIndex] !== null) return;\n\n    const selectedPieceData = pieces[selectedPiece];\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[selectedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      // დავიმახსოვროთ არასწორი მცდელობა\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  return (\n    <GameContainer>\n      <div>\n        <Title>ორიგინალი სურათი</Title>\n        <OriginalImage image={image} />\n        <HintButton onClick={toggleHints}>\n          {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n        </HintButton>\n      </div>\n      \n      <BoardsContainer>\n        <div>\n          <Title>პაზლის ნაწილები</Title>\n          <Board size={difficulty} isTarget={false}>\n            {pieces.map((piece, index) => piece && (\n              <PuzzlePiece\n                key={piece.id}\n                image={image}\n                size={difficulty}\n                bgPosition={piece.bgPosition}\n                onClick={() => handleSourcePieceClick(index)}\n              >\n                {showHints && (\n                  <HintOverlay>\n                    ადგილი: {parseInt(piece.id) + 1}\n                  </HintOverlay>\n                )}\n              </PuzzlePiece>\n            ))}\n          </Board>\n        </div>\n\n        <div>\n          <Title>სამიზნე ჩარჩო</Title>\n          <Board size={difficulty} isTarget={true}>\n            {targetBoard.map((piece, index) => (\n              <PuzzlePiece\n                key={index}\n                image={piece ? image : null}\n                size={difficulty}\n                bgPosition={piece ? piece.bgPosition : ''}\n                isTarget={!piece}\n                isPlaced={piece !== null}\n                isWrongAttempt={wrongAttempts.has(index)}\n                onClick={() => handleTargetPieceClick(index)}\n              >\n                {!piece && showHints && (\n                  <Message>\n                    {index + 1}\n                  </Message>\n                )}\n              </PuzzlePiece>\n            ))}\n          </Board>\n        </div>\n      </BoardsContainer>\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}