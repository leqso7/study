{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  colorMatchingScores: [],\n  lastPlayed: null\n};\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : initialGameProgress;\n  });\n  useEffect(() => {\n    try {\n      if (gameProgress) {\n        localStorage.setItem('gameProgress', JSON.stringify(gameProgress));\n        console.log('Progress saved:', gameProgress);\n      }\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    }\n  }, [gameProgress]);\n  const updateGameProgress = (gameType, timestamp, data) => {\n    setGameProgress(prevProgress => {\n      const newProgress = {\n        ...prevProgress\n      };\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles) newProgress.puzzles = [];\n          if (data !== null && data !== void 0 && data.puzzleId && !newProgress.puzzles.includes(data.puzzleId)) {\n            newProgress.puzzles = [...newProgress.puzzles, data.puzzleId];\n          }\n          break;\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks) newProgress.completedScrambleTasks = [];\n          if (!newProgress.scrambleScores) newProgress.scrambleScores = {};\n          if (data !== null && data !== void 0 && data.taskId && !newProgress.completedScrambleTasks.includes(data.taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, data.taskId];\n            if (data.score !== undefined) {\n              newProgress.scrambleScores[data.taskId] = data.score;\n            }\n          }\n          break;\n        case 'task':\n          if (!newProgress.completedTasks) newProgress.completedTasks = [];\n          if (!newProgress.taskScores) newProgress.taskScores = {};\n          if (data !== null && data !== void 0 && data.taskId && !newProgress.completedTasks.includes(data.taskId)) {\n            // Add to completed tasks\n            newProgress.completedTasks = [...newProgress.completedTasks, data.taskId];\n\n            // Update score\n            if (data.score !== undefined) {\n              newProgress.taskScores[data.taskId] = data.score;\n            }\n            console.log('Updated task progress:', {\n              completedTasks: newProgress.completedTasks.length,\n              taskId: data.taskId,\n              score: data.score\n            });\n          }\n          break;\n        case 'colorMatching':\n          if (!newProgress.colorMatchingScores) newProgress.colorMatchingScores = [];\n          newProgress.colorMatchingScores = [...newProgress.colorMatchingScores, {\n            timestamp,\n            score: data.score\n          }];\n          break;\n      }\n      newProgress.lastPlayed = timestamp;\n\n      // Save immediately to localStorage\n      try {\n        localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n        console.log('Saved progress to localStorage:', newProgress);\n      } catch (error) {\n        console.error('Failed to save progress:', error);\n      }\n      return newProgress;\n    });\n  };\n  const resetProgress = () => {\n    localStorage.setItem('gameProgress', JSON.stringify(initialGameProgress));\n    setGameProgress(initialGameProgress);\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      gameProgress,\n      updateGameProgress,\n      resetProgress\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"Pz6RfhI/LErcu8fIWsCkOXj+TCA=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","PlayerContext","initialGameProgress","puzzles","completedScrambleTasks","taskScores","completedTasks","scrambleScores","colorMatchingScores","lastPlayed","PlayerProvider","children","_s","gameProgress","setGameProgress","savedProgress","localStorage","getItem","JSON","parse","setItem","stringify","console","log","error","updateGameProgress","gameType","timestamp","data","prevProgress","newProgress","puzzleId","includes","taskId","score","undefined","length","resetProgress","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst PlayerContext = createContext();\n\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  colorMatchingScores: [],\n  lastPlayed: null\n};\n\nexport const PlayerProvider = ({ children }) => {\n  const [gameProgress, setGameProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('gameProgress');\n    return savedProgress ? JSON.parse(savedProgress) : initialGameProgress;\n  });\n\n  useEffect(() => {\n    try {\n      if (gameProgress) {\n        localStorage.setItem('gameProgress', JSON.stringify(gameProgress));\n        console.log('Progress saved:', gameProgress);\n      }\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    }\n  }, [gameProgress]);\n\n  const updateGameProgress = (gameType, timestamp, data) => {\n    setGameProgress(prevProgress => {\n      const newProgress = { ...prevProgress };\n\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles) newProgress.puzzles = [];\n          if (data?.puzzleId && !newProgress.puzzles.includes(data.puzzleId)) {\n            newProgress.puzzles = [...newProgress.puzzles, data.puzzleId];\n          }\n          break;\n\n        case 'scramble':\n          if (!newProgress.completedScrambleTasks) newProgress.completedScrambleTasks = [];\n          if (!newProgress.scrambleScores) newProgress.scrambleScores = {};\n          \n          if (data?.taskId && !newProgress.completedScrambleTasks.includes(data.taskId)) {\n            newProgress.completedScrambleTasks = [...newProgress.completedScrambleTasks, data.taskId];\n            if (data.score !== undefined) {\n              newProgress.scrambleScores[data.taskId] = data.score;\n            }\n          }\n          break;\n\n        case 'task':\n          if (!newProgress.completedTasks) newProgress.completedTasks = [];\n          if (!newProgress.taskScores) newProgress.taskScores = {};\n          \n          if (data?.taskId && !newProgress.completedTasks.includes(data.taskId)) {\n            // Add to completed tasks\n            newProgress.completedTasks = [...newProgress.completedTasks, data.taskId];\n            \n            // Update score\n            if (data.score !== undefined) {\n              newProgress.taskScores[data.taskId] = data.score;\n            }\n            \n            console.log('Updated task progress:', {\n              completedTasks: newProgress.completedTasks.length,\n              taskId: data.taskId,\n              score: data.score\n            });\n          }\n          break;\n\n        case 'colorMatching':\n          if (!newProgress.colorMatchingScores) newProgress.colorMatchingScores = [];\n          newProgress.colorMatchingScores = [\n            ...newProgress.colorMatchingScores,\n            { timestamp, score: data.score }\n          ];\n          break;\n      }\n\n      newProgress.lastPlayed = timestamp;\n\n      // Save immediately to localStorage\n      try {\n        localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n        console.log('Saved progress to localStorage:', newProgress);\n      } catch (error) {\n        console.error('Failed to save progress:', error);\n      }\n\n      return newProgress;\n    });\n  };\n\n  const resetProgress = () => {\n    localStorage.setItem('gameProgress', JSON.stringify(initialGameProgress));\n    setGameProgress(initialGameProgress);\n  };\n\n  return (\n    <PlayerContext.Provider value={{ gameProgress, updateGameProgress, resetProgress }}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAErC,MAAMO,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,EAAE;EACXC,sBAAsB,EAAE,EAAE;EAC1BC,UAAU,EAAE,CAAC,CAAC;EACdC,cAAc,EAAE,EAAE;EAClBC,cAAc,EAAE,CAAC,CAAC;EAClBC,mBAAmB,EAAE,EAAE;EACvBC,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACrD,MAAMkB,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC1D,OAAOF,aAAa,GAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,GAAGb,mBAAmB;EACxE,CAAC,CAAC;EAEFJ,SAAS,CAAC,MAAM;IACd,IAAI;MACF,IAAIe,YAAY,EAAE;QAChBG,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACR,YAAY,CAAC,CAAC;QAClES,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEV,YAAY,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElB,MAAMY,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,KAAK;IACxDd,eAAe,CAACe,YAAY,IAAI;MAC9B,MAAMC,WAAW,GAAG;QAAE,GAAGD;MAAa,CAAC;MAEvC,QAAQH,QAAQ;QACd,KAAK,QAAQ;UACX,IAAI,CAACI,WAAW,CAAC3B,OAAO,EAAE2B,WAAW,CAAC3B,OAAO,GAAG,EAAE;UAClD,IAAIyB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,QAAQ,IAAI,CAACD,WAAW,CAAC3B,OAAO,CAAC6B,QAAQ,CAACJ,IAAI,CAACG,QAAQ,CAAC,EAAE;YAClED,WAAW,CAAC3B,OAAO,GAAG,CAAC,GAAG2B,WAAW,CAAC3B,OAAO,EAAEyB,IAAI,CAACG,QAAQ,CAAC;UAC/D;UACA;QAEF,KAAK,UAAU;UACb,IAAI,CAACD,WAAW,CAAC1B,sBAAsB,EAAE0B,WAAW,CAAC1B,sBAAsB,GAAG,EAAE;UAChF,IAAI,CAAC0B,WAAW,CAACvB,cAAc,EAAEuB,WAAW,CAACvB,cAAc,GAAG,CAAC,CAAC;UAEhE,IAAIqB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEK,MAAM,IAAI,CAACH,WAAW,CAAC1B,sBAAsB,CAAC4B,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,EAAE;YAC7EH,WAAW,CAAC1B,sBAAsB,GAAG,CAAC,GAAG0B,WAAW,CAAC1B,sBAAsB,EAAEwB,IAAI,CAACK,MAAM,CAAC;YACzF,IAAIL,IAAI,CAACM,KAAK,KAAKC,SAAS,EAAE;cAC5BL,WAAW,CAACvB,cAAc,CAACqB,IAAI,CAACK,MAAM,CAAC,GAAGL,IAAI,CAACM,KAAK;YACtD;UACF;UACA;QAEF,KAAK,MAAM;UACT,IAAI,CAACJ,WAAW,CAACxB,cAAc,EAAEwB,WAAW,CAACxB,cAAc,GAAG,EAAE;UAChE,IAAI,CAACwB,WAAW,CAACzB,UAAU,EAAEyB,WAAW,CAACzB,UAAU,GAAG,CAAC,CAAC;UAExD,IAAIuB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEK,MAAM,IAAI,CAACH,WAAW,CAACxB,cAAc,CAAC0B,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,EAAE;YACrE;YACAH,WAAW,CAACxB,cAAc,GAAG,CAAC,GAAGwB,WAAW,CAACxB,cAAc,EAAEsB,IAAI,CAACK,MAAM,CAAC;;YAEzE;YACA,IAAIL,IAAI,CAACM,KAAK,KAAKC,SAAS,EAAE;cAC5BL,WAAW,CAACzB,UAAU,CAACuB,IAAI,CAACK,MAAM,CAAC,GAAGL,IAAI,CAACM,KAAK;YAClD;YAEAZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;cACpCjB,cAAc,EAAEwB,WAAW,CAACxB,cAAc,CAAC8B,MAAM;cACjDH,MAAM,EAAEL,IAAI,CAACK,MAAM;cACnBC,KAAK,EAAEN,IAAI,CAACM;YACd,CAAC,CAAC;UACJ;UACA;QAEF,KAAK,eAAe;UAClB,IAAI,CAACJ,WAAW,CAACtB,mBAAmB,EAAEsB,WAAW,CAACtB,mBAAmB,GAAG,EAAE;UAC1EsB,WAAW,CAACtB,mBAAmB,GAAG,CAChC,GAAGsB,WAAW,CAACtB,mBAAmB,EAClC;YAAEmB,SAAS;YAAEO,KAAK,EAAEN,IAAI,CAACM;UAAM,CAAC,CACjC;UACD;MACJ;MAEAJ,WAAW,CAACrB,UAAU,GAAGkB,SAAS;;MAElC;MACA,IAAI;QACFX,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACS,WAAW,CAAC,CAAC;QACjER,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEO,WAAW,CAAC;MAC7D,CAAC,CAAC,OAAON,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;MAEA,OAAOM,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1BrB,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACnB,mBAAmB,CAAC,CAAC;IACzEY,eAAe,CAACZ,mBAAmB,CAAC;EACtC,CAAC;EAED,oBACEF,OAAA,CAACC,aAAa,CAACqC,QAAQ;IAACC,KAAK,EAAE;MAAE1B,YAAY;MAAEY,kBAAkB;MAAEY;IAAc,CAAE;IAAA1B,QAAA,EAChFA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAC/B,EAAA,CA/FWF,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAiG3B,OAAO,MAAMmC,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGnD,UAAU,CAACK,aAAa,CAAC;EACzC,IAAI,CAAC8C,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}