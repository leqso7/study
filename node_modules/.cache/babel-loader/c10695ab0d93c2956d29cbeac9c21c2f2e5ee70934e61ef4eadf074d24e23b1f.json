{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = GameContainer;\nconst SetupContainer = styled.div`\n  margin: 40px auto;\n  max-width: 400px;\n`;\n_c2 = SetupContainer;\nconst NumberSelect = styled.select`\n  padding: 12px 20px;\n  margin: 20px;\n  font-size: 16px;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  background-color: white;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: #4CAF50;\n  }\n\n  &:focus {\n    border-color: #4CAF50;\n    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n  }\n`;\n_c3 = NumberSelect;\nconst StartButton = styled.button`\n  padding: 15px 30px;\n  margin: 20px;\n  font-size: 18px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background-color: #45a049;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c4 = StartButton;\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 30px;\n  margin: 40px auto;\n  max-width: 1000px;\n  justify-items: center;\n  align-items: center;\n`;\n_c5 = ImagesGrid;\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 12px;\n  padding: 15px;\n  cursor: ${props => props.isPlayable ? 'pointer' : 'not-allowed'};\n  transition: all 0.3s ease;\n  position: relative;\n  width: 250px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n    box-shadow: ${props => props.isPlayable ? '0 8px 16px rgba(0, 0, 0, 0.2)' : '0 4px 8px rgba(0, 0, 0, 0.1)'};\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n  }\n\n  .order-number {\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 35px;\n    height: 35px;\n    background-color: #4CAF50;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 18px;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c6 = ImageCard;\nconst Timer = styled.div`\n  font-size: 32px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n`;\n_c7 = Timer;\nconst Message = styled.div`\n  font-size: 28px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n`;\n_c8 = Message;\nconst MemoryGame = () => {\n  _s();\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [gameState, setGameState] = useState('setup'); // setup, showing, memorizing, playing\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const {\n    updateGameProgress\n  } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = ['ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp', 'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp', 'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp', 'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp', 'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp', 'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp', 'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp', 'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'];\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // Fisher-Yates shuffle ალგორითმი\n  const shuffleArray = useCallback(array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // ვიყენებთ crypto.getRandomValues უფრო ძლიერი შემთხვევითობისთვის\n      const j = Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1) * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n    // ვამოწმებთ რომ ახალი მასივი არ იყოს იგივე რაც ორიგინალი ან უკუღმა დალაგებული\n    const isReverse = shuffled.every((item, index) => item === array[array.length - 1 - index]);\n    const isSame = shuffled.every((item, index) => item === array[index]);\n    if (isReverse || isSame) {\n      // თუ უკუღმა ან იგივე თანმიმდევრობაა, კიდევ ერთხელ ვურევთ\n      return shuffleArray(array);\n    }\n    return shuffled;\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = shuffleArray(allImages);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n  }, [numberOfImages, loadImages, shuffleArray]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n  }, [selectRandomImages]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => {\n      const shuffled = shuffleArray(prev);\n      console.log('Original order:', prev.map(img => img.name));\n      console.log('Shuffled order:', shuffled.map(img => img.name));\n      return shuffled;\n    });\n    setGameState('playing');\n  }, [shuffleArray]);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image, index) => {\n    if (gameState !== 'playing') return;\n    setUserSequence(prev => {\n      const newSequence = [...prev, {\n        image,\n        index\n      }];\n\n      // თუ სწორი თანმიმდევრობაა\n      if (newSequence.length === selectedImages.length) {\n        const isCorrect = selectedImages.every((img, idx) => newSequence[idx].image.name === img.name);\n        if (isCorrect) {\n          updateGameProgress('memory', Date.now(), {\n            score: 100\n          });\n          setTimeout(() => {\n            alert('გილოცავ! სწორად გაიხსენე თანმიმდევრობა! 🎉');\n            setGameState('setup');\n            setUserSequence([]);\n          }, 500);\n        } else {\n          setTimeout(() => {\n            alert('სამწუხაროდ თანმიმდევრობა არასწორია. სცადე თავიდან! 🤔');\n            setUserSequence([]);\n          }, 500);\n        }\n      }\n      return newSequence;\n    });\n  }, [gameState, selectedImages, updateGameProgress]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    if ((gameState === 'showing' || gameState === 'memorizing') && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => {\n          console.log('Timer tick:', prev - 1);\n          return prev - 1;\n        });\n      }, 1000);\n      console.log('Starting timer:', timer, 'State:', gameState);\n    } else if (timer === 0) {\n      if (gameState === 'showing') {\n        console.log('Switching to memorizing');\n        setGameState('memorizing');\n        setTimer(2);\n      } else if (gameState === 'memorizing') {\n        console.log('Switching to playing');\n        shuffleImages();\n      }\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [timer, gameState, shuffleImages]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u10DB\\u10D4\\u10EE\\u10E1\\u10D8\\u10D4\\u10E0\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DB\\u10D0\\u10E8\\u10D8 \\uD83E\\uDDE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), gameState === 'setup' && /*#__PURE__*/_jsxDEV(SetupContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u10D0\\u10D8\\u10E0\\u10E9\\u10D8\\u10D4 \\u10E0\\u10D0\\u10DB\\u10D3\\u10D4\\u10DC\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8 \\u10D2\\u10D8\\u10DC\\u10D3\\u10D0 \\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberSelect, {\n        value: numberOfImages,\n        onChange: e => setNumberOfImages(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"3 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 4,\n          children: \"4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"5 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: startGame,\n        children: \"\\u10D3\\u10D0\\u10EC\\u10E7\\u10D4\\u10D1\\u10D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), gameState === 'showing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        children: [timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: \"\\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n        children: selectedImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'memorizing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        children: [timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"\\u10D3\\u10D0\\u10EE\\u10E3\\u10ED\\u10D4 \\u10D7\\u10D5\\u10D0\\u10DA\\u10D4\\u10D1\\u10D8! \", timer, \" \\u10EC\\u10D0\\u10DB\\u10D8 \\u10D3\\u10D0\\u10E0\\u10E9\\u10D0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        children: \"\\u10D0\\u10E6\\u10D0\\u10D3\\u10D2\\u10D8\\u10DC\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n        children: shuffledImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          isSelected: userSequence.some(seq => seq.index === index),\n          isPlayable: !userSequence.some(seq => seq.index === index),\n          onClick: () => !userSequence.some(seq => seq.index === index) && handleImageClick(image, index),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), userSequence.findIndex(seq => seq.index === index) > -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-number\",\n            children: userSequence.findIndex(seq => seq.index === index) + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: userSequence.length < selectedImages.length ? `აირჩიე ${userSequence.length + 1}-ე სურათი` : 'ყველა სურათი არჩეულია'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"Lgp45L+1JqtXxCMhxhHisV1Mf+U=\", false, function () {\n  return [usePlayer, useNavigate];\n});\n_c9 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"SetupContainer\");\n$RefreshReg$(_c3, \"NumberSelect\");\n$RefreshReg$(_c4, \"StartButton\");\n$RefreshReg$(_c5, \"ImagesGrid\");\n$RefreshReg$(_c6, \"ImageCard\");\n$RefreshReg$(_c7, \"Timer\");\n$RefreshReg$(_c8, \"Message\");\n$RefreshReg$(_c9, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","useNavigate","usePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","GameContainer","div","_c","SetupContainer","_c2","NumberSelect","select","_c3","StartButton","button","_c4","ImagesGrid","_c5","ImageCard","props","isSelected","isPlayable","_c6","Timer","_c7","Message","_c8","MemoryGame","_s","numberOfImages","setNumberOfImages","selectedImages","setSelectedImages","shuffledImages","setShuffledImages","gameState","setGameState","timer","setTimer","userSequence","setUserSequence","updateGameProgress","navigate","loadImages","images","map","filename","name","replace","url","process","env","PUBLIC_URL","error","console","shuffleArray","array","shuffled","i","length","j","Math","floor","crypto","getRandomValues","Uint32Array","isReverse","every","item","index","isSame","selectRandomImages","allImages","log","selected","slice","startGame","shuffleImages","prev","img","handleImageClick","image","newSequence","isCorrect","idx","Date","now","score","setTimeout","alert","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","onClick","src","alt","some","seq","findIndex","className","_c9","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\n\nconst GameContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst SetupContainer = styled.div`\n  margin: 40px auto;\n  max-width: 400px;\n`;\n\nconst NumberSelect = styled.select`\n  padding: 12px 20px;\n  margin: 20px;\n  font-size: 16px;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  background-color: white;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: #4CAF50;\n  }\n\n  &:focus {\n    border-color: #4CAF50;\n    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n  }\n`;\n\nconst StartButton = styled.button`\n  padding: 15px 30px;\n  margin: 20px;\n  font-size: 18px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background-color: #45a049;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 30px;\n  margin: 40px auto;\n  max-width: 1000px;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 12px;\n  padding: 15px;\n  cursor: ${props => props.isPlayable ? 'pointer' : 'not-allowed'};\n  transition: all 0.3s ease;\n  position: relative;\n  width: 250px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n    box-shadow: ${props => props.isPlayable ? '0 8px 16px rgba(0, 0, 0, 0.2)' : '0 4px 8px rgba(0, 0, 0, 0.1)'};\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n  }\n\n  .order-number {\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 35px;\n    height: 35px;\n    background-color: #4CAF50;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 18px;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Timer = styled.div`\n  font-size: 32px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n`;\n\nconst Message = styled.div`\n  font-size: 28px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n`;\n\nconst MemoryGame = () => {\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [gameState, setGameState] = useState('setup'); // setup, showing, memorizing, playing\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const { updateGameProgress } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = [\n        'ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp',\n        'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp',\n        'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp',\n        'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp',\n        'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp',\n        'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp',\n        'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp',\n        'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'\n      ];\n\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // Fisher-Yates shuffle ალგორითმი\n  const shuffleArray = useCallback((array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // ვიყენებთ crypto.getRandomValues უფრო ძლიერი შემთხვევითობისთვის\n      const j = Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1) * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    \n    // ვამოწმებთ რომ ახალი მასივი არ იყოს იგივე რაც ორიგინალი ან უკუღმა დალაგებული\n    const isReverse = shuffled.every((item, index) => item === array[array.length - 1 - index]);\n    const isSame = shuffled.every((item, index) => item === array[index]);\n    \n    if (isReverse || isSame) {\n      // თუ უკუღმა ან იგივე თანმიმდევრობაა, კიდევ ერთხელ ვურევთ\n      return shuffleArray(array);\n    }\n    \n    return shuffled;\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = shuffleArray(allImages);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n  }, [numberOfImages, loadImages, shuffleArray]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n  }, [selectRandomImages]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => {\n      const shuffled = shuffleArray(prev);\n      console.log('Original order:', prev.map(img => img.name));\n      console.log('Shuffled order:', shuffled.map(img => img.name));\n      return shuffled;\n    });\n    setGameState('playing');\n  }, [shuffleArray]);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image, index) => {\n    if (gameState !== 'playing') return;\n\n    setUserSequence(prev => {\n      const newSequence = [...prev, { image, index }];\n      \n      // თუ სწორი თანმიმდევრობაა\n      if (newSequence.length === selectedImages.length) {\n        const isCorrect = selectedImages.every((img, idx) => \n          newSequence[idx].image.name === img.name\n        );\n        \n        if (isCorrect) {\n          updateGameProgress('memory', Date.now(), { score: 100 });\n          setTimeout(() => {\n            alert('გილოცავ! სწორად გაიხსენე თანმიმდევრობა! 🎉');\n            setGameState('setup');\n            setUserSequence([]);\n          }, 500);\n        } else {\n          setTimeout(() => {\n            alert('სამწუხაროდ თანმიმდევრობა არასწორია. სცადე თავიდან! 🤔');\n            setUserSequence([]);\n          }, 500);\n        }\n      }\n      \n      return newSequence;\n    });\n  }, [gameState, selectedImages, updateGameProgress]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    \n    if ((gameState === 'showing' || gameState === 'memorizing') && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => {\n          console.log('Timer tick:', prev - 1);\n          return prev - 1;\n        });\n      }, 1000);\n\n      console.log('Starting timer:', timer, 'State:', gameState);\n    } else if (timer === 0) {\n      if (gameState === 'showing') {\n        console.log('Switching to memorizing');\n        setGameState('memorizing');\n        setTimer(2);\n      } else if (gameState === 'memorizing') {\n        console.log('Switching to playing');\n        shuffleImages();\n      }\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [timer, gameState, shuffleImages]);\n\n  return (\n    <GameContainer>\n      <h1>მეხსიერების თამაში 🧠</h1>\n\n      {gameState === 'setup' && (\n        <SetupContainer>\n          <h2>აირჩიე რამდენი სურათი გინდა დაიმახსოვრო:</h2>\n          <NumberSelect \n            value={numberOfImages} \n            onChange={(e) => setNumberOfImages(Number(e.target.value))}\n          >\n            <option value={3}>3 სურათი</option>\n            <option value={4}>4 სურათი</option>\n            <option value={5}>5 სურათი</option>\n          </NumberSelect>\n          <StartButton onClick={startGame}>დაწყება</StartButton>\n        </SetupContainer>\n      )}\n\n      {gameState === 'showing' && (\n        <>\n          <Timer>{timer} წამი</Timer>\n          <Message>დაიმახსოვრე სურათების თანმიმდევრობა!</Message>\n          <ImagesGrid>\n            {selectedImages.map((image, index) => (\n              <ImageCard key={index}>\n                <img src={image.url} alt={image.name} />\n                <p>{image.name}</p>\n              </ImageCard>\n            ))}\n          </ImagesGrid>\n        </>\n      )}\n\n      {gameState === 'memorizing' && (\n        <>\n          <Timer>{timer} წამი</Timer>\n          <Message>დახუჭე თვალები! {timer} წამი დარჩა</Message>\n        </>\n      )}\n\n      {gameState === 'playing' && (\n        <>\n          <Message>აღადგინე სურათების თანმიმდევრობა!</Message>\n          <ImagesGrid>\n            {shuffledImages.map((image, index) => (\n              <ImageCard \n                key={index}\n                isSelected={userSequence.some(seq => seq.index === index)}\n                isPlayable={!userSequence.some(seq => seq.index === index)}\n                onClick={() => !userSequence.some(seq => seq.index === index) && handleImageClick(image, index)}\n              >\n                <img src={image.url} alt={image.name} />\n                <p>{image.name}</p>\n                {userSequence.findIndex(seq => seq.index === index) > -1 && (\n                  <div className=\"order-number\">\n                    {userSequence.findIndex(seq => seq.index === index) + 1}\n                  </div>\n                )}\n              </ImageCard>\n            ))}\n          </ImagesGrid>\n          <Message>\n            {userSequence.length < selectedImages.length \n              ? `აირჩიე ${userSequence.length + 1}-ე სურათი`\n              : 'ყველა სურათი არჩეულია'}\n          </Message>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default MemoryGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}