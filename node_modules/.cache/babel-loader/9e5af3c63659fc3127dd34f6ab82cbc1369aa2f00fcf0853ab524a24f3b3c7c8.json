{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n_c = GameContainer;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n_c2 = Card;\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n_c3 = CardTitle;\nconst ImageContainer = styled.div`\n  position: relative;\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n`;\n_c4 = ImageContainer;\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n`;\n_c5 = OriginalImage;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n_c6 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c7 = PuzzlePiece;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c8 = ButtonsContainer;\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c9 = Button;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c10 = Message;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c11 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c12 = DraggedPiece;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const initialPieces = [];\n    if (!difficulty || difficulty <= 0) {\n      console.error('Invalid difficulty value:', difficulty);\n      return;\n    }\n    try {\n      for (let i = 0; i < difficulty; i++) {\n        for (let j = 0; j < difficulty; j++) {\n          initialPieces.push({\n            id: i * difficulty + j,\n            bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n            correctIndex: i * difficulty + j\n          });\n        }\n      }\n      if (initialPieces.length === totalPieces) {\n        const shuffledPieces = [...initialPieces].sort(() => Math.random() - 0.5).map((piece, index) => ({\n          ...piece,\n          currentPos: index\n        }));\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } else {\n        console.error('Mismatch in pieces array length');\n      }\n    } catch (error) {\n      console.error('Error initializing puzzle pieces:', error);\n    }\n  }, [image, difficulty]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  const handleSourcePieceClick = index => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        order: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), \"\\u10D0\\u10E5 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4 \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        size: difficulty,\n        isTarget: true,\n        children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n          image: piece ? image : null,\n          size: difficulty,\n          bgPosition: piece ? piece.bgPosition : '',\n          isTarget: !piece,\n          isPlaced: piece !== null,\n          isWrongAttempt: wrongAttempts.has(index),\n          onClick: () => handleTargetPieceClick(index),\n          children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          order: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDDBC\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n          children: /*#__PURE__*/_jsxDEV(OriginalImage, {\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: toggleHints,\n            children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onBackToMenu,\n            children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          order: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDDE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          size: difficulty,\n          isTarget: false,\n          children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            image: image,\n            size: difficulty,\n            bgPosition: piece.bgPosition,\n            onClick: () => handleSourcePieceClick(index),\n            isDragging: draggedPiece === index,\n            children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n              children: parseInt(piece.id) + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)\n          }, piece.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"IQ6LSnlZ4ELI1wQRsLqlOVYAVaA=\");\n_c13 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"CardTitle\");\n$RefreshReg$(_c4, \"ImageContainer\");\n$RefreshReg$(_c5, \"OriginalImage\");\n$RefreshReg$(_c6, \"Board\");\n$RefreshReg$(_c7, \"PuzzlePiece\");\n$RefreshReg$(_c8, \"ButtonsContainer\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"Message\");\n$RefreshReg$(_c11, \"HintOverlay\");\n$RefreshReg$(_c12, \"DraggedPiece\");\n$RefreshReg$(_c13, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","GameContainer","div","_c","TopSection","BottomSection","Card","_c2","CardTitle","h3","_c3","ImageContainer","_c4","OriginalImage","props","image","_c5","Board","size","isTarget","_c6","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","isDragging","_c7","ButtonsContainer","_c8","Button","button","variant","_c9","Message","_c10","HintOverlay","_c11","DraggedPiece","_c12","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","totalPieces","pieceSize","initialPieces","console","error","i","j","push","id","correctIndex","length","shuffledPieces","sort","Math","random","map","piece","index","currentPos","initialTargetBoard","Array","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","toggleHints","progress","round","children","style","order","fileName","_jsxFileName","lineNumber","columnNumber","has","onClick","display","gridTemplateColumns","gap","left","top","backgroundImage","backgroundSize","backgroundPosition","_c13","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n`;\n\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const initialPieces = [];\n\n    if (!difficulty || difficulty <= 0) {\n      console.error('Invalid difficulty value:', difficulty);\n      return;\n    }\n\n    try {\n      for (let i = 0; i < difficulty; i++) {\n        for (let j = 0; j < difficulty; j++) {\n          initialPieces.push({\n            id: i * difficulty + j,\n            bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n            correctIndex: i * difficulty + j\n          });\n        }\n      }\n\n      if (initialPieces.length === totalPieces) {\n        const shuffledPieces = [...initialPieces]\n          .sort(() => Math.random() - 0.5)\n          .map((piece, index) => ({\n            ...piece,\n            currentPos: index\n          }));\n\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        \n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } else {\n        console.error('Mismatch in pieces array length');\n      }\n    } catch (error) {\n      console.error('Error initializing puzzle pieces:', error);\n    }\n  }, [image, difficulty]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  const handleSourcePieceClick = (index) => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  return (\n    <GameContainer>\n      <Card style={{ order: 1 }}>\n        <CardTitle>\n          <span>🎮</span>\n          აქ ააწყვე პაზლი\n        </CardTitle>\n        <Board size={difficulty} isTarget={true}>\n          {targetBoard.map((piece, index) => (\n            <PuzzlePiece\n              key={index}\n              image={piece ? image : null}\n              size={difficulty}\n              bgPosition={piece ? piece.bgPosition : ''}\n              isTarget={!piece}\n              isPlaced={piece !== null}\n              isWrongAttempt={wrongAttempts.has(index)}\n              onClick={() => handleTargetPieceClick(index)}\n            >\n              {!piece && showHints && (\n                <Message>\n                  {index + 1}\n                </Message>\n              )}\n            </PuzzlePiece>\n          ))}\n        </Board>\n      </Card>\n\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem' }}>\n        <Card style={{ order: 2 }}>\n          <CardTitle>\n            <span>🖼️</span>\n            ორიგინალი სურათი\n          </CardTitle>\n          <ImageContainer>\n            <OriginalImage image={image} />\n          </ImageContainer>\n          <ButtonsContainer>\n            <Button variant=\"primary\" onClick={toggleHints}>\n              {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n            </Button>\n            <Button onClick={onBackToMenu}>\n              🏠 მთავარ მენიუში დაბრუნება\n            </Button>\n          </ButtonsContainer>\n        </Card>\n\n        <Card style={{ order: 3 }}>\n          <CardTitle>\n            <span>🧩</span>\n            პაზლის ნაწილები\n          </CardTitle>\n          <Board size={difficulty} isTarget={false}>\n            {pieces.map((piece, index) => piece && (\n              <PuzzlePiece\n                key={piece.id}\n                image={image}\n                size={difficulty}\n                bgPosition={piece.bgPosition}\n                onClick={() => handleSourcePieceClick(index)}\n                isDragging={draggedPiece === index}\n              >\n                {showHints && (\n                  <HintOverlay>\n                    {parseInt(piece.id) + 1}\n                  </HintOverlay>\n                )}\n              </PuzzlePiece>\n            ))}\n          </Board>\n        </Card>\n      </div>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}