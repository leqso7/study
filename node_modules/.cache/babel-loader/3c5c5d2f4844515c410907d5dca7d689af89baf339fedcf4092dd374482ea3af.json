{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n_c = GameContainer;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n_c2 = TopSection;\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  height: 100%;\n`;\n_c3 = RightSection;\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n_c4 = Card;\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n_c5 = CardTitle;\nconst ImageCard = styled(Card)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = ImageCard;\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  ${props => props.isExpanded && `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    border: none;\n    border-radius: 0;\n  `}\n`;\n_c7 = ImageContainer;\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.isExpanded ? 'contain' : `${props.size * 100}% ${props.size * 100}%`};\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: all 0.3s ease;\n`;\n_c8 = OriginalImage;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n_c9 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c10 = PuzzlePiece;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c11 = ButtonsContainer;\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c12 = Button;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c13 = Message;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c14 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c15 = DraggedPiece;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #2196F3;\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n  margin: 0 auto;\n`;\n_c16 = LoadingSpinner;\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n_c17 = LoadingOverlay;\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\n_c18 = Toast;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu,\n  onImageChange,\n  onError\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [errorCount, setErrorCount] = useState(0);\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageExpanded, setIsImageExpanded] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [isToastClosing, setIsToastClosing] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n    return pieces;\n  }, [difficulty]);\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      try {\n        const totalPieces = difficulty * difficulty;\n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n        const shuffledPieces = [...initialPieces].sort(() => Math.random() - 0.5).map((piece, index) => ({\n          ...piece,\n          currentPos: index\n        }));\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  const handlePaste = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      var _e$clipboardData;\n      const items = (_e$clipboardData = e.clipboardData) === null || _e$clipboardData === void 0 ? void 0 : _e$clipboardData.items;\n      if (!items) return;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const file = items[i].getAsFile();\n          const reader = new FileReader();\n          reader.onload = event => {\n            onImageChange(event.target.result);\n            setIsLoading(false);\n          };\n          reader.readAsDataURL(file);\n          return;\n        }\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error handling paste:', error);\n      setIsLoading(false);\n    }\n  };\n  const handleSourcePieceClick = index => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n      setErrorCount(prev => prev + 1);\n      onError();\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async clipboardItems => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = e => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch(err => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n  const toggleImageExpand = () => {\n    setIsImageExpanded(!isImageExpanded);\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      setShowToast(true);\n      onComplete(errorCount); // გადავცეთ შეცდომების რაოდენობა\n\n      setTimeout(() => {\n        setIsToastClosing(true);\n        setTimeout(() => {\n          setShowToast(false);\n          setIsToastClosing(false);\n        }, 500);\n      }, 3000);\n    }\n  }, [correctPositions, difficulty, onComplete, errorCount]);\n  useEffect(() => {\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [showToast && /*#__PURE__*/_jsxDEV(Toast, {\n      isClosing: isToastClosing,\n      children: \"\\uD83C\\uDF89 \\u10D2\\u10D8\\u10DA\\u10DD\\u10EA\\u10D0\\u10D5\\u10D7! \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8 \\u10EC\\u10D0\\u10E0\\u10DB\\u10D0\\u10E2\\u10D4\\u10D1\\u10D8\\u10D7 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4\\u10D7!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TopSection, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFAE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), \"\\u10D0\\u10E5 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4 \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n            children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            size: difficulty,\n            isTarget: true,\n            children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n              image: piece ? image : null,\n              size: difficulty,\n              bgPosition: piece ? piece.bgPosition : '',\n              isTarget: !piece,\n              isPlaced: piece !== null,\n              isWrongAttempt: wrongAttempts.has(index),\n              onClick: () => handleTargetPieceClick(index),\n              children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightSection, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83E\\uDDE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n              children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Board, {\n              size: difficulty,\n              isTarget: false,\n              children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n                image: image,\n                size: difficulty,\n                bgPosition: piece.bgPosition,\n                onClick: () => handleSourcePieceClick(index),\n                isDragging: draggedPiece === index,\n                children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n                  children: parseInt(piece.id) + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 23\n                }, this)\n              }, piece.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDDBC\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 'auto',\n                fontSize: '0.8em',\n                opacity: 0.7\n              },\n              children: \"(\\u10D3\\u10D0\\u10D0\\u10ED\\u10D8\\u10E0\\u10D4 \\u10D2\\u10D0\\u10E1\\u10D0\\u10D3\\u10D8\\u10D3\\u10D4\\u10D1\\u10DA\\u10D0\\u10D3)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n            size: difficulty,\n            isExpanded: isImageExpanded,\n            onClick: toggleImageExpand,\n            children: /*#__PURE__*/_jsxDEV(OriginalImage, {\n              image: image,\n              size: difficulty,\n              isExpanded: isImageExpanded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: toggleHints,\n              children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onBackToMenu,\n              children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"ecfSRVPUr4JTbkDfJcuw7GUW5Q0=\");\n_c19 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"TopSection\");\n$RefreshReg$(_c3, \"RightSection\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"ImageCard\");\n$RefreshReg$(_c7, \"ImageContainer\");\n$RefreshReg$(_c8, \"OriginalImage\");\n$RefreshReg$(_c9, \"Board\");\n$RefreshReg$(_c10, \"PuzzlePiece\");\n$RefreshReg$(_c11, \"ButtonsContainer\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"Message\");\n$RefreshReg$(_c14, \"HintOverlay\");\n$RefreshReg$(_c15, \"DraggedPiece\");\n$RefreshReg$(_c16, \"LoadingSpinner\");\n$RefreshReg$(_c17, \"LoadingOverlay\");\n$RefreshReg$(_c18, \"Toast\");\n$RefreshReg$(_c19, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","keyframes","jsxDEV","_jsxDEV","GameContainer","div","_c","TopSection","_c2","RightSection","_c3","BottomSection","Card","_c4","CardTitle","h3","_c5","ImageCard","_c6","ImageContainer","props","size","isExpanded","_c7","OriginalImage","image","_c8","Board","isTarget","_c9","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","isDragging","_c10","ButtonsContainer","_c11","Button","button","variant","_c12","Message","_c13","HintOverlay","_c14","DraggedPiece","_c15","spin","LoadingSpinner","_c16","LoadingOverlay","_c17","fadeIn","fadeOut","Toast","isClosing","_c18","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","onImageChange","onError","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","errorCount","setErrorCount","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","isLoading","setIsLoading","isImageExpanded","setIsImageExpanded","showToast","setShowToast","isToastClosing","setIsToastClosing","initialPieces","totalPieces","pieceSize","i","j","push","id","correctIndex","initializePuzzle","console","error","Promise","resolve","setTimeout","shuffledPieces","sort","Math","random","map","piece","index","currentPos","initialTargetBoard","Array","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handlePaste","preventDefault","_e$clipboardData","items","clipboardData","length","type","indexOf","file","getAsFile","reader","FileReader","onload","event","target","result","readAsDataURL","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","prev","toggleHints","handlePasteClick","navigator","clipboard","read","then","clipboardItems","clipboardItem","types","startsWith","blob","getType","catch","err","toggleImageExpand","progress","round","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","has","onClick","marginLeft","fontSize","opacity","left","top","backgroundImage","backgroundSize","backgroundPosition","_c19","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  height: 100%;\n`;\n\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n\nconst ImageCard = styled(Card)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  ${props => props.isExpanded && `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    border: none;\n    border-radius: 0;\n  `}\n`;\n\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.isExpanded ? 'contain' : `${props.size * 100}% ${props.size * 100}%`};\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: all 0.3s ease;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #2196F3;\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n  margin: 0 auto;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n`;\n\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst fadeOut = keyframes`\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n`;\n\nconst Toast = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1000;\n  animation: ${props => props.isClosing ? fadeOut : fadeIn} 0.5s ease forwards;\n  backdrop-filter: blur(10px);\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu, onImageChange, onError }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [errorCount, setErrorCount] = useState(0);\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageExpanded, setIsImageExpanded] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [isToastClosing, setIsToastClosing] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n\n    return pieces;\n  }, [difficulty]);\n\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      \n      try {\n        const totalPieces = difficulty * difficulty;\n        \n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        const shuffledPieces = [...initialPieces]\n          .sort(() => Math.random() - 0.5)\n          .map((piece, index) => ({\n            ...piece,\n            currentPos: index\n          }));\n\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        \n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  const handlePaste = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      const items = e.clipboardData?.items;\n      if (!items) return;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const file = items[i].getAsFile();\n          const reader = new FileReader();\n          \n          reader.onload = (event) => {\n            onImageChange(event.target.result);\n            setIsLoading(false);\n          };\n          \n          reader.readAsDataURL(file);\n          return;\n        }\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error handling paste:', error);\n      setIsLoading(false);\n    }\n  };\n\n  const handleSourcePieceClick = (index) => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n      setErrorCount(prev => prev + 1);\n      onError();\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async (clipboardItems) => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch((err) => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n\n  const toggleImageExpand = () => {\n    setIsImageExpanded(!isImageExpanded);\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      setShowToast(true);\n      onComplete(errorCount);  // გადავცეთ შეცდომების რაოდენობა\n      \n      setTimeout(() => {\n        setIsToastClosing(true);\n        setTimeout(() => {\n          setShowToast(false);\n          setIsToastClosing(false);\n        }, 500);\n      }, 3000);\n    }\n  }, [correctPositions, difficulty, onComplete, errorCount]);\n\n  useEffect(() => {\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, []);\n\n  return (\n    <GameContainer>\n      {showToast && (\n        <Toast isClosing={isToastClosing}>\n          🎉 გილოცავთ! პაზლი წარმატებით ააწყვეთ!\n        </Toast>\n      )}\n      <TopSection>\n        <Card>\n          <CardTitle>\n            <span>🎮</span>\n            აქ ააწყვე პაზლი\n          </CardTitle>\n          <div style={{ position: 'relative' }}>\n            {isLoading && (\n              <LoadingOverlay>\n                <LoadingSpinner />\n              </LoadingOverlay>\n            )}\n            <Board size={difficulty} isTarget={true}>\n              {targetBoard.map((piece, index) => (\n                <PuzzlePiece\n                  key={index}\n                  image={piece ? image : null}\n                  size={difficulty}\n                  bgPosition={piece ? piece.bgPosition : ''}\n                  isTarget={!piece}\n                  isPlaced={piece !== null}\n                  isWrongAttempt={wrongAttempts.has(index)}\n                  onClick={() => handleTargetPieceClick(index)}\n                >\n                  {!piece && showHints && (\n                    <Message>\n                      {index + 1}\n                    </Message>\n                  )}\n                </PuzzlePiece>\n              ))}\n            </Board>\n          </div>\n        </Card>\n\n        <RightSection>\n          <Card>\n            <CardTitle>\n              <span>🧩</span>\n              პაზლის ნაწილები\n            </CardTitle>\n            <div style={{ position: 'relative' }}>\n              {isLoading && (\n                <LoadingOverlay>\n                  <LoadingSpinner />\n                </LoadingOverlay>\n              )}\n              <Board size={difficulty} isTarget={false}>\n                {pieces.map((piece, index) => piece && (\n                  <PuzzlePiece\n                    key={piece.id}\n                    image={image}\n                    size={difficulty}\n                    bgPosition={piece.bgPosition}\n                    onClick={() => handleSourcePieceClick(index)}\n                    isDragging={draggedPiece === index}\n                  >\n                    {showHints && (\n                      <HintOverlay>\n                        {parseInt(piece.id) + 1}\n                      </HintOverlay>\n                    )}\n                  </PuzzlePiece>\n                ))}\n              </Board>\n            </div>\n          </Card>\n\n          <ImageCard>\n            <CardTitle>\n              <span>🖼️</span>\n              ორიგინალი სურათი\n              <span style={{ marginLeft: 'auto', fontSize: '0.8em', opacity: 0.7 }}>\n                (დააჭირე გასადიდებლად)\n              </span>\n            </CardTitle>\n            <ImageContainer \n              size={difficulty} \n              isExpanded={isImageExpanded}\n              onClick={toggleImageExpand}\n            >\n              <OriginalImage \n                image={image} \n                size={difficulty}\n                isExpanded={isImageExpanded}\n              />\n            </ImageContainer>\n            <ButtonsContainer>\n              <Button variant=\"primary\" onClick={toggleHints}>\n                {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n              </Button>\n              <Button onClick={onBackToMenu}>\n                🏠 მთავარ მენიუში დაბრუნება\n              </Button>\n            </ButtonsContainer>\n          </ImageCard>\n        </RightSection>\n      </TopSection>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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aAAa;AACrF;AACA;AACA;AACA,CAAC;AAACC,IAAA,GA3BIL,WAAW;AA6BjB,MAAMM,gBAAgB,GAAGpC,MAAM,CAACK,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GALID,gBAAgB;AAOtB,MAAME,MAAM,GAAGtC,MAAM,CAACuC,MAAM;AAC5B,sBAAsBnB,KAAK,IAAIA,KAAK,CAACoB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBpB,KAAK,IAAIA,KAAK,CAACoB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AACpF;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAtBIH,MAAM;AAwBZ,MAAMI,OAAO,GAAG1C,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AAACsC,IAAA,GAJID,OAAO;AAMb,MAAME,WAAW,GAAG5C,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACwC,IAAA,GAZID,WAAW;AAcjB,MAAME,YAAY,GAAG9C,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0C,IAAA,GAVID,YAAY;AAYlB,MAAME,IAAI,GAAG/C,SAAS;AACtB;AACA;AACA,CAAC;AAED,MAAMgD,cAAc,GAAGjD,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,eAAe2C,IAAI;AACnB;AACA,CAAC;AAACE,IAAA,GARID,cAAc;AAUpB,MAAME,cAAc,GAAGnD,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+C,IAAA,GAXID,cAAc;AAapB,MAAME,MAAM,GAAGpD,SAAS;AACxB;AACA;AACA,CAAC;AAED,MAAMqD,OAAO,GAAGrD,SAAS;AACzB;AACA;AACA,CAAC;AAED,MAAMsD,KAAK,GAAGvD,MAAM,CAACK,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAee,KAAK,IAAIA,KAAK,CAACoC,SAAS,GAAGF,OAAO,GAAGD,MAAM;AAC1D;AACA,CAAC;AAACI,IAAA,GAhBIF,KAAK;AAkBX,MAAMG,WAAW,GAAGA,CAAC;EAAEjC,KAAK;EAAEkC,UAAU;EAAEC,UAAU;EAAEC,UAAU;EAAEC,YAAY;EAAEC,aAAa;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3G,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuE,aAAa,EAAEC,gBAAgB,CAAC,GAAGxE,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACyE,WAAW,EAAEC,cAAc,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2E,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5E,QAAQ,CAAC,IAAI6E,GAAG,CAAC,CAAC,CAAC;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG/E,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgF,aAAa,EAAEC,gBAAgB,CAAC,GAAGjF,QAAQ,CAAC,IAAI6E,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGnF,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACoF,YAAY,EAAEC,eAAe,CAAC,GAAGrF,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsF,aAAa,EAAEC,gBAAgB,CAAC,GAAGvF,QAAQ,CAAC;IAAEwF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3F,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4F,eAAe,EAAEC,kBAAkB,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC8F,SAAS,EAAEC,YAAY,CAAC,GAAG/F,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgG,cAAc,EAAEC,iBAAiB,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAMkG,aAAa,GAAGhG,OAAO,CAAC,MAAM;IAClC,MAAMiG,WAAW,GAAGrC,UAAU,GAAGA,UAAU;IAC3C,MAAMsC,SAAS,GAAG,GAAG,GAAGtC,UAAU;IAClC,MAAMO,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIgC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvC,UAAU,EAAEuC,CAAC,EAAE,EAAE;MACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxC,UAAU,EAAEwC,CAAC,EAAE,EAAE;QACnCjC,MAAM,CAACkC,IAAI,CAAC;UACVC,EAAE,EAAEH,CAAC,GAAGvC,UAAU,GAAGwC,CAAC;UACtBpE,UAAU,EAAE,GAAGoE,CAAC,IAAI,GAAG,IAAIxC,UAAU,GAAG,CAAC,CAAC,CAAC,KAAKuC,CAAC,IAAI,GAAG,IAAIvC,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG;UAC/E2C,YAAY,EAAEJ,CAAC,GAAGvC,UAAU,GAAGwC;QACjC,CAAC,CAAC;MACJ;IACF;IAEA,OAAOjC,MAAM;EACf,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB7D,SAAS,CAAC,MAAM;IACd,MAAMyG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCf,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACF,MAAMQ,WAAW,GAAGrC,UAAU,GAAGA,UAAU;QAE3C,IAAI,CAACA,UAAU,IAAIA,UAAU,IAAI,CAAC,EAAE;UAClC6C,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAE9C,UAAU,CAAC;UACtD;QACF;;QAEA;QACA,MAAM,IAAI+C,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;QAEtD,MAAME,cAAc,GAAG,CAAC,GAAGd,aAAa,CAAC,CACtCe,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;UACtB,GAAGD,KAAK;UACRE,UAAU,EAAED;QACd,CAAC,CAAC,CAAC;QAEL,MAAME,kBAAkB,GAAGC,KAAK,CAACtB,WAAW,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;QAExDpD,SAAS,CAAC0C,cAAc,CAAC;QACzBtC,cAAc,CAAC8C,kBAAkB,CAAC;QAClC5C,mBAAmB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;QAC9BL,gBAAgB,CAAC,IAAI,CAAC;QACtBS,gBAAgB,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAAC;QAC3BQ,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,SAAS;QACRjB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDe,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC9E,KAAK,EAAEkC,UAAU,EAAEoC,aAAa,CAAC,CAAC;EAEtCjG,SAAS,CAAC,MAAM;IACd8E,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACjB,UAAU,CAAC,CAAC;EAEhB7D,SAAS,CAAC,MAAM;IACd,MAAM0H,eAAe,GAAIC,CAAC,IAAK;MAC7B,IAAIxC,YAAY,KAAK,IAAI,EAAE;QACzBG,gBAAgB,CAAC;UAAEC,CAAC,EAAEoC,CAAC,CAACC,OAAO;UAAEpC,CAAC,EAAEmC,CAAC,CAACE;QAAQ,CAAC,CAAC;MAClD;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEL,eAAe,CAAC;IACrD,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEN,eAAe,CAAC;EACvE,CAAC,EAAE,CAACvC,YAAY,CAAC,CAAC;EAElB,MAAM8C,WAAW,GAAG,MAAON,CAAC,IAAK;IAC/BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBxC,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MAAA,IAAAyC,gBAAA;MACF,MAAMC,KAAK,IAAAD,gBAAA,GAAGR,CAAC,CAACU,aAAa,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBC,KAAK;MACpC,IAAI,CAACA,KAAK,EAAE;MAEZ,KAAK,IAAIhC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,KAAK,CAACE,MAAM,EAAElC,CAAC,EAAE,EAAE;QACrC,IAAIgC,KAAK,CAAChC,CAAC,CAAC,CAACmC,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;UACzC,MAAMC,IAAI,GAAGL,KAAK,CAAChC,CAAC,CAAC,CAACsC,SAAS,CAAC,CAAC;UACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;UAE/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;YACzB7E,aAAa,CAAC6E,KAAK,CAACC,MAAM,CAACC,MAAM,CAAC;YAClCtD,YAAY,CAAC,KAAK,CAAC;UACrB,CAAC;UAEDiD,MAAM,CAACM,aAAa,CAACR,IAAI,CAAC;UAC1B;QACF;MACF;MAEA/C,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMwD,sBAAsB,GAAI7B,KAAK,IAAK;IACxC,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAIjD,MAAM,CAACkE,MAAM,IAAI,CAAClE,MAAM,CAACiD,KAAK,CAAC,EAAE;MACzDX,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEU,KAAK,CAAC;MAC5C;IACF;IAEA,IAAIlC,YAAY,KAAKkC,KAAK,EAAE;MAC1BjC,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAACiC,KAAK,CAAC;MACtBrC,gBAAgB,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAAC;IAC7B;IACAL,gBAAgB,CAAC8C,KAAK,CAAC;EACzB,CAAC;EAED,MAAM8B,sBAAsB,GAAIC,WAAW,IAAK;IAC9C,IAAIjE,YAAY,KAAK,IAAI,IAAIiE,WAAW,GAAG,CAAC,IAAIA,WAAW,IAAI5E,WAAW,CAAC8D,MAAM,EAAE;MACjF;IACF;IAEA,IAAI9D,WAAW,CAAC4E,WAAW,CAAC,KAAK,IAAI,EAAE;MACrC;IACF;IAEA,MAAMC,iBAAiB,GAAGjF,MAAM,CAACe,YAAY,CAAC;IAC9C,IAAI,CAACkE,iBAAiB,EAAE;MACtB3C,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MAC/C;IACF;IAEA,IAAI2C,QAAQ,CAACD,iBAAiB,CAAC9C,EAAE,CAAC,KAAK6C,WAAW,EAAE;MAClD,MAAMG,cAAc,GAAG,CAAC,GAAG/E,WAAW,CAAC;MACvC+E,cAAc,CAACH,WAAW,CAAC,GAAGC,iBAAiB;MAC/C5E,cAAc,CAAC8E,cAAc,CAAC;MAE9B,MAAMC,SAAS,GAAG,CAAC,GAAGpF,MAAM,CAAC;MAC7BoF,SAAS,CAACrE,YAAY,CAAC,GAAG,IAAI;MAC9Bd,SAAS,CAACmF,SAAS,CAAC;MAEpB,MAAMC,mBAAmB,GAAG,IAAI7E,GAAG,CAACF,gBAAgB,CAAC;MACrD+E,mBAAmB,CAACC,GAAG,CAACN,WAAW,CAAC;MACpCzE,mBAAmB,CAAC8E,mBAAmB,CAAC;IAC1C,CAAC,MAAM;MACL,MAAME,gBAAgB,GAAG,IAAI/E,GAAG,CAACG,aAAa,CAAC;MAC/C4E,gBAAgB,CAACD,GAAG,CAACN,WAAW,CAAC;MACjCpE,gBAAgB,CAAC2E,gBAAgB,CAAC;MAClCzE,aAAa,CAAC0E,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC/B1F,OAAO,CAAC,CAAC;IACX;IAEAkB,eAAe,CAAC,IAAI,CAAC;IACrBb,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMsF,WAAW,GAAGA,CAAA,KAAM;IACxB/E,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMiF,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,SAAS,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAOC,cAAc,IAAK;MACxD,KAAK,MAAMC,aAAa,IAAID,cAAc,EAAE;QAC1C,KAAK,MAAM5B,IAAI,IAAI6B,aAAa,CAACC,KAAK,EAAE;UACtC,IAAI9B,IAAI,CAAC+B,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC7B,MAAMC,IAAI,GAAG,MAAMH,aAAa,CAACI,OAAO,CAACjC,IAAI,CAAC;YAC9C,MAAMI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;YAC/BD,MAAM,CAACE,MAAM,GAAIlB,CAAC,IAAK;cACrB1D,aAAa,CAAC0D,CAAC,CAACoB,MAAM,CAACC,MAAM,CAAC;YAChC,CAAC;YACDL,MAAM,CAACM,aAAa,CAACsB,IAAI,CAAC;YAC1B;UACF;QACF;MACF;IACF,CAAC,CAAC,CAACE,KAAK,CAAEC,GAAG,IAAK;MAChBhE,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAE+D,GAAG,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B/E,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED3F,SAAS,CAAC,MAAM;IACd,MAAM4K,QAAQ,GAAIlG,gBAAgB,CAACnD,IAAI,IAAIsC,UAAU,GAAGA,UAAU,CAAC,GAAI,GAAG;IAC1EC,UAAU,CAACmD,IAAI,CAAC4D,KAAK,CAACD,QAAQ,CAAC,CAAC;IAEhC,IAAIlG,gBAAgB,CAACnD,IAAI,KAAKsC,UAAU,GAAGA,UAAU,EAAE;MACrDiC,YAAY,CAAC,IAAI,CAAC;MAClB/B,UAAU,CAACkB,UAAU,CAAC,CAAC,CAAE;;MAEzB6B,UAAU,CAAC,MAAM;QACfd,iBAAiB,CAAC,IAAI,CAAC;QACvBc,UAAU,CAAC,MAAM;UACfhB,YAAY,CAAC,KAAK,CAAC;UACnBE,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACtB,gBAAgB,EAAEb,UAAU,EAAEE,UAAU,EAAEkB,UAAU,CAAC,CAAC;EAE1DjF,SAAS,CAAC,MAAM;IACd8H,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEE,WAAW,CAAC;IAC7C,OAAO,MAAMH,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEC,WAAW,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5H,OAAA,CAACC,aAAa;IAAAwK,QAAA,GACXjF,SAAS,iBACRxF,OAAA,CAACoD,KAAK;MAACC,SAAS,EAAEqC,cAAe;MAAA+E,QAAA,EAAC;IAElC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR,eACD7K,OAAA,CAACI,UAAU;MAAAqK,QAAA,gBACTzK,OAAA,CAACS,IAAI;QAAAgK,QAAA,gBACHzK,OAAA,CAACW,SAAS;UAAA8J,QAAA,gBACRzK,OAAA;YAAAyK,QAAA,EAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,oFAEjB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACZ7K,OAAA;UAAK8K,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAAN,QAAA,GAClCrF,SAAS,iBACRpF,OAAA,CAACgD,cAAc;YAAAyH,QAAA,eACbzK,OAAA,CAAC8C,cAAc;cAAA4H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CACjB,eACD7K,OAAA,CAACwB,KAAK;YAACN,IAAI,EAAEsC,UAAW;YAAC/B,QAAQ,EAAE,IAAK;YAAAgJ,QAAA,EACrCtG,WAAW,CAAC2C,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BhH,OAAA,CAAC2B,WAAW;cAEVL,KAAK,EAAEyF,KAAK,GAAGzF,KAAK,GAAG,IAAK;cAC5BJ,IAAI,EAAEsC,UAAW;cACjB5B,UAAU,EAAEmF,KAAK,GAAGA,KAAK,CAACnF,UAAU,GAAG,EAAG;cAC1CH,QAAQ,EAAE,CAACsF,KAAM;cACjBjF,QAAQ,EAAEiF,KAAK,KAAK,IAAK;cACzBlF,cAAc,EAAE6C,aAAa,CAACsG,GAAG,CAAChE,KAAK,CAAE;cACzCiE,OAAO,EAAEA,CAAA,KAAMnC,sBAAsB,CAAC9B,KAAK,CAAE;cAAAyD,QAAA,EAE5C,CAAC1D,KAAK,IAAIvC,SAAS,iBAClBxE,OAAA,CAACuC,OAAO;gBAAAkI,QAAA,EACLzD,KAAK,GAAG;cAAC;gBAAA0D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YACV,GAbI7D,KAAK;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcC,CACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEP7K,OAAA,CAACM,YAAY;QAAAmK,QAAA,gBACXzK,OAAA,CAACS,IAAI;UAAAgK,QAAA,gBACHzK,OAAA,CAACW,SAAS;YAAA8J,QAAA,gBACRzK,OAAA;cAAAyK,QAAA,EAAM;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,yFAEjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACZ7K,OAAA;YAAK8K,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAN,QAAA,GAClCrF,SAAS,iBACRpF,OAAA,CAACgD,cAAc;cAAAyH,QAAA,eACbzK,OAAA,CAAC8C,cAAc;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACjB,eACD7K,OAAA,CAACwB,KAAK;cAACN,IAAI,EAAEsC,UAAW;cAAC/B,QAAQ,EAAE,KAAM;cAAAgJ,QAAA,EACtC1G,MAAM,CAAC+C,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,iBACjC/G,OAAA,CAAC2B,WAAW;gBAEVL,KAAK,EAAEA,KAAM;gBACbJ,IAAI,EAAEsC,UAAW;gBACjB5B,UAAU,EAAEmF,KAAK,CAACnF,UAAW;gBAC7BqJ,OAAO,EAAEA,CAAA,KAAMpC,sBAAsB,CAAC7B,KAAK,CAAE;gBAC7CjF,UAAU,EAAE+C,YAAY,KAAKkC,KAAM;gBAAAyD,QAAA,EAElCjG,SAAS,iBACRxE,OAAA,CAACyC,WAAW;kBAAAgI,QAAA,EACTxB,QAAQ,CAAClC,KAAK,CAACb,EAAE,CAAC,GAAG;gBAAC;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ;cACd,GAXI9D,KAAK,CAACb,EAAE;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYF,CACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAEP7K,OAAA,CAACc,SAAS;UAAA2J,QAAA,gBACRzK,OAAA,CAACW,SAAS;YAAA8J,QAAA,gBACRzK,OAAA;cAAAyK,QAAA,EAAM;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,+FAEhB,eAAA7K,OAAA;cAAM8K,KAAK,EAAE;gBAAEI,UAAU,EAAE,MAAM;gBAAEC,QAAQ,EAAE,OAAO;gBAAEC,OAAO,EAAE;cAAI,CAAE;cAAAX,QAAA,EAAC;YAEtE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACZ7K,OAAA,CAACgB,cAAc;YACbE,IAAI,EAAEsC,UAAW;YACjBrC,UAAU,EAAEmE,eAAgB;YAC5B2F,OAAO,EAAEX,iBAAkB;YAAAG,QAAA,eAE3BzK,OAAA,CAACqB,aAAa;cACZC,KAAK,EAAEA,KAAM;cACbJ,IAAI,EAAEsC,UAAW;cACjBrC,UAAU,EAAEmE;YAAgB;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACY,CAAC,eACjB7K,OAAA,CAACiC,gBAAgB;YAAAwI,QAAA,gBACfzK,OAAA,CAACmC,MAAM;cAACE,OAAO,EAAC,SAAS;cAAC4I,OAAO,EAAEzB,WAAY;cAAAiB,QAAA,EAC5CjG,SAAS,GAAG,uBAAuB,GAAG;YAAwB;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD,CAAC,eACT7K,OAAA,CAACmC,MAAM;cAAC8I,OAAO,EAAEtH,YAAa;cAAA8G,QAAA,EAAC;YAE/B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAEZ/F,YAAY,KAAK,IAAI,IAAIf,MAAM,CAACe,YAAY,CAAC,iBAC5C9E,OAAA,CAAC2C,YAAY;MACXmI,KAAK,EAAE;QACLO,IAAI,EAAE,GAAGrG,aAAa,CAACE,CAAC,IAAI;QAC5BoG,GAAG,EAAE,GAAGtG,aAAa,CAACG,CAAC,IAAI;QAC3BoG,eAAe,EAAE,OAAOjK,KAAK,GAAG;QAChCkK,cAAc,EAAE,GAAGhI,UAAU,GAAG,GAAG,KAAKA,UAAU,GAAG,GAAG,GAAG;QAC3DiI,kBAAkB,EAAE1H,MAAM,CAACe,YAAY,CAAC,CAAClD;MAC3C;IAAE;MAAA8I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB,CAAC;AAAC/G,EAAA,CAvVIP,WAAW;AAAAmI,IAAA,GAAXnI,WAAW;AAyVjB,eAAeA,WAAW;AAAC,IAAApD,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAM,IAAA,EAAAE,IAAA,EAAAI,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAK,IAAA,EAAAoI,IAAA;AAAAC,YAAA,CAAAxL,EAAA;AAAAwL,YAAA,CAAAtL,GAAA;AAAAsL,YAAA,CAAApL,GAAA;AAAAoL,YAAA,CAAAjL,GAAA;AAAAiL,YAAA,CAAA9K,GAAA;AAAA8K,YAAA,CAAA5K,GAAA;AAAA4K,YAAA,CAAAvK,GAAA;AAAAuK,YAAA,CAAApK,GAAA;AAAAoK,YAAA,CAAAjK,GAAA;AAAAiK,YAAA,CAAA3J,IAAA;AAAA2J,YAAA,CAAAzJ,IAAA;AAAAyJ,YAAA,CAAArJ,IAAA;AAAAqJ,YAAA,CAAAnJ,IAAA;AAAAmJ,YAAA,CAAAjJ,IAAA;AAAAiJ,YAAA,CAAA/I,IAAA;AAAA+I,YAAA,CAAA5I,IAAA;AAAA4I,YAAA,CAAA1I,IAAA;AAAA0I,YAAA,CAAArI,IAAA;AAAAqI,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}