{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = GameContainer;\nconst SetupContainer = styled.div`\n  margin: 40px auto;\n  max-width: 400px;\n`;\n_c2 = SetupContainer;\nconst NumberSelect = styled.select`\n  padding: 12px 20px;\n  margin: 20px;\n  font-size: 16px;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  background-color: white;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: #4CAF50;\n  }\n\n  &:focus {\n    border-color: #4CAF50;\n    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n  }\n`;\n_c3 = NumberSelect;\nconst StartButton = styled.button`\n  padding: 15px 30px;\n  margin: 20px;\n  font-size: 18px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background-color: #45a049;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c4 = StartButton;\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 30px;\n  margin: 40px auto;\n  max-width: 1000px;\n  justify-items: center;\n  align-items: center;\n`;\n_c5 = ImagesGrid;\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 12px;\n  padding: 15px;\n  cursor: ${props => props.isPlayable ? 'pointer' : 'not-allowed'};\n  transition: all 0.3s ease;\n  position: relative;\n  width: 250px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n    box-shadow: ${props => props.isPlayable ? '0 8px 16px rgba(0, 0, 0, 0.2)' : '0 4px 8px rgba(0, 0, 0, 0.1)'};\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n  }\n\n  .order-number {\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 35px;\n    height: 35px;\n    background-color: #4CAF50;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 18px;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c6 = ImageCard;\nconst Timer = styled.div`\n  font-size: 32px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n\n  .hourglass {\n    font-size: 36px;\n    animation: rotate 2s infinite linear;\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n_c7 = Timer;\nconst Message = styled.div`\n  font-size: 28px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n`;\n_c8 = Message;\nconst SuccessMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 20px 40px;\n  border-radius: 10px;\n  font-size: 24px;\n  font-weight: bold;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n  z-index: 1000;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c9 = SuccessMessage;\nconst ErrorMessage = styled(SuccessMessage)`\n  background-color: rgba(244, 67, 54, 0.9);\n`;\n_c10 = ErrorMessage;\nconst MemoryGame = () => {\n  _s();\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [gameState, setGameState] = useState('setup'); // setup, showing, memorizing, playing\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const {\n    updateGameProgress\n  } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = ['ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp', 'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp', 'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp', 'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp', 'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp', 'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp', 'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp', 'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'];\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // Fisher-Yates shuffle ალგორითმი\n  const shuffleArray = useCallback(array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // ვიყენებთ crypto.getRandomValues უფრო ძლიერი შემთხვევითობისთვის\n      const j = Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1) * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n    // ვამოწმებთ რომ ახალი მასივი არ იყოს იგივე რაც ორიგინალი ან უკუღმა დალაგებული\n    const isReverse = shuffled.every((item, index) => item === array[array.length - 1 - index]);\n    const isSame = shuffled.every((item, index) => item === array[index]);\n    if (isReverse || isSame) {\n      // თუ უკუღმა ან იგივე თანმიმდევრობაა, კიდევ ერთხელ ვურევთ\n      return shuffleArray(array);\n    }\n    return shuffled;\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = shuffleArray(allImages);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n  }, [numberOfImages, loadImages, shuffleArray]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n  }, [selectRandomImages]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => {\n      const shuffled = shuffleArray(prev);\n      console.log('Original order:', prev.map(img => img.name));\n      console.log('Shuffled order:', shuffled.map(img => img.name));\n      return shuffled;\n    });\n    setGameState('playing');\n  }, [shuffleArray]);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image, index) => {\n    if (gameState !== 'playing') return;\n    setUserSequence(prev => {\n      const newSequence = [...prev, {\n        image,\n        index\n      }];\n\n      // თუ სწორი თანმიმდევრობაა\n      if (newSequence.length === selectedImages.length) {\n        const isCorrect = selectedImages.every((img, idx) => newSequence[idx].image.name === img.name);\n        if (isCorrect) {\n          updateGameProgress('memory', Date.now(), {\n            score: 100\n          });\n          setShowSuccess(true);\n          setTimeout(() => {\n            setShowSuccess(false);\n            setGameState('setup');\n            setUserSequence([]);\n          }, 2000);\n        } else {\n          setShowError(true);\n          setTimeout(() => {\n            setShowError(false);\n            setUserSequence([]);\n          }, 2000);\n        }\n      }\n      return newSequence;\n    });\n  }, [gameState, selectedImages, updateGameProgress]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    if ((gameState === 'showing' || gameState === 'memorizing') && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => {\n          console.log('Timer tick:', prev - 1);\n          return prev - 1;\n        });\n      }, 1000);\n      console.log('Starting timer:', timer, 'State:', gameState);\n    } else if (timer === 0) {\n      if (gameState === 'showing') {\n        console.log('Switching to memorizing');\n        setGameState('memorizing');\n        setTimer(2);\n      } else if (gameState === 'memorizing') {\n        console.log('Switching to playing');\n        shuffleImages();\n      }\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [timer, gameState, shuffleImages]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u10DB\\u10D4\\u10EE\\u10E1\\u10D8\\u10D4\\u10E0\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DB\\u10D0\\u10E8\\u10D8 \\uD83E\\uDDE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), showSuccess && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      show: true,\n      children: \"\\u10D2\\u10D8\\u10DA\\u10DD\\u10EA\\u10D0\\u10D5! \\u10E1\\u10EC\\u10DD\\u10E0\\u10D0\\u10D3 \\u10D2\\u10D0\\u10D8\\u10EE\\u10E1\\u10D4\\u10DC\\u10D4 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this), showError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      show: true,\n      children: \"\\u10E1\\u10D0\\u10DB\\u10EC\\u10E3\\u10EE\\u10D0\\u10E0\\u10DD\\u10D3 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0 \\u10D0\\u10E0\\u10D0\\u10E1\\u10EC\\u10DD\\u10E0\\u10D8\\u10D0. \\u10E1\\u10EA\\u10D0\\u10D3\\u10D4 \\u10D7\\u10D0\\u10D5\\u10D8\\u10D3\\u10D0\\u10DC! \\uD83E\\uDD14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this), gameState === 'setup' && /*#__PURE__*/_jsxDEV(SetupContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u10D0\\u10D8\\u10E0\\u10E9\\u10D8\\u10D4 \\u10E0\\u10D0\\u10DB\\u10D3\\u10D4\\u10DC\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8 \\u10D2\\u10D8\\u10DC\\u10D3\\u10D0 \\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberSelect, {\n        value: numberOfImages,\n        onChange: e => setNumberOfImages(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"3 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 4,\n          children: \"4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"5 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: startGame,\n        children: \"\\u10D3\\u10D0\\u10EC\\u10E7\\u10D4\\u10D1\\u10D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), gameState === 'showing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hourglass\",\n          children: \"\\u231B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        show: true,\n        children: \"\\u10D3\\u10D0\\u10D8\\u10DB\\u10D0\\u10EE\\u10E1\\u10DD\\u10D5\\u10E0\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n        children: selectedImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'memorizing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hourglass\",\n          children: \"\\u231B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), timer, \" \\u10EC\\u10D0\\u10DB\\u10D8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        show: true,\n        children: [\"\\u10D3\\u10D0\\u10EE\\u10E3\\u10ED\\u10D4 \\u10D7\\u10D5\\u10D0\\u10DA\\u10D4\\u10D1\\u10D8! \", timer, \" \\u10EC\\u10D0\\u10DB\\u10D8 \\u10D3\\u10D0\\u10E0\\u10E9\\u10D0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        show: true,\n        children: \"\\u10D0\\u10E6\\u10D0\\u10D3\\u10D2\\u10D8\\u10DC\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D4\\u10D1\\u10D8\\u10E1 \\u10D7\\u10D0\\u10DC\\u10DB\\u10D8\\u10DB\\u10D3\\u10D4\\u10D5\\u10E0\\u10DD\\u10D1\\u10D0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGrid, {\n        children: shuffledImages.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          isSelected: userSequence.some(seq => seq.index === index),\n          isPlayable: !userSequence.some(seq => seq.index === index),\n          onClick: () => !userSequence.some(seq => seq.index === index) && handleImageClick(image, index),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this), userSequence.findIndex(seq => seq.index === index) > -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-number\",\n            children: userSequence.findIndex(seq => seq.index === index) + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        show: true,\n        children: userSequence.length < selectedImages.length ? `აირჩიე ${userSequence.length + 1}-ე სურათი` : 'ყველა სურათი არჩეულია'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"wIy5IkufsxF2/WXNzBboXnWtTP4=\", false, function () {\n  return [usePlayer, useNavigate];\n});\n_c11 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"SetupContainer\");\n$RefreshReg$(_c3, \"NumberSelect\");\n$RefreshReg$(_c4, \"StartButton\");\n$RefreshReg$(_c5, \"ImagesGrid\");\n$RefreshReg$(_c6, \"ImageCard\");\n$RefreshReg$(_c7, \"Timer\");\n$RefreshReg$(_c8, \"Message\");\n$RefreshReg$(_c9, \"SuccessMessage\");\n$RefreshReg$(_c10, \"ErrorMessage\");\n$RefreshReg$(_c11, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","useNavigate","usePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","GameContainer","div","_c","SetupContainer","_c2","NumberSelect","select","_c3","StartButton","button","_c4","ImagesGrid","_c5","ImageCard","props","isSelected","isPlayable","_c6","Timer","_c7","Message","show","_c8","SuccessMessage","_c9","ErrorMessage","_c10","MemoryGame","_s","numberOfImages","setNumberOfImages","selectedImages","setSelectedImages","shuffledImages","setShuffledImages","gameState","setGameState","timer","setTimer","userSequence","setUserSequence","showSuccess","setShowSuccess","showError","setShowError","updateGameProgress","navigate","loadImages","images","map","filename","name","replace","url","process","env","PUBLIC_URL","error","console","shuffleArray","array","shuffled","i","length","j","Math","floor","crypto","getRandomValues","Uint32Array","isReverse","every","item","index","isSame","selectRandomImages","allImages","log","selected","slice","startGame","shuffleImages","prev","img","handleImageClick","image","newSequence","isCorrect","idx","Date","now","score","setTimeout","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","onClick","className","src","alt","some","seq","findIndex","_c11","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../context/PlayerContext';\n\nconst GameContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst SetupContainer = styled.div`\n  margin: 40px auto;\n  max-width: 400px;\n`;\n\nconst NumberSelect = styled.select`\n  padding: 12px 20px;\n  margin: 20px;\n  font-size: 16px;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  background-color: white;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: #4CAF50;\n  }\n\n  &:focus {\n    border-color: #4CAF50;\n    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n  }\n`;\n\nconst StartButton = styled.button`\n  padding: 15px 30px;\n  margin: 20px;\n  font-size: 18px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background-color: #45a049;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst ImagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 30px;\n  margin: 40px auto;\n  max-width: 1000px;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ImageCard = styled.div`\n  border: 2px solid ${props => props.isSelected ? '#4CAF50' : '#ddd'};\n  border-radius: 12px;\n  padding: 15px;\n  cursor: ${props => props.isPlayable ? 'pointer' : 'not-allowed'};\n  transition: all 0.3s ease;\n  position: relative;\n  width: 250px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: ${props => props.isPlayable ? 'scale(1.05)' : 'none'};\n    box-shadow: ${props => props.isPlayable ? '0 8px 16px rgba(0, 0, 0, 0.2)' : '0 4px 8px rgba(0, 0, 0, 0.1)'};\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: #333;\n  }\n\n  .order-number {\n    position: absolute;\n    top: -15px;\n    right: -15px;\n    width: 35px;\n    height: 35px;\n    background-color: #4CAF50;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 18px;\n    border: 2px solid white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Timer = styled.div`\n  font-size: 32px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n\n  .hourglass {\n    font-size: 36px;\n    animation: rotate 2s infinite linear;\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Message = styled.div`\n  font-size: 28px;\n  margin: 30px;\n  color: #333;\n  font-weight: bold;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n`;\n\nconst SuccessMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 20px 40px;\n  border-radius: 10px;\n  font-size: 24px;\n  font-weight: bold;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n  z-index: 1000;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst ErrorMessage = styled(SuccessMessage)`\n  background-color: rgba(244, 67, 54, 0.9);\n`;\n\nconst MemoryGame = () => {\n  const [numberOfImages, setNumberOfImages] = useState(3);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [gameState, setGameState] = useState('setup'); // setup, showing, memorizing, playing\n  const [timer, setTimer] = useState(5);\n  const [userSequence, setUserSequence] = useState([]);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const { updateGameProgress } = usePlayer();\n  const navigate = useNavigate();\n\n  // ფოტოების ჩატვირთვა\n  const loadImages = useCallback(async () => {\n    try {\n      const images = [\n        'ალუბალი.webp', 'არწივი.webp', 'ატამი.webp', 'აქლემი.webp', 'ბანანი.webp',\n        'ბროწეული.webp', 'ბუ.webp', 'გველი.webp', 'დათვი.webp', 'დელფინი.webp',\n        'ვაშლი.webp', 'ზებრა.webp', 'ზვიგენი.webp', 'ზღარბი.webp', 'თხა (2).webp',\n        'ირემი (2).webp', 'კაქტუსი.webp', 'კენგურუ.webp', 'კიტრი.webp', 'კოდალა.webp',\n        'კურდღელი.webp', 'ლომი.webp', 'მგელო.webp', 'მელია.webp', 'მზესუმზირა.webp',\n        'მსხალი.webp', 'ნაყინი.webp', 'ნიორი.webp', 'ობობა.webp', 'პეპელა.webp',\n        'პომიდორი.webp', 'ჟირაფი.webp', 'რკო.webp', 'სიმინდი.webp', 'სპილო.webp',\n        'ტიტა.webp', 'ფორთოხალი.webp', 'ქლიავი.webp', 'ყურძენი.webp', 'ხახვი.webp'\n      ];\n\n      return images.map(filename => ({\n        name: filename.replace('.webp', ''),\n        url: `${process.env.PUBLIC_URL}/context/newphotos/${filename}`\n      }));\n    } catch (error) {\n      console.error('Error loading images:', error);\n      return [];\n    }\n  }, []);\n\n  // Fisher-Yates shuffle ალგორითმი\n  const shuffleArray = useCallback((array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // ვიყენებთ crypto.getRandomValues უფრო ძლიერი შემთხვევითობისთვის\n      const j = Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1) * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    \n    // ვამოწმებთ რომ ახალი მასივი არ იყოს იგივე რაც ორიგინალი ან უკუღმა დალაგებული\n    const isReverse = shuffled.every((item, index) => item === array[array.length - 1 - index]);\n    const isSame = shuffled.every((item, index) => item === array[index]);\n    \n    if (isReverse || isSame) {\n      // თუ უკუღმა ან იგივე თანმიმდევრობაა, კიდევ ერთხელ ვურევთ\n      return shuffleArray(array);\n    }\n    \n    return shuffled;\n  }, []);\n\n  // რენდომ ფოტოების არჩევა\n  const selectRandomImages = useCallback(async () => {\n    const allImages = await loadImages();\n    console.log('All images:', allImages);\n    const shuffled = shuffleArray(allImages);\n    const selected = shuffled.slice(0, numberOfImages);\n    console.log('Selected images:', selected);\n    setSelectedImages(selected);\n    setShuffledImages([...selected]);\n  }, [numberOfImages, loadImages, shuffleArray]);\n\n  // თამაშის დაწყება\n  const startGame = useCallback(async () => {\n    await selectRandomImages();\n    setGameState('showing');\n    setTimer(5);\n  }, [selectRandomImages]);\n\n  // ფოტოების არევა\n  const shuffleImages = useCallback(() => {\n    setShuffledImages(prev => {\n      const shuffled = shuffleArray(prev);\n      console.log('Original order:', prev.map(img => img.name));\n      console.log('Shuffled order:', shuffled.map(img => img.name));\n      return shuffled;\n    });\n    setGameState('playing');\n  }, [shuffleArray]);\n\n  // მომხმარებლის არჩევანის დამუშავება\n  const handleImageClick = useCallback((image, index) => {\n    if (gameState !== 'playing') return;\n\n    setUserSequence(prev => {\n      const newSequence = [...prev, { image, index }];\n      \n      // თუ სწორი თანმიმდევრობაა\n      if (newSequence.length === selectedImages.length) {\n        const isCorrect = selectedImages.every((img, idx) => \n          newSequence[idx].image.name === img.name\n        );\n        \n        if (isCorrect) {\n          updateGameProgress('memory', Date.now(), { score: 100 });\n          setShowSuccess(true);\n          setTimeout(() => {\n            setShowSuccess(false);\n            setGameState('setup');\n            setUserSequence([]);\n          }, 2000);\n        } else {\n          setShowError(true);\n          setTimeout(() => {\n            setShowError(false);\n            setUserSequence([]);\n          }, 2000);\n        }\n      }\n      \n      return newSequence;\n    });\n  }, [gameState, selectedImages, updateGameProgress]);\n\n  // ტაიმერის ლოგიკა\n  useEffect(() => {\n    let interval;\n    \n    if ((gameState === 'showing' || gameState === 'memorizing') && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => {\n          console.log('Timer tick:', prev - 1);\n          return prev - 1;\n        });\n      }, 1000);\n\n      console.log('Starting timer:', timer, 'State:', gameState);\n    } else if (timer === 0) {\n      if (gameState === 'showing') {\n        console.log('Switching to memorizing');\n        setGameState('memorizing');\n        setTimer(2);\n      } else if (gameState === 'memorizing') {\n        console.log('Switching to playing');\n        shuffleImages();\n      }\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [timer, gameState, shuffleImages]);\n\n  return (\n    <GameContainer>\n      <h1>მეხსიერების თამაში 🧠</h1>\n\n      {showSuccess && (\n        <SuccessMessage show>\n          გილოცავ! სწორად გაიხსენე თანმიმდევრობა! 🎉\n        </SuccessMessage>\n      )}\n\n      {showError && (\n        <ErrorMessage show>\n          სამწუხაროდ თანმიმდევრობა არასწორია. სცადე თავიდან! 🤔\n        </ErrorMessage>\n      )}\n\n      {gameState === 'setup' && (\n        <SetupContainer>\n          <h2>აირჩიე რამდენი სურათი გინდა დაიმახსოვრო:</h2>\n          <NumberSelect \n            value={numberOfImages} \n            onChange={(e) => setNumberOfImages(Number(e.target.value))}\n          >\n            <option value={3}>3 სურათი</option>\n            <option value={4}>4 სურათი</option>\n            <option value={5}>5 სურათი</option>\n          </NumberSelect>\n          <StartButton onClick={startGame}>დაწყება</StartButton>\n        </SetupContainer>\n      )}\n\n      {gameState === 'showing' && (\n        <>\n          <Timer>\n            <span className=\"hourglass\">⌛</span>\n            {timer} წამი\n          </Timer>\n          <Message show>დაიმახსოვრე სურათების თანმიმდევრობა!</Message>\n          <ImagesGrid>\n            {selectedImages.map((image, index) => (\n              <ImageCard key={index}>\n                <img src={image.url} alt={image.name} />\n                <p>{image.name}</p>\n              </ImageCard>\n            ))}\n          </ImagesGrid>\n        </>\n      )}\n\n      {gameState === 'memorizing' && (\n        <>\n          <Timer>\n            <span className=\"hourglass\">⌛</span>\n            {timer} წამი\n          </Timer>\n          <Message show>დახუჭე თვალები! {timer} წამი დარჩა</Message>\n        </>\n      )}\n\n      {gameState === 'playing' && (\n        <>\n          <Message show>აღადგინე სურათების თანმიმდევრობა!</Message>\n          <ImagesGrid>\n            {shuffledImages.map((image, index) => (\n              <ImageCard \n                key={index}\n                isSelected={userSequence.some(seq => seq.index === index)}\n                isPlayable={!userSequence.some(seq => seq.index === index)}\n                onClick={() => !userSequence.some(seq => seq.index === index) && handleImageClick(image, index)}\n              >\n                <img src={image.url} alt={image.name} />\n                <p>{image.name}</p>\n                {userSequence.findIndex(seq => seq.index === index) > -1 && (\n                  <div className=\"order-number\">\n                    {userSequence.findIndex(seq => seq.index === index) + 1}\n                  </div>\n                )}\n              </ImageCard>\n            ))}\n          </ImagesGrid>\n          <Message show>\n            {userSequence.length < selectedImages.length \n              ? `აირჩიე ${userSequence.length + 1}-ე სურათი`\n              : 'ყველა სურათი არჩეულია'}\n          </Message>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default MemoryGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}