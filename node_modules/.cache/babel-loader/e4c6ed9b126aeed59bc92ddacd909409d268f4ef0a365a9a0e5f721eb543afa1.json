{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n_c = GameContainer;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n_c2 = TopSection;\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c3 = RightSection;\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n_c4 = Card;\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n_c5 = CardTitle;\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n`;\n_c6 = ImageContainer;\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: center;\n`;\n_c7 = OriginalImage;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n_c8 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c9 = PuzzlePiece;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c10 = ButtonsContainer;\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c11 = Button;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c12 = Message;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c13 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c14 = DraggedPiece;\nconst PasteInstructions = styled.div`\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  background: rgba(33, 150, 243, 0.1);\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n`;\n_c15 = PasteInstructions;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu,\n  onImageChange\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const initialPieces = [];\n    if (!difficulty || difficulty <= 0) {\n      console.error('Invalid difficulty value:', difficulty);\n      return;\n    }\n    try {\n      for (let i = 0; i < difficulty; i++) {\n        for (let j = 0; j < difficulty; j++) {\n          initialPieces.push({\n            id: i * difficulty + j,\n            bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n            correctIndex: i * difficulty + j\n          });\n        }\n      }\n      if (initialPieces.length === totalPieces) {\n        const shuffledPieces = [...initialPieces].sort(() => Math.random() - 0.5).map((piece, index) => ({\n          ...piece,\n          currentPos: index\n        }));\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } else {\n        console.error('Mismatch in pieces array length');\n      }\n    } catch (error) {\n      console.error('Error initializing puzzle pieces:', error);\n    }\n  }, [image, difficulty]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  useEffect(() => {\n    const handlePaste = async event => {\n      var _event$clipboardData, _event$clipboardData2;\n      const items = (_event$clipboardData = event.clipboardData) === null || _event$clipboardData === void 0 ? void 0 : _event$clipboardData.items;\n      const text = (_event$clipboardData2 = event.clipboardData) === null || _event$clipboardData2 === void 0 ? void 0 : _event$clipboardData2.getData('text');\n\n      // Check if pasted content is an image URL\n      if (text && (text.startsWith('http://') || text.startsWith('https://'))) {\n        try {\n          // Check if URL is an image by trying to load it\n          const img = new Image();\n          img.crossOrigin = \"Anonymous\";\n          img.onload = () => {\n            // Create canvas to convert image to data URL\n            const canvas = document.createElement('canvas');\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            const dataUrl = canvas.toDataURL('image/jpeg');\n            onImageChange(dataUrl);\n          };\n          img.onerror = () => {\n            console.error('Failed to load image from URL');\n          };\n          img.src = text;\n          return;\n        } catch (error) {\n          console.error('Error loading image from URL:', error);\n        }\n      }\n\n      // Handle direct image paste\n      if (!items) return;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const blob = items[i].getAsFile();\n          const reader = new FileReader();\n          reader.onload = e => {\n            onImageChange(e.target.result);\n          };\n          reader.readAsDataURL(blob);\n          break;\n        }\n      }\n    };\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, [onImageChange]);\n  const handleSourcePieceClick = index => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TopSection, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFAE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), \"\\u10D0\\u10E5 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4 \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), !image && /*#__PURE__*/_jsxDEV(PasteInstructions, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), \"\\u10D3\\u10D0\\u10D0\\u10D9\\u10DD\\u10DE\\u10D8\\u10E0\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8 \\u10D0\\u10DC \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\\u10E1 \\u10D1\\u10DB\\u10E3\\u10DA\\u10D8 (URL) \\u10D2\\u10E3\\u10D2\\u10DA\\u10D8\\u10D3\\u10D0\\u10DC \\u10D3\\u10D0 \\u10E9\\u10D0\\u10E1\\u10D5\\u10D8 \\u10D0\\u10E5 (Ctrl+V / \\u2318+V)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          size: difficulty,\n          isTarget: true,\n          children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            image: piece ? image : null,\n            size: difficulty,\n            bgPosition: piece ? piece.bgPosition : '',\n            isTarget: !piece,\n            isPlaced: piece !== null,\n            isWrongAttempt: wrongAttempts.has(index),\n            onClick: () => handleTargetPieceClick(index),\n            children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightSection, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83E\\uDDE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            size: difficulty,\n            isTarget: false,\n            children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n              image: image,\n              size: difficulty,\n              bgPosition: piece.bgPosition,\n              onClick: () => handleSourcePieceClick(index),\n              isDragging: draggedPiece === index,\n              children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n                children: parseInt(piece.id) + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)\n            }, piece.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasteInstructions, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), \"\\u10D3\\u10D0\\u10D0\\u10D9\\u10DD\\u10DE\\u10D8\\u10E0\\u10D4 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8 \\u10D0\\u10DC \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\\u10E1 \\u10D1\\u10DB\\u10E3\\u10DA\\u10D8 (URL) \\u10D2\\u10E3\\u10D2\\u10DA\\u10D8\\u10D3\\u10D0\\u10DC \\u10D3\\u10D0 \\u10E9\\u10D0\\u10E1\\u10D5\\u10D8 \\u10D0\\u10E5 (Ctrl+V / \\u2318+V)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDDBC\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n            size: difficulty,\n            children: /*#__PURE__*/_jsxDEV(OriginalImage, {\n              image: image,\n              size: difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: toggleHints,\n              children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onBackToMenu,\n              children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"/qu9ORVf1011hK/wgpEQUXW/1FU=\");\n_c16 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"TopSection\");\n$RefreshReg$(_c3, \"RightSection\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"ImageContainer\");\n$RefreshReg$(_c7, \"OriginalImage\");\n$RefreshReg$(_c8, \"Board\");\n$RefreshReg$(_c9, \"PuzzlePiece\");\n$RefreshReg$(_c10, \"ButtonsContainer\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"Message\");\n$RefreshReg$(_c13, \"HintOverlay\");\n$RefreshReg$(_c14, \"DraggedPiece\");\n$RefreshReg$(_c15, \"PasteInstructions\");\n$RefreshReg$(_c16, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","GameContainer","div","_c","TopSection","_c2","RightSection","_c3","BottomSection","Card","_c4","CardTitle","h3","_c5","ImageContainer","props","size","_c6","OriginalImage","image","_c7","Board","isTarget","_c8","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","isDragging","_c9","ButtonsContainer","_c10","Button","button","variant","_c11","Message","_c12","HintOverlay","_c13","DraggedPiece","_c14","PasteInstructions","_c15","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","onImageChange","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","totalPieces","pieceSize","initialPieces","console","error","i","j","push","id","correctIndex","length","shuffledPieces","sort","Math","random","map","piece","index","currentPos","initialTargetBoard","Array","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handlePaste","event","_event$clipboardData","_event$clipboardData2","items","clipboardData","text","getData","startsWith","img","Image","crossOrigin","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","dataUrl","toDataURL","onerror","src","type","indexOf","blob","getAsFile","reader","FileReader","target","result","readAsDataURL","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","toggleHints","progress","round","children","fileName","_jsxFileName","lineNumber","columnNumber","has","onClick","style","left","top","backgroundImage","backgroundSize","backgroundPosition","_c16","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n`;\n\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: center;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst PasteInstructions = styled.div`\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  background: rgba(33, 150, 243, 0.1);\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu, onImageChange }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const initialPieces = [];\n\n    if (!difficulty || difficulty <= 0) {\n      console.error('Invalid difficulty value:', difficulty);\n      return;\n    }\n\n    try {\n      for (let i = 0; i < difficulty; i++) {\n        for (let j = 0; j < difficulty; j++) {\n          initialPieces.push({\n            id: i * difficulty + j,\n            bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n            correctIndex: i * difficulty + j\n          });\n        }\n      }\n\n      if (initialPieces.length === totalPieces) {\n        const shuffledPieces = [...initialPieces]\n          .sort(() => Math.random() - 0.5)\n          .map((piece, index) => ({\n            ...piece,\n            currentPos: index\n          }));\n\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        \n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } else {\n        console.error('Mismatch in pieces array length');\n      }\n    } catch (error) {\n      console.error('Error initializing puzzle pieces:', error);\n    }\n  }, [image, difficulty]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  useEffect(() => {\n    const handlePaste = async (event) => {\n      const items = event.clipboardData?.items;\n      const text = event.clipboardData?.getData('text');\n      \n      // Check if pasted content is an image URL\n      if (text && (text.startsWith('http://') || text.startsWith('https://'))) {\n        try {\n          // Check if URL is an image by trying to load it\n          const img = new Image();\n          img.crossOrigin = \"Anonymous\";\n          img.onload = () => {\n            // Create canvas to convert image to data URL\n            const canvas = document.createElement('canvas');\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            const dataUrl = canvas.toDataURL('image/jpeg');\n            onImageChange(dataUrl);\n          };\n          img.onerror = () => {\n            console.error('Failed to load image from URL');\n          };\n          img.src = text;\n          return;\n        } catch (error) {\n          console.error('Error loading image from URL:', error);\n        }\n      }\n      \n      // Handle direct image paste\n      if (!items) return;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const blob = items[i].getAsFile();\n          const reader = new FileReader();\n          \n          reader.onload = (e) => {\n            onImageChange(e.target.result);\n          };\n          \n          reader.readAsDataURL(blob);\n          break;\n        }\n      }\n    };\n\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, [onImageChange]);\n\n  const handleSourcePieceClick = (index) => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  return (\n    <GameContainer>\n      <TopSection>\n        <Card>\n          <CardTitle>\n            <span>🎮</span>\n            აქ ააწყვე პაზლი\n          </CardTitle>\n          {!image && (\n            <PasteInstructions>\n              <span>📋</span>\n              დააკოპირე სურათი ან სურათის ბმული (URL) გუგლიდან და ჩასვი აქ (Ctrl+V / ⌘+V)\n            </PasteInstructions>\n          )}\n          <Board size={difficulty} isTarget={true}>\n            {targetBoard.map((piece, index) => (\n              <PuzzlePiece\n                key={index}\n                image={piece ? image : null}\n                size={difficulty}\n                bgPosition={piece ? piece.bgPosition : ''}\n                isTarget={!piece}\n                isPlaced={piece !== null}\n                isWrongAttempt={wrongAttempts.has(index)}\n                onClick={() => handleTargetPieceClick(index)}\n              >\n                {!piece && showHints && (\n                  <Message>\n                    {index + 1}\n                  </Message>\n                )}\n              </PuzzlePiece>\n            ))}\n          </Board>\n        </Card>\n\n        <RightSection>\n          <Card>\n            <CardTitle>\n              <span>🧩</span>\n              პაზლის ნაწილები\n            </CardTitle>\n            <Board size={difficulty} isTarget={false}>\n              {pieces.map((piece, index) => piece && (\n                <PuzzlePiece\n                  key={piece.id}\n                  image={image}\n                  size={difficulty}\n                  bgPosition={piece.bgPosition}\n                  onClick={() => handleSourcePieceClick(index)}\n                  isDragging={draggedPiece === index}\n                >\n                  {showHints && (\n                    <HintOverlay>\n                      {parseInt(piece.id) + 1}\n                    </HintOverlay>\n                  )}\n                </PuzzlePiece>\n              ))}\n            </Board>\n          </Card>\n\n          <PasteInstructions>\n            <span>📋</span>\n            დააკოპირე სურათი ან სურათის ბმული (URL) გუგლიდან და ჩასვი აქ (Ctrl+V / ⌘+V)\n          </PasteInstructions>\n\n          <Card>\n            <CardTitle>\n              <span>🖼️</span>\n              ორიგინალი სურათი\n            </CardTitle>\n            <ImageContainer size={difficulty}>\n              <OriginalImage \n                image={image} \n                size={difficulty}\n              />\n            </ImageContainer>\n            <ButtonsContainer>\n              <Button variant=\"primary\" onClick={toggleHints}>\n                {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n              </Button>\n              <Button onClick={onBackToMenu}>\n                🏠 მთავარ მენიუში დაბრუნება\n              </Button>\n            </ButtonsContainer>\n          </Card>\n        </RightSection>\n      </TopSection>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,aAAa;AAQnB,MAAMG,UAAU,GAAGN,MAAM,CAACI,GAAG;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,UAAU;AAOhB,MAAME,YAAY,GAAGR,MAAM,CAACI,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAJID,YAAY;AAMlB,MAAME,aAAa,GAAGV,MAAM,CAACI,GAAG;AAChC;AACA;AACA,CAAC;AAED,MAAMO,IAAI,GAAGX,MAAM,CAACI,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAPID,IAAI;AASV,MAAME,SAAS,GAAGb,MAAM,CAACc,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,SAAS;AAUf,MAAMG,cAAc,GAAGhB,MAAM,CAACI,GAAG;AACjC;AACA,wBAAwBa,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,GAAG,CAAC,IAAI,CAAC,SAASD,KAAK,IAAIA,KAAK,CAACC,IAAI;AACjF;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIH,cAAc;AAUpB,MAAMI,aAAa,GAAGpB,MAAM,CAACI,GAAG;AAChC;AACA;AACA,0BAA0Ba,KAAK,IAAIA,KAAK,CAACI,KAAK;AAC9C,qBAAqBJ,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,GAAG,KAAKD,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,GAAG;AAC5E;AACA,CAAC;AAACI,GAAA,GANIF,aAAa;AAQnB,MAAMG,KAAK,GAAGvB,MAAM,CAACI,GAAG;AACxB;AACA,kCAAkCa,KAAK,IAAIA,KAAK,CAACC,IAAI;AACrD;AACA,sBAAsBD,KAAK,IAAIA,KAAK,CAACO,QAAQ,GAAG,0BAA0B,GAAG,aAAa;AAC1F;AACA;AACA,uBAAuBP,KAAK,IAAIA,KAAK,CAACO,QAAQ,GAAG,yBAAyB,GAAG,aAAa;AAC1F;AACA,CAAC;AAACC,GAAA,GATIF,KAAK;AAWX,MAAMG,WAAW,GAAG1B,MAAM,CAACI,GAAG;AAC9B;AACA;AACA,sBAAsBa,KAAK,IAAIA,KAAK,CAACI,KAAK,GAAG,OAAOJ,KAAK,CAACI,KAAK,GAAG,GAAG,MAAM;AAC3E,qBAAqBJ,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,GAAG,KAAKD,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,GAAG;AAC5E,yBAAyBD,KAAK,IAAIA,KAAK,CAACU,UAAU;AAClD,sBAAsBV,KAAK,IAAIA,KAAK,CAACW,cAAc,GAAG,SAAS,GAAGX,KAAK,CAACO,QAAQ,GAAG,aAAa,GAAG,SAAS;AAC5G,YAAYP,KAAK,IAAIA,KAAK,CAACY,QAAQ,GAAG,SAAS,GAAG,SAAS;AAC3D;AACA;AACA;AACA;AACA,sBAAsBZ,KAAK,IAAI;EAC3B,IAAIA,KAAK,CAACW,cAAc,EAAE,OAAO,wBAAwB;EACzD,OAAOX,KAAK,CAACO,QAAQ,GAAG,0BAA0B,GAAG,aAAa;AACpE,CAAC;AACH;AACA;AACA,aAAaP,KAAK,IAAIA,KAAK,CAACa,UAAU,GAAG,CAAC,GAAG,CAAC;AAC9C,qBAAqBb,KAAK,IAAIA,KAAK,CAACa,UAAU,GAAG,GAAG,GAAG,CAAC;AACxD;AACA;AACA;AACA,iBAAiBb,KAAK,IAAIA,KAAK,CAACY,QAAQ,IAAIZ,KAAK,CAACa,UAAU,GAAG,MAAM,GAAG,aAAa;AACrF;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA3BIL,WAAW;AA6BjB,MAAMM,gBAAgB,GAAGhC,MAAM,CAACI,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAAC6B,IAAA,GALID,gBAAgB;AAOtB,MAAME,MAAM,GAAGlC,MAAM,CAACmC,MAAM;AAC5B,sBAAsBlB,KAAK,IAAIA,KAAK,CAACmB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBnB,KAAK,IAAIA,KAAK,CAACmB,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;AACpF;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAtBIH,MAAM;AAwBZ,MAAMI,OAAO,GAAGtC,MAAM,CAACI,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AAACmC,IAAA,GAJID,OAAO;AAMb,MAAME,WAAW,GAAGxC,MAAM,CAACI,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqC,IAAA,GAZID,WAAW;AAcjB,MAAME,YAAY,GAAG1C,MAAM,CAACI,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuC,IAAA,GAVID,YAAY;AAYlB,MAAME,iBAAiB,GAAG5C,MAAM,CAACI,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,IAAA,GAZID,iBAAiB;AAcvB,MAAME,WAAW,GAAGA,CAAC;EAAEzB,KAAK;EAAE0B,UAAU;EAAEC,UAAU;EAAEC,UAAU;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAClG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyD,aAAa,EAAEC,gBAAgB,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9D,QAAQ,CAAC,IAAI+D,GAAG,CAAC,CAAC,CAAC;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkE,aAAa,EAAEC,gBAAgB,CAAC,GAAGnE,QAAQ,CAAC,IAAI+D,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsE,aAAa,EAAEC,gBAAgB,CAAC,GAAGvE,QAAQ,CAAC;IAAEwE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAElExE,SAAS,CAAC,MAAM;IACd,MAAMyE,WAAW,GAAGzB,UAAU,GAAGA,UAAU;IAC3C,MAAM0B,SAAS,GAAG,GAAG,GAAG1B,UAAU;IAClC,MAAM2B,aAAa,GAAG,EAAE;IAExB,IAAI,CAAC3B,UAAU,IAAIA,UAAU,IAAI,CAAC,EAAE;MAClC4B,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAE7B,UAAU,CAAC;MACtD;IACF;IAEA,IAAI;MACF,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9B,UAAU,EAAE8B,CAAC,EAAE,EAAE;QACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/B,UAAU,EAAE+B,CAAC,EAAE,EAAE;UACnCJ,aAAa,CAACK,IAAI,CAAC;YACjBC,EAAE,EAAEH,CAAC,GAAG9B,UAAU,GAAG+B,CAAC;YACtBnD,UAAU,EAAE,GAAGmD,CAAC,IAAI,GAAG,IAAI/B,UAAU,GAAG,CAAC,CAAC,CAAC,KAAK8B,CAAC,IAAI,GAAG,IAAI9B,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG;YAC/EkC,YAAY,EAAEJ,CAAC,GAAG9B,UAAU,GAAG+B;UACjC,CAAC,CAAC;QACJ;MACF;MAEA,IAAIJ,aAAa,CAACQ,MAAM,KAAKV,WAAW,EAAE;QACxC,MAAMW,cAAc,GAAG,CAAC,GAAGT,aAAa,CAAC,CACtCU,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;UACtB,GAAGD,KAAK;UACRE,UAAU,EAAED;QACd,CAAC,CAAC,CAAC;QAEL,MAAME,kBAAkB,GAAGC,KAAK,CAACpB,WAAW,CAAC,CAACqB,IAAI,CAAC,IAAI,CAAC;QAExDvC,SAAS,CAAC6B,cAAc,CAAC;QACzBzB,cAAc,CAACiC,kBAAkB,CAAC;QAClC/B,mBAAmB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;QAC9BL,gBAAgB,CAAC,IAAI,CAAC;QACtBS,gBAAgB,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAAC;QAC3BM,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACLQ,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC,EAAE,CAACvD,KAAK,EAAE0B,UAAU,CAAC,CAAC;EAEvBhD,SAAS,CAAC,MAAM;IACdgE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAAChB,UAAU,CAAC,CAAC;EAEhBhD,SAAS,CAAC,MAAM;IACd,MAAM+F,eAAe,GAAIC,CAAC,IAAK;MAC7B,IAAI7B,YAAY,KAAK,IAAI,EAAE;QACzBG,gBAAgB,CAAC;UAAEC,CAAC,EAAEyB,CAAC,CAACC,OAAO;UAAEzB,CAAC,EAAEwB,CAAC,CAACE;QAAQ,CAAC,CAAC;MAClD;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEL,eAAe,CAAC;IACrD,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEN,eAAe,CAAC;EACvE,CAAC,EAAE,CAAC5B,YAAY,CAAC,CAAC;EAElBnE,SAAS,CAAC,MAAM;IACd,MAAMsG,WAAW,GAAG,MAAOC,KAAK,IAAK;MAAA,IAAAC,oBAAA,EAAAC,qBAAA;MACnC,MAAMC,KAAK,IAAAF,oBAAA,GAAGD,KAAK,CAACI,aAAa,cAAAH,oBAAA,uBAAnBA,oBAAA,CAAqBE,KAAK;MACxC,MAAME,IAAI,IAAAH,qBAAA,GAAGF,KAAK,CAACI,aAAa,cAAAF,qBAAA,uBAAnBA,qBAAA,CAAqBI,OAAO,CAAC,MAAM,CAAC;;MAEjD;MACA,IAAID,IAAI,KAAKA,IAAI,CAACE,UAAU,CAAC,SAAS,CAAC,IAAIF,IAAI,CAACE,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE;QACvE,IAAI;UACF;UACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;UACvBD,GAAG,CAACE,WAAW,GAAG,WAAW;UAC7BF,GAAG,CAACG,MAAM,GAAG,MAAM;YACjB;YACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;YAC/CF,MAAM,CAACG,KAAK,GAAGP,GAAG,CAACO,KAAK;YACxBH,MAAM,CAACI,MAAM,GAAGR,GAAG,CAACQ,MAAM;YAC1B,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;YACnCD,GAAG,CAACE,SAAS,CAACX,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACxB,MAAMY,OAAO,GAAGR,MAAM,CAACS,SAAS,CAAC,YAAY,CAAC;YAC9CxE,aAAa,CAACuE,OAAO,CAAC;UACxB,CAAC;UACDZ,GAAG,CAACc,OAAO,GAAG,MAAM;YAClBjD,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;UAChD,CAAC;UACDkC,GAAG,CAACe,GAAG,GAAGlB,IAAI;UACd;QACF,CAAC,CAAC,OAAO/B,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD;MACF;;MAEA;MACA,IAAI,CAAC6B,KAAK,EAAE;MAEZ,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,KAAK,CAACvB,MAAM,EAAEL,CAAC,EAAE,EAAE;QACrC,IAAI4B,KAAK,CAAC5B,CAAC,CAAC,CAACiD,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;UACzC,MAAMC,IAAI,GAAGvB,KAAK,CAAC5B,CAAC,CAAC,CAACoD,SAAS,CAAC,CAAC;UACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;UAE/BD,MAAM,CAACjB,MAAM,GAAIlB,CAAC,IAAK;YACrB5C,aAAa,CAAC4C,CAAC,CAACqC,MAAM,CAACC,MAAM,CAAC;UAChC,CAAC;UAEDH,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;UAC1B;QACF;MACF;IACF,CAAC;IAED9B,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEE,WAAW,CAAC;IAC7C,OAAO,MAAMH,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEC,WAAW,CAAC;EAC/D,CAAC,EAAE,CAAClD,aAAa,CAAC,CAAC;EAEnB,MAAMoF,sBAAsB,GAAI9C,KAAK,IAAK;IACxC,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAIpC,MAAM,CAAC6B,MAAM,IAAI,CAAC7B,MAAM,CAACoC,KAAK,CAAC,EAAE;MACzDd,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEa,KAAK,CAAC;MAC5C;IACF;IAEA,IAAIvB,YAAY,KAAKuB,KAAK,EAAE;MAC1BtB,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAACsB,KAAK,CAAC;MACtBxB,gBAAgB,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAAC;IAC7B;IACAL,gBAAgB,CAACiC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM+C,sBAAsB,GAAIC,WAAW,IAAK;IAC9C,IAAIvE,YAAY,KAAK,IAAI,IAAIuE,WAAW,GAAG,CAAC,IAAIA,WAAW,IAAIhF,WAAW,CAACyB,MAAM,EAAE;MACjF;IACF;IAEA,IAAIzB,WAAW,CAACgF,WAAW,CAAC,KAAK,IAAI,EAAE;MACrC;IACF;IAEA,MAAMC,iBAAiB,GAAGrF,MAAM,CAACa,YAAY,CAAC;IAC9C,IAAI,CAACwE,iBAAiB,EAAE;MACtB/D,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MAC/C;IACF;IAEA,IAAI+D,QAAQ,CAACD,iBAAiB,CAAC1D,EAAE,CAAC,KAAKyD,WAAW,EAAE;MAClD,MAAMG,cAAc,GAAG,CAAC,GAAGnF,WAAW,CAAC;MACvCmF,cAAc,CAACH,WAAW,CAAC,GAAGC,iBAAiB;MAC/ChF,cAAc,CAACkF,cAAc,CAAC;MAE9B,MAAMC,SAAS,GAAG,CAAC,GAAGxF,MAAM,CAAC;MAC7BwF,SAAS,CAAC3E,YAAY,CAAC,GAAG,IAAI;MAC9BZ,SAAS,CAACuF,SAAS,CAAC;MAEpB,MAAMC,mBAAmB,GAAG,IAAIjF,GAAG,CAACF,gBAAgB,CAAC;MACrDmF,mBAAmB,CAACC,GAAG,CAACN,WAAW,CAAC;MACpC7E,mBAAmB,CAACkF,mBAAmB,CAAC;IAC1C,CAAC,MAAM;MACL,MAAME,gBAAgB,GAAG,IAAInF,GAAG,CAACG,aAAa,CAAC;MAC/CgF,gBAAgB,CAACD,GAAG,CAACN,WAAW,CAAC;MACjCxE,gBAAgB,CAAC+E,gBAAgB,CAAC;IACpC;IAEA7E,eAAe,CAAC,IAAI,CAAC;IACrBX,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMyF,WAAW,GAAGA,CAAA,KAAM;IACxBlF,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED/D,SAAS,CAAC,MAAM;IACd,MAAMmJ,QAAQ,GAAIvF,gBAAgB,CAACzC,IAAI,IAAI6B,UAAU,GAAGA,UAAU,CAAC,GAAI,GAAG;IAC1EC,UAAU,CAACqC,IAAI,CAAC8D,KAAK,CAACD,QAAQ,CAAC,CAAC;IAEhC,IAAIvF,gBAAgB,CAACzC,IAAI,KAAK6B,UAAU,GAAGA,UAAU,EAAE;MACrDE,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACU,gBAAgB,EAAEZ,UAAU,EAAEE,UAAU,EAAED,UAAU,CAAC,CAAC;EAE1D,oBACE9C,OAAA,CAACC,aAAa;IAAAiJ,QAAA,gBACZlJ,OAAA,CAACI,UAAU;MAAA8I,QAAA,gBACTlJ,OAAA,CAACS,IAAI;QAAAyI,QAAA,gBACHlJ,OAAA,CAACW,SAAS;UAAAuI,QAAA,gBACRlJ,OAAA;YAAAkJ,QAAA,EAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,oFAEjB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,EACX,CAACnI,KAAK,iBACLnB,OAAA,CAAC0C,iBAAiB;UAAAwG,QAAA,gBAChBlJ,OAAA;YAAAkJ,QAAA,EAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,0TAEjB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CACpB,eACDtJ,OAAA,CAACqB,KAAK;UAACL,IAAI,EAAE6B,UAAW;UAACvB,QAAQ,EAAE,IAAK;UAAA4H,QAAA,EACrC3F,WAAW,CAAC8B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BvF,OAAA,CAACwB,WAAW;YAEVL,KAAK,EAAEmE,KAAK,GAAGnE,KAAK,GAAG,IAAK;YAC5BH,IAAI,EAAE6B,UAAW;YACjBpB,UAAU,EAAE6D,KAAK,GAAGA,KAAK,CAAC7D,UAAU,GAAG,EAAG;YAC1CH,QAAQ,EAAE,CAACgE,KAAM;YACjB3D,QAAQ,EAAE2D,KAAK,KAAK,IAAK;YACzB5D,cAAc,EAAEoC,aAAa,CAACyF,GAAG,CAAChE,KAAK,CAAE;YACzCiE,OAAO,EAAEA,CAAA,KAAMlB,sBAAsB,CAAC/C,KAAK,CAAE;YAAA2D,QAAA,EAE5C,CAAC5D,KAAK,IAAI1B,SAAS,iBAClB5D,OAAA,CAACoC,OAAO;cAAA8G,QAAA,EACL3D,KAAK,GAAG;YAAC;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACV,GAbI/D,KAAK;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcC,CACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEPtJ,OAAA,CAACM,YAAY;QAAA4I,QAAA,gBACXlJ,OAAA,CAACS,IAAI;UAAAyI,QAAA,gBACHlJ,OAAA,CAACW,SAAS;YAAAuI,QAAA,gBACRlJ,OAAA;cAAAkJ,QAAA,EAAM;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,yFAEjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACZtJ,OAAA,CAACqB,KAAK;YAACL,IAAI,EAAE6B,UAAW;YAACvB,QAAQ,EAAE,KAAM;YAAA4H,QAAA,EACtC/F,MAAM,CAACkC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,iBACjCtF,OAAA,CAACwB,WAAW;cAEVL,KAAK,EAAEA,KAAM;cACbH,IAAI,EAAE6B,UAAW;cACjBpB,UAAU,EAAE6D,KAAK,CAAC7D,UAAW;cAC7B+H,OAAO,EAAEA,CAAA,KAAMnB,sBAAsB,CAAC9C,KAAK,CAAE;cAC7C3D,UAAU,EAAEoC,YAAY,KAAKuB,KAAM;cAAA2D,QAAA,EAElCtF,SAAS,iBACR5D,OAAA,CAACsC,WAAW;gBAAA4G,QAAA,EACTT,QAAQ,CAACnD,KAAK,CAACR,EAAE,CAAC,GAAG;cAAC;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ;YACd,GAXIhE,KAAK,CAACR,EAAE;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYF,CACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEPtJ,OAAA,CAAC0C,iBAAiB;UAAAwG,QAAA,gBAChBlJ,OAAA;YAAAkJ,QAAA,EAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,0TAEjB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAEpBtJ,OAAA,CAACS,IAAI;UAAAyI,QAAA,gBACHlJ,OAAA,CAACW,SAAS;YAAAuI,QAAA,gBACRlJ,OAAA;cAAAkJ,QAAA,EAAM;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,+FAElB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACZtJ,OAAA,CAACc,cAAc;YAACE,IAAI,EAAE6B,UAAW;YAAAqG,QAAA,eAC/BlJ,OAAA,CAACkB,aAAa;cACZC,KAAK,EAAEA,KAAM;cACbH,IAAI,EAAE6B;YAAW;cAAAsG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACY,CAAC,eACjBtJ,OAAA,CAAC8B,gBAAgB;YAAAoH,QAAA,gBACflJ,OAAA,CAACgC,MAAM;cAACE,OAAO,EAAC,SAAS;cAACsH,OAAO,EAAET,WAAY;cAAAG,QAAA,EAC5CtF,SAAS,GAAG,uBAAuB,GAAG;YAAwB;cAAAuF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD,CAAC,eACTtJ,OAAA,CAACgC,MAAM;cAACwH,OAAO,EAAExG,YAAa;cAAAkG,QAAA,EAAC;YAE/B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAEZtF,YAAY,KAAK,IAAI,IAAIb,MAAM,CAACa,YAAY,CAAC,iBAC5ChE,OAAA,CAACwC,YAAY;MACXiH,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGxF,aAAa,CAACE,CAAC,IAAI;QAC5BuF,GAAG,EAAE,GAAGzF,aAAa,CAACG,CAAC,IAAI;QAC3BuF,eAAe,EAAE,OAAOzI,KAAK,GAAG;QAChC0I,cAAc,EAAE,GAAGhH,UAAU,GAAG,GAAG,KAAKA,UAAU,GAAG,GAAG,GAAG;QAC3DiH,kBAAkB,EAAE3G,MAAM,CAACa,YAAY,CAAC,CAACvC;MAC3C;IAAE;MAAA0H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB,CAAC;AAACpG,EAAA,CAnSIN,WAAW;AAAAmH,IAAA,GAAXnH,WAAW;AAqSjB,eAAeA,WAAW;AAAC,IAAAzC,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAM,GAAA,EAAAE,IAAA,EAAAI,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAoH,IAAA;AAAAC,YAAA,CAAA7J,EAAA;AAAA6J,YAAA,CAAA3J,GAAA;AAAA2J,YAAA,CAAAzJ,GAAA;AAAAyJ,YAAA,CAAAtJ,GAAA;AAAAsJ,YAAA,CAAAnJ,GAAA;AAAAmJ,YAAA,CAAA/I,GAAA;AAAA+I,YAAA,CAAA5I,GAAA;AAAA4I,YAAA,CAAAzI,GAAA;AAAAyI,YAAA,CAAAnI,GAAA;AAAAmI,YAAA,CAAAjI,IAAA;AAAAiI,YAAA,CAAA7H,IAAA;AAAA6H,YAAA,CAAA3H,IAAA;AAAA2H,YAAA,CAAAzH,IAAA;AAAAyH,YAAA,CAAAvH,IAAA;AAAAuH,YAAA,CAAArH,IAAA;AAAAqH,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}