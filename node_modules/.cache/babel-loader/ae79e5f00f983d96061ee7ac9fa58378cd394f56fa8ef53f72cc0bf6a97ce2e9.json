{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null\n};\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const saved = localStorage.getItem('gameProgress');\n    return saved ? JSON.parse(saved) : initialGameProgress;\n  });\n  const updatePlayerName = name => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n  const updateGameProgress = (gameType, imageId, progress) => {\n    setGameProgress(prev => {\n      const newProgress = {\n        ...prev\n      };\n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles) {\n            newProgress.puzzles = [];\n          }\n          newProgress.puzzles.push({\n            id: imageId,\n            date: new Date().toISOString(),\n            difficulty: progress.difficulty,\n            errors: progress.errors,\n            totalPieces: progress.difficulty * progress.difficulty,\n            accuracy: calculateAccuracy(progress.difficulty * progress.difficulty, progress.errors)\n          });\n          break;\n        case 'scramble':\n          if (!newProgress.scrambleScores) {\n            newProgress.scrambleScores = {};\n          }\n          newProgress.scrambleScores[imageId] = progress;\n          break;\n        case 'task':\n          if (!newProgress.taskScores) {\n            newProgress.taskScores = {};\n          }\n          newProgress.taskScores[imageId] = progress;\n          break;\n      }\n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n  const calculateAccuracy = (totalPieces, errors) => {\n    const correctFirstTry = totalPieces - errors;\n    return Math.round(correctFirstTry / totalPieces * 100);\n  };\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"rzh//60no4aq8G8WaRPEDU/Xjuo=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n};\n_s2(usePlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","PlayerContext","initialGameProgress","puzzles","completedScrambleTasks","taskScores","completedTasks","scrambleScores","lastPlayed","PlayerProvider","children","_s","playerName","setPlayerName","localStorage","getItem","showNameModal","setShowNameModal","gameProgress","setGameProgress","saved","JSON","parse","updatePlayerName","name","setItem","updateGameProgress","gameType","imageId","progress","prev","newProgress","push","id","date","Date","toISOString","difficulty","errors","totalPieces","accuracy","calculateAccuracy","stringify","correctFirstTry","Math","round","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst PlayerContext = createContext();\n\nconst initialGameProgress = {\n  puzzles: [],\n  completedScrambleTasks: [],\n  taskScores: {},\n  completedTasks: [],\n  scrambleScores: {},\n  lastPlayed: null\n};\n\nexport const PlayerProvider = ({ children }) => {\n  const [playerName, setPlayerName] = useState(localStorage.getItem('playerName') || '');\n  const [showNameModal, setShowNameModal] = useState(!playerName);\n  const [gameProgress, setGameProgress] = useState(() => {\n    const saved = localStorage.getItem('gameProgress');\n    return saved ? JSON.parse(saved) : initialGameProgress;\n  });\n\n  const updatePlayerName = (name) => {\n    setPlayerName(name);\n    localStorage.setItem('playerName', name);\n    setShowNameModal(false);\n  };\n\n  const updateGameProgress = (gameType, imageId, progress) => {\n    setGameProgress(prev => {\n      const newProgress = { ...prev };\n      \n      switch (gameType) {\n        case 'puzzle':\n          if (!newProgress.puzzles) {\n            newProgress.puzzles = [];\n          }\n          newProgress.puzzles.push({\n            id: imageId,\n            date: new Date().toISOString(),\n            difficulty: progress.difficulty,\n            errors: progress.errors,\n            totalPieces: progress.difficulty * progress.difficulty,\n            accuracy: calculateAccuracy(progress.difficulty * progress.difficulty, progress.errors)\n          });\n          break;\n          \n        case 'scramble':\n          if (!newProgress.scrambleScores) {\n            newProgress.scrambleScores = {};\n          }\n          newProgress.scrambleScores[imageId] = progress;\n          break;\n          \n        case 'task':\n          if (!newProgress.taskScores) {\n            newProgress.taskScores = {};\n          }\n          newProgress.taskScores[imageId] = progress;\n          break;\n      }\n      \n      localStorage.setItem('gameProgress', JSON.stringify(newProgress));\n      return newProgress;\n    });\n  };\n\n  const calculateAccuracy = (totalPieces, errors) => {\n    const correctFirstTry = totalPieces - errors;\n    return Math.round((correctFirstTry / totalPieces) * 100);\n  };\n\n  const value = {\n    playerName,\n    showNameModal,\n    gameProgress,\n    updatePlayerName,\n    updateGameProgress\n  };\n\n  return (\n    <PlayerContext.Provider value={value}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport const usePlayer = () => {\n  const context = useContext(PlayerContext);\n  if (!context) {\n    throw new Error('usePlayer must be used within a PlayerProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}