{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { tasks } from '../data/tasks';\nimport { createGlobalStyle } from 'styled-components';\nimport NameModal from './NameModal';\nimport { usePlayer } from '../context/PlayerContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 1rem;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(to bottom, #EBF3FE, #F3EFFE);\n  overflow-y: auto;\n`;\n_c = Container;\nconst TaskCard = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 500px;\n  text-align: center;\n`;\n_c2 = TaskCard;\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  color: #1a237e;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);\n\n  @media (min-width: 640px) {\n    font-size: 1.875rem;\n  }\n`;\n_c3 = Title;\nconst ProgressText = styled.p`\n  color: #666;\n  margin-bottom: 2rem;\n  font-size: 1rem;\n`;\n_c4 = ProgressText;\nconst TaskContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  margin: 2rem 0;\n`;\n_c5 = TaskContent;\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c6 = TaskDescription;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n`;\n_c7 = ButtonsContainer;\nconst Button = styled.button`\n  background: #4CAF50;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: bold;\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: #388E3C;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c8 = Button;\nconst Toast = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(255, 255, 255, 0.95);\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  animation: slideIn 0.3s ease-out forwards;\n  font-size: 1.4rem;\n  color: #2196F3;\n  min-width: 300px;\n  text-align: center;\n\n  @keyframes slideIn {\n    from {\n      transform: translate(-50%, -100%);\n      opacity: 0;\n    }\n    to {\n      transform: translate(-50%, 0);\n      opacity: 1;\n    }\n  }\n`;\n_c9 = Toast;\nconst GlobalStyle = createGlobalStyle`\n  @keyframes celebrate {\n    0% {\n      transform: translate(-50%, -50%) scale(0);\n      opacity: 0;\n    }\n    50% {\n      transform: translate(-50%, -50%) scale(1.5);\n      opacity: 1;\n    }\n    100% {\n      transform: translate(-50%, -50%) scale(1);\n      opacity: 0;\n    }\n  }\n\n  @keyframes float {\n    0% {\n      transform: translateY(0) rotate(0deg);\n      opacity: 1;\n    }\n    100% {\n      transform: translateY(-100vh) rotate(360deg);\n      opacity: 0;\n    }\n  }\n`;\nconst celebrationStickers = ['🌟', '🎉', '🎈', '🎊', '🏆', '⭐', '💫', '✨'];\nconst showCelebration = stickers => {\n  const container = document.createElement('div');\n  container.style.position = 'fixed';\n  container.style.top = '0';\n  container.style.left = '0';\n  container.style.width = '100%';\n  container.style.height = '100%';\n  container.style.pointerEvents = 'none';\n  container.style.zIndex = '1000';\n  document.body.appendChild(container);\n\n  // ცენტრალური სტიკერი\n  const mainSticker = document.createElement('div');\n  mainSticker.style.position = 'fixed';\n  mainSticker.style.fontSize = '100px';\n  mainSticker.style.zIndex = '1000';\n  mainSticker.style.top = '50%';\n  mainSticker.style.left = '50%';\n  mainSticker.style.transform = 'translate(-50%, -50%)';\n  mainSticker.style.animation = 'celebrate 1s ease-out forwards';\n  mainSticker.textContent = stickers[Math.floor(Math.random() * stickers.length)];\n  container.appendChild(mainSticker);\n\n  // მფრინავი სტიკერები\n  for (let i = 0; i < 15; i++) {\n    const sticker = document.createElement('div');\n    sticker.style.position = 'fixed';\n    sticker.style.fontSize = '40px';\n    sticker.style.zIndex = '999';\n    sticker.style.left = Math.random() * 100 + 'vw';\n    sticker.style.top = '100vh';\n    sticker.style.animation = `float ${2 + Math.random() * 2}s linear forwards`;\n    sticker.textContent = stickers[Math.floor(Math.random() * stickers.length)];\n    container.appendChild(sticker);\n  }\n  setTimeout(() => {\n    document.body.removeChild(container);\n  }, 3000);\n};\nconst Tasks = () => {\n  _s();\n  var _player$gameProgress;\n  const {\n    player,\n    updatePlayer\n  } = usePlayer();\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [stickers, setStickers] = useState([]);\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [selectedColors, setSelectedColors] = useState([]);\n  const [feedback, setFeedback] = useState({\n    show: false\n  });\n  const [answers, setAnswers] = useState({});\n  const [isVisible, setIsVisible] = useState(true);\n  const [shuffledItems, setShuffledItems] = useState([]);\n  const [shuffledColors, setShuffledColors] = useState([]);\n  const [toast, setToast] = useState({\n    show: false,\n    message: ''\n  });\n  const [completedTasksCount, setCompletedTasksCount] = useState(0);\n  const navigate = useNavigate();\n  const currentTask = tasks[currentTaskIndex];\n  const totalTasks = tasks.length;\n  const completedTasks = (player === null || player === void 0 ? void 0 : (_player$gameProgress = player.gameProgress) === null || _player$gameProgress === void 0 ? void 0 : _player$gameProgress.completedTasks) || [];\n  useEffect(() => {\n    var _player$gameProgress2;\n    if (player !== null && player !== void 0 && (_player$gameProgress2 = player.gameProgress) !== null && _player$gameProgress2 !== void 0 && _player$gameProgress2.completedTasks) {\n      setCompletedTasksCount(player.gameProgress.completedTasks.length);\n    }\n  }, [player]);\n  const handleSuccess = useCallback(() => {\n    const timestamp = Date.now();\n\n    // Update player progress\n    if (player && updatePlayer) {\n      var _player$gameProgress3, _player$gameProgress4;\n      const updatedPlayer = {\n        ...player,\n        gameProgress: {\n          ...player.gameProgress,\n          completedTasks: [...(((_player$gameProgress3 = player.gameProgress) === null || _player$gameProgress3 === void 0 ? void 0 : _player$gameProgress3.completedTasks) || []), currentTaskIndex],\n          taskScores: {\n            ...(((_player$gameProgress4 = player.gameProgress) === null || _player$gameProgress4 === void 0 ? void 0 : _player$gameProgress4.taskScores) || {}),\n            [currentTaskIndex]: 100\n          },\n          lastPlayedDate: new Date().toISOString()\n        }\n      };\n      updatePlayer(updatedPlayer);\n\n      // Update local state\n      setCompletedTasksCount(prev => prev + 1);\n      setProgress(prev => Math.min(prev + 10, 100));\n\n      // Show success message\n      setToast({\n        show: true,\n        message: 'ყოჩაღ! დავალება შესრულებულია! 🎉'\n      });\n\n      // Clear success message and move to next task\n      setTimeout(() => {\n        setToast({\n          show: false,\n          message: ''\n        });\n        if (currentTaskIndex < tasks.length - 1) {\n          setCurrentTaskIndex(prev => prev + 1);\n        }\n      }, 2000);\n    }\n  }, [currentTaskIndex, player, updatePlayer]);\n  const handlePrevTask = useCallback(() => {\n    if (currentTaskIndex > 0) {\n      setCurrentTaskIndex(currentTaskIndex - 1);\n    }\n  }, [currentTaskIndex]);\n  const handleNextTask = useCallback(() => {\n    setIsVisible(false);\n    setTimeout(() => {\n      const nextIndex = currentTaskIndex + 1;\n      setCurrentTaskIndex(nextIndex);\n      setIsVisible(true);\n    }, 300);\n  }, [currentTaskIndex]);\n  const handleRestart = useCallback(() => {\n    const shouldRestart = window.confirm('ნამდვილად გსურთ თავიდან დაწყება? პროგრესი განულდება.');\n    if (shouldRestart) {\n      updatePlayer({\n        ...player,\n        gameProgress: {\n          completedTasks: [],\n          taskScores: {},\n          lastPlayedDate: null\n        }\n      });\n      setCurrentTaskIndex(0);\n      setSelectedNumbers([]);\n      setSelectedColors([]);\n      setAnswers({});\n      setFeedback({});\n      window.location.reload(); // გვერდის გადატვირთვა პროგრესის განულების შემდეგ\n    }\n  }, [updatePlayer, player]);\n  useEffect(() => {\n    if ((currentTask === null || currentTask === void 0 ? void 0 : currentTask.type) === 'matching') {\n      // შევქმნათ ახალი მასივები შემთხვევითი განლაგებისთვის\n      const shuffleArray = array => {\n        const newArray = [...array];\n        for (let i = newArray.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n        }\n        return newArray;\n      };\n\n      // შევურიოთ ფერები და ვარიანტები\n      if (currentTask.colorOptions) {\n        setShuffledColors(shuffleArray(currentTask.colorOptions));\n      }\n      if (currentTask.items) {\n        setShuffledItems(shuffleArray(currentTask.items));\n      }\n    }\n  }, [currentTask]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: player !== null && player !== void 0 && player.playerName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TaskCard, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), \" \\u10E1\\u10D0\\u10E1\\u10EC\\u10D0\\u10D5\\u10DA\\u10DD \\u10D3\\u10D0\\u10D5\\u10D0\\u10DA\\u10D4\\u10D1\\u10D4\\u10D1\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProgressText, {\n          children: [\"\\u10E8\\u10D4\\u10E1\\u10E0\\u10E3\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\\u10D0: \", completedTasksCount, \" / \", totalTasks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), currentTask && /*#__PURE__*/_jsxDEV(TaskContent, {\n          children: /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: currentTask.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handlePrevTask(),\n            disabled: currentTaskIndex === 0,\n            children: \"\\u10EC\\u10D8\\u10DC\\u10D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleNextTask(),\n            disabled: currentTaskIndex === tasks.length - 1,\n            children: \"\\u10E8\\u10D4\\u10DB\\u10D3\\u10D4\\u10D2\\u10D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), toast.show && /*#__PURE__*/_jsxDEV(Toast, {\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"buiNeV4CWQ2f+5Nf4n/9UnjBuqI=\", false, function () {\n  return [usePlayer, useNavigate];\n});\n_c10 = Tasks;\nexport default _c11 = /*#__PURE__*/React.memo(Tasks);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TaskCard\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"ProgressText\");\n$RefreshReg$(_c5, \"TaskContent\");\n$RefreshReg$(_c6, \"TaskDescription\");\n$RefreshReg$(_c7, \"ButtonsContainer\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"Toast\");\n$RefreshReg$(_c10, \"Tasks\");\n$RefreshReg$(_c11, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","styled","tasks","createGlobalStyle","NameModal","usePlayer","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","TaskCard","_c2","Title","h1","_c3","ProgressText","p","_c4","TaskContent","_c5","TaskDescription","_c6","ButtonsContainer","_c7","Button","button","_c8","Toast","_c9","GlobalStyle","celebrationStickers","showCelebration","stickers","container","document","createElement","style","position","top","left","width","height","pointerEvents","zIndex","body","appendChild","mainSticker","fontSize","transform","animation","textContent","Math","floor","random","length","i","sticker","setTimeout","removeChild","Tasks","_s","_player$gameProgress","player","updatePlayer","currentTaskIndex","setCurrentTaskIndex","progress","setProgress","selectedItems","setSelectedItems","matchedPairs","setMatchedPairs","answer","setAnswer","showSuccess","setShowSuccess","setStickers","selectedNumbers","setSelectedNumbers","selectedColors","setSelectedColors","feedback","setFeedback","show","answers","setAnswers","isVisible","setIsVisible","shuffledItems","setShuffledItems","shuffledColors","setShuffledColors","toast","setToast","message","completedTasksCount","setCompletedTasksCount","navigate","currentTask","totalTasks","completedTasks","gameProgress","_player$gameProgress2","handleSuccess","timestamp","Date","now","_player$gameProgress3","_player$gameProgress4","updatedPlayer","taskScores","lastPlayedDate","toISOString","prev","min","handlePrevTask","handleNextTask","nextIndex","handleRestart","shouldRestart","window","confirm","location","reload","type","shuffleArray","array","newArray","j","colorOptions","items","children","playerName","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","disabled","_c10","_c11","memo","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/Tasks.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { tasks } from '../data/tasks';\nimport { createGlobalStyle } from 'styled-components';\nimport NameModal from './NameModal';\nimport { usePlayer } from '../context/PlayerContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 1rem;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(to bottom, #EBF3FE, #F3EFFE);\n  overflow-y: auto;\n`;\n\nconst TaskCard = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 500px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  color: #1a237e;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);\n\n  @media (min-width: 640px) {\n    font-size: 1.875rem;\n  }\n`;\n\nconst ProgressText = styled.p`\n  color: #666;\n  margin-bottom: 2rem;\n  font-size: 1rem;\n`;\n\nconst TaskContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  margin: 2rem 0;\n`;\n\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n`;\n\nconst Button = styled.button`\n  background: #4CAF50;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: bold;\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: #388E3C;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Toast = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(255, 255, 255, 0.95);\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  animation: slideIn 0.3s ease-out forwards;\n  font-size: 1.4rem;\n  color: #2196F3;\n  min-width: 300px;\n  text-align: center;\n\n  @keyframes slideIn {\n    from {\n      transform: translate(-50%, -100%);\n      opacity: 0;\n    }\n    to {\n      transform: translate(-50%, 0);\n      opacity: 1;\n    }\n  }\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  @keyframes celebrate {\n    0% {\n      transform: translate(-50%, -50%) scale(0);\n      opacity: 0;\n    }\n    50% {\n      transform: translate(-50%, -50%) scale(1.5);\n      opacity: 1;\n    }\n    100% {\n      transform: translate(-50%, -50%) scale(1);\n      opacity: 0;\n    }\n  }\n\n  @keyframes float {\n    0% {\n      transform: translateY(0) rotate(0deg);\n      opacity: 1;\n    }\n    100% {\n      transform: translateY(-100vh) rotate(360deg);\n      opacity: 0;\n    }\n  }\n`;\n\nconst celebrationStickers = ['🌟', '🎉', '🎈', '🎊', '🏆', '⭐', '💫', '✨'];\n\nconst showCelebration = (stickers) => {\n  const container = document.createElement('div');\n  container.style.position = 'fixed';\n  container.style.top = '0';\n  container.style.left = '0';\n  container.style.width = '100%';\n  container.style.height = '100%';\n  container.style.pointerEvents = 'none';\n  container.style.zIndex = '1000';\n  document.body.appendChild(container);\n\n  // ცენტრალური სტიკერი\n  const mainSticker = document.createElement('div');\n  mainSticker.style.position = 'fixed';\n  mainSticker.style.fontSize = '100px';\n  mainSticker.style.zIndex = '1000';\n  mainSticker.style.top = '50%';\n  mainSticker.style.left = '50%';\n  mainSticker.style.transform = 'translate(-50%, -50%)';\n  mainSticker.style.animation = 'celebrate 1s ease-out forwards';\n  mainSticker.textContent = stickers[Math.floor(Math.random() * stickers.length)];\n  container.appendChild(mainSticker);\n\n  // მფრინავი სტიკერები\n  for (let i = 0; i < 15; i++) {\n    const sticker = document.createElement('div');\n    sticker.style.position = 'fixed';\n    sticker.style.fontSize = '40px';\n    sticker.style.zIndex = '999';\n    sticker.style.left = Math.random() * 100 + 'vw';\n    sticker.style.top = '100vh';\n    sticker.style.animation = `float ${2 + Math.random() * 2}s linear forwards`;\n    sticker.textContent = stickers[Math.floor(Math.random() * stickers.length)];\n    container.appendChild(sticker);\n  }\n\n  setTimeout(() => {\n    document.body.removeChild(container);\n  }, 3000);\n};\n\nconst Tasks = () => {\n  const { player, updatePlayer } = usePlayer();\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [stickers, setStickers] = useState([]);\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [selectedColors, setSelectedColors] = useState([]);\n  const [feedback, setFeedback] = useState({ show: false });\n  const [answers, setAnswers] = useState({});\n  const [isVisible, setIsVisible] = useState(true);\n  const [shuffledItems, setShuffledItems] = useState([]);\n  const [shuffledColors, setShuffledColors] = useState([]);\n  const [toast, setToast] = useState({ show: false, message: '' });\n  const [completedTasksCount, setCompletedTasksCount] = useState(0);\n  const navigate = useNavigate();\n\n  const currentTask = tasks[currentTaskIndex];\n  const totalTasks = tasks.length;\n  const completedTasks = player?.gameProgress?.completedTasks || [];\n\n  useEffect(() => {\n    if (player?.gameProgress?.completedTasks) {\n      setCompletedTasksCount(player.gameProgress.completedTasks.length);\n    }\n  }, [player]);\n\n  const handleSuccess = useCallback(() => {\n    const timestamp = Date.now();\n    \n    // Update player progress\n    if (player && updatePlayer) {\n      const updatedPlayer = {\n        ...player,\n        gameProgress: {\n          ...player.gameProgress,\n          completedTasks: [...(player.gameProgress?.completedTasks || []), currentTaskIndex],\n          taskScores: {\n            ...(player.gameProgress?.taskScores || {}),\n            [currentTaskIndex]: 100\n          },\n          lastPlayedDate: new Date().toISOString()\n        }\n      };\n      \n      updatePlayer(updatedPlayer);\n      \n      // Update local state\n      setCompletedTasksCount(prev => prev + 1);\n      setProgress(prev => Math.min(prev + 10, 100));\n      \n      // Show success message\n      setToast({\n        show: true,\n        message: 'ყოჩაღ! დავალება შესრულებულია! 🎉'\n      });\n\n      // Clear success message and move to next task\n      setTimeout(() => {\n        setToast({ show: false, message: '' });\n        if (currentTaskIndex < tasks.length - 1) {\n          setCurrentTaskIndex(prev => prev + 1);\n        }\n      }, 2000);\n    }\n  }, [currentTaskIndex, player, updatePlayer]);\n\n  const handlePrevTask = useCallback(() => {\n    if (currentTaskIndex > 0) {\n      setCurrentTaskIndex(currentTaskIndex - 1);\n    }\n  }, [currentTaskIndex]);\n\n  const handleNextTask = useCallback(() => {\n    setIsVisible(false);\n    setTimeout(() => {\n      const nextIndex = currentTaskIndex + 1;\n      setCurrentTaskIndex(nextIndex);\n      setIsVisible(true);\n    }, 300);\n  }, [currentTaskIndex]);\n\n  const handleRestart = useCallback(() => {\n    const shouldRestart = window.confirm('ნამდვილად გსურთ თავიდან დაწყება? პროგრესი განულდება.');\n    if (shouldRestart) {\n      updatePlayer({\n        ...player,\n        gameProgress: {\n          completedTasks: [],\n          taskScores: {},\n          lastPlayedDate: null\n        }\n      });\n      setCurrentTaskIndex(0);\n      setSelectedNumbers([]);\n      setSelectedColors([]);\n      setAnswers({});\n      setFeedback({});\n      window.location.reload(); // გვერდის გადატვირთვა პროგრესის განულების შემდეგ\n    }\n  }, [updatePlayer, player]);\n\n  useEffect(() => {\n    if (currentTask?.type === 'matching') {\n      // შევქმნათ ახალი მასივები შემთხვევითი განლაგებისთვის\n      const shuffleArray = (array) => {\n        const newArray = [...array];\n        for (let i = newArray.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n        }\n        return newArray;\n      };\n\n      // შევურიოთ ფერები და ვარიანტები\n      if (currentTask.colorOptions) {\n        setShuffledColors(shuffleArray(currentTask.colorOptions));\n      }\n      if (currentTask.items) {\n        setShuffledItems(shuffleArray(currentTask.items));\n      }\n    }\n  }, [currentTask]);\n\n  return (\n    <Container>\n      {player?.playerName ? (\n        <>\n          <TaskCard>\n            <Title>\n              <span>📚</span> სასწავლო დავალებები\n            </Title>\n            <ProgressText>შესრულებულია: {completedTasksCount} / {totalTasks}</ProgressText>\n            \n            {currentTask && (\n              <TaskContent>\n                <TaskDescription>{currentTask.description}</TaskDescription>\n                {/* Task content rendering */}\n              </TaskContent>\n            )}\n\n            <ButtonsContainer>\n              <Button \n                onClick={() => handlePrevTask()}\n                disabled={currentTaskIndex === 0}\n              >\n                წინა\n              </Button>\n              <Button \n                onClick={() => handleNextTask()}\n                disabled={currentTaskIndex === tasks.length - 1}\n              >\n                შემდეგი\n              </Button>\n            </ButtonsContainer>\n          </TaskCard>\n\n          {toast.show && (\n            <Toast>\n              {toast.message}\n            </Toast>\n          )}\n        </>\n      ) : (\n        <NameModal />\n      )}\n    </Container>\n  );\n};\n\nexport default React.memo(Tasks);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}