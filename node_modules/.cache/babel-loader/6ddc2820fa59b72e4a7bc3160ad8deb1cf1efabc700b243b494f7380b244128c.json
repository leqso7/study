{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osqel\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PuzzleBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n_c = GameContainer;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n_c2 = TopSection;\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c3 = RightSection;\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n_c4 = Card;\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n_c5 = CardTitle;\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n`;\n_c6 = ImageContainer;\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: center;\n`;\n_c7 = OriginalImage;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n_c8 = Board;\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n  if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n  return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n}};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c9 = PuzzlePiece;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c10 = ButtonsContainer;\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c11 = Button;\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n_c12 = Message;\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n_c13 = HintOverlay;\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n_c14 = DraggedPiece;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n  backdrop-filter: blur(5px);\n`;\n_c15 = LoadingOverlay;\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #2196F3;\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n`;\n_c16 = LoadingSpinner;\nconst PuzzleBoard = ({\n  image,\n  difficulty,\n  onProgress,\n  onComplete,\n  onBackToMenu,\n  onImageChange\n}) => {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n    return pieces;\n  }, [difficulty]);\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      try {\n        const totalPieces = difficulty * difficulty;\n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n        const shuffledPieces = [...initialPieces].sort(() => Math.random() - 0.5).map((piece, index) => ({\n          ...piece,\n          currentPos: index\n        }));\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (draggedPiece !== null) {\n        setMousePosition({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n  useEffect(() => {\n    const handlePaste = async event => {\n      var _event$clipboardData, _event$clipboardData2;\n      const items = (_event$clipboardData = event.clipboardData) === null || _event$clipboardData === void 0 ? void 0 : _event$clipboardData.items;\n      const text = (_event$clipboardData2 = event.clipboardData) === null || _event$clipboardData2 === void 0 ? void 0 : _event$clipboardData2.getData('text');\n\n      // Check if pasted content is an image URL\n      if (text && (text.startsWith('http://') || text.startsWith('https://'))) {\n        try {\n          // Check if URL is an image by trying to load it\n          const img = new Image();\n          img.crossOrigin = \"Anonymous\";\n          img.onload = () => {\n            // Create canvas to convert image to data URL\n            const canvas = document.createElement('canvas');\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            const dataUrl = canvas.toDataURL('image/jpeg');\n            onImageChange(dataUrl);\n          };\n          img.onerror = () => {\n            console.error('Failed to load image from URL');\n          };\n          img.src = text;\n          return;\n        } catch (error) {\n          console.error('Error loading image from URL:', error);\n        }\n      }\n\n      // Handle direct image paste\n      if (!items) return;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const blob = items[i].getAsFile();\n          const reader = new FileReader();\n          reader.onload = e => {\n            onImageChange(e.target.result);\n          };\n          reader.readAsDataURL(blob);\n          break;\n        }\n      }\n    };\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, [onImageChange]);\n  const handleSourcePieceClick = index => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n  const handleTargetPieceClick = targetIndex => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async clipboardItems => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = e => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch(err => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n  useEffect(() => {\n    const progress = correctPositions.size / (difficulty * difficulty) * 100;\n    onProgress(Math.round(progress));\n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TopSection, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFAE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), \"\\u10D0\\u10E5 \\u10D0\\u10D0\\u10EC\\u10E7\\u10D5\\u10D4 \\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Board, {\n            size: difficulty,\n            isTarget: true,\n            children: targetBoard.map((piece, index) => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n              image: piece ? image : null,\n              size: difficulty,\n              bgPosition: piece ? piece.bgPosition : '',\n              isTarget: !piece,\n              isPlaced: piece !== null,\n              isWrongAttempt: wrongAttempts.has(index),\n              onClick: () => handleTargetPieceClick(index),\n              children: !piece && showHints && /*#__PURE__*/_jsxDEV(Message, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n            children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightSection, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83E\\uDDE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), \"\\u10DE\\u10D0\\u10D6\\u10DA\\u10D8\\u10E1 \\u10DC\\u10D0\\u10EC\\u10D8\\u10DA\\u10D4\\u10D1\\u10D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Board, {\n              size: difficulty,\n              isTarget: false,\n              children: pieces.map((piece, index) => piece && /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n                image: image,\n                size: difficulty,\n                bgPosition: piece.bgPosition,\n                onClick: () => handleSourcePieceClick(index),\n                isDragging: draggedPiece === index,\n                children: showHints && /*#__PURE__*/_jsxDEV(HintOverlay, {\n                  children: parseInt(piece.id) + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 23\n                }, this)\n              }, piece.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n              children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDDBC\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), \"\\u10DD\\u10E0\\u10D8\\u10D2\\u10D8\\u10DC\\u10D0\\u10DA\\u10D8 \\u10E1\\u10E3\\u10E0\\u10D0\\u10D7\\u10D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n            size: difficulty,\n            children: /*#__PURE__*/_jsxDEV(OriginalImage, {\n              image: image,\n              size: difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: toggleHints,\n              children: showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onBackToMenu,\n              children: \"\\uD83C\\uDFE0 \\u10DB\\u10D7\\u10D0\\u10D5\\u10D0\\u10E0 \\u10DB\\u10D4\\u10DC\\u10D8\\u10E3\\u10E8\\u10D8 \\u10D3\\u10D0\\u10D1\\u10E0\\u10E3\\u10DC\\u10D4\\u10D1\\u10D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), draggedPiece !== null && pieces[draggedPiece] && /*#__PURE__*/_jsxDEV(DraggedPiece, {\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n        backgroundPosition: pieces[draggedPiece].bgPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleBoard, \"KIWznz1ducYnYDv8lS9KjS61eqo=\");\n_c17 = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"TopSection\");\n$RefreshReg$(_c3, \"RightSection\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"ImageContainer\");\n$RefreshReg$(_c7, \"OriginalImage\");\n$RefreshReg$(_c8, \"Board\");\n$RefreshReg$(_c9, \"PuzzlePiece\");\n$RefreshReg$(_c10, \"ButtonsContainer\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"Message\");\n$RefreshReg$(_c13, \"HintOverlay\");\n$RefreshReg$(_c14, \"DraggedPiece\");\n$RefreshReg$(_c15, \"LoadingOverlay\");\n$RefreshReg$(_c16, \"LoadingSpinner\");\n$RefreshReg$(_c17, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","keyframes","jsxDEV","_jsxDEV","GameContainer","div","_c","TopSection","_c2","RightSection","_c3","BottomSection","Card","_c4","CardTitle","h3","_c5","ImageContainer","props","size","_c6","OriginalImage","image","_c7","Board","isTarget","_c8","PuzzlePiece","bgPosition","isWrongAttempt","isPlaced","isDragging","_c9","ButtonsContainer","_c10","Button","button","variant","_c11","Message","_c12","HintOverlay","_c13","DraggedPiece","_c14","spin","LoadingOverlay","_c15","LoadingSpinner","_c16","PuzzleBoard","difficulty","onProgress","onComplete","onBackToMenu","onImageChange","_s","pieces","setPieces","selectedPiece","setSelectedPiece","targetBoard","setTargetBoard","correctPositions","setCorrectPositions","Set","showHints","setShowHints","wrongAttempts","setWrongAttempts","draggedPiece","setDraggedPiece","mousePosition","setMousePosition","x","y","isLoading","setIsLoading","initialPieces","totalPieces","pieceSize","i","j","push","id","correctIndex","initializePuzzle","console","error","Promise","resolve","setTimeout","shuffledPieces","sort","Math","random","map","piece","index","currentPos","initialTargetBoard","Array","fill","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","handlePaste","event","_event$clipboardData","_event$clipboardData2","items","clipboardData","text","getData","startsWith","img","Image","crossOrigin","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","dataUrl","toDataURL","onerror","src","length","type","indexOf","blob","getAsFile","reader","FileReader","target","result","readAsDataURL","handleSourcePieceClick","handleTargetPieceClick","targetIndex","selectedPieceData","parseInt","newTargetBoard","newPieces","newCorrectPositions","add","newWrongAttempts","toggleHints","handlePasteClick","navigator","clipboard","read","then","clipboardItems","clipboardItem","types","getType","catch","err","progress","round","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","has","onClick","left","top","backgroundImage","backgroundSize","backgroundPosition","_c17","$RefreshReg$"],"sources":["C:/Users/osqel/OneDrive/Desktop/New folder/src/components/PuzzleBoard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-height: calc(100vh - 200px);\n`;\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst BottomSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 1rem;\n  height: fit-content;\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #2196F3;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: calc((100% - ${props => (props.size - 1) * 2}px) / ${props => props.size});\n  aspect-ratio: 1;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  margin: 0 auto;\n`;\n\nconst OriginalImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: center;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  gap: 2px;\n  background-color: ${props => props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent'};\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  border: 2px dashed ${props => props.isTarget ? 'rgba(33, 150, 243, 0.2)' : 'transparent'};\n  aspect-ratio: 1;\n`;\n\nconst PuzzlePiece = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.image ? `url(${props.image})` : 'none'};\n  background-size: ${props => props.size * 100}% ${props => props.size * 100}%;\n  background-position: ${props => props.bgPosition};\n  border: 2px solid ${props => props.isWrongAttempt ? '#ff4444' : props.isTarget ? 'transparent' : '#e0e0e0'};\n  cursor: ${props => props.isPlaced ? 'default' : 'pointer'};\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    if (props.isWrongAttempt) return 'rgba(255, 68, 68, 0.1)';\n    return props.isTarget ? 'rgba(245, 245, 245, 0.5)' : 'transparent';\n  }};\n  background-repeat: no-repeat;\n  position: relative;\n  opacity: ${props => props.isDragging ? 0 : 1};\n  transform: scale(${props => props.isDragging ? 0.8 : 1});\n  border-radius: 0.25rem;\n  \n  &:hover {\n    transform: ${props => props.isPlaced || props.isDragging ? 'none' : 'scale(1.05)'};\n    z-index: 1;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? '#2196F3' : '#4CAF50'};\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.variant === 'primary' ? '#1976D2' : '#388E3C'};\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Message = styled.div`\n  color: #666;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(33, 150, 243, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  pointer-events: none;\n  z-index: 2;\n`;\n\nconst DraggedPiece = styled.div`\n  position: fixed;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n  z-index: 1000;\n  border: 2px solid #2196F3;\n  background-repeat: no-repeat;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n  backdrop-filter: blur(5px);\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #2196F3;\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst PuzzleBoard = ({ image, difficulty, onProgress, onComplete, onBackToMenu, onImageChange }) => {\n  const [pieces, setPieces] = useState([]);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [targetBoard, setTargetBoard] = useState([]);\n  const [correctPositions, setCorrectPositions] = useState(new Set());\n  const [showHints, setShowHints] = useState(false);\n  const [wrongAttempts, setWrongAttempts] = useState(new Set());\n  const [draggedPiece, setDraggedPiece] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Memoize the initial pieces calculation\n  const initialPieces = useMemo(() => {\n    const totalPieces = difficulty * difficulty;\n    const pieceSize = 400 / difficulty;\n    const pieces = [];\n\n    for (let i = 0; i < difficulty; i++) {\n      for (let j = 0; j < difficulty; j++) {\n        pieces.push({\n          id: i * difficulty + j,\n          bgPosition: `${j * (100 / (difficulty - 1))}% ${i * (100 / (difficulty - 1))}%`,\n          correctIndex: i * difficulty + j\n        });\n      }\n    }\n\n    return pieces;\n  }, [difficulty]);\n\n  useEffect(() => {\n    const initializePuzzle = async () => {\n      setIsLoading(true);\n      \n      try {\n        const totalPieces = difficulty * difficulty;\n        \n        if (!difficulty || difficulty <= 0) {\n          console.error('Invalid difficulty value:', difficulty);\n          return;\n        }\n\n        // Use setTimeout to allow the loading indicator to render\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        const shuffledPieces = [...initialPieces]\n          .sort(() => Math.random() - 0.5)\n          .map((piece, index) => ({\n            ...piece,\n            currentPos: index\n          }));\n\n        const initialTargetBoard = Array(totalPieces).fill(null);\n        \n        setPieces(shuffledPieces);\n        setTargetBoard(initialTargetBoard);\n        setCorrectPositions(new Set());\n        setSelectedPiece(null);\n        setWrongAttempts(new Set());\n        setDraggedPiece(null);\n      } catch (error) {\n        console.error('Error initializing puzzle pieces:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializePuzzle();\n  }, [image, difficulty, initialPieces]);\n\n  useEffect(() => {\n    setShowHints(false);\n  }, [difficulty]);\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (draggedPiece !== null) {\n        setMousePosition({ x: e.clientX, y: e.clientY });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece]);\n\n  useEffect(() => {\n    const handlePaste = async (event) => {\n      const items = event.clipboardData?.items;\n      const text = event.clipboardData?.getData('text');\n      \n      // Check if pasted content is an image URL\n      if (text && (text.startsWith('http://') || text.startsWith('https://'))) {\n        try {\n          // Check if URL is an image by trying to load it\n          const img = new Image();\n          img.crossOrigin = \"Anonymous\";\n          img.onload = () => {\n            // Create canvas to convert image to data URL\n            const canvas = document.createElement('canvas');\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            const dataUrl = canvas.toDataURL('image/jpeg');\n            onImageChange(dataUrl);\n          };\n          img.onerror = () => {\n            console.error('Failed to load image from URL');\n          };\n          img.src = text;\n          return;\n        } catch (error) {\n          console.error('Error loading image from URL:', error);\n        }\n      }\n      \n      // Handle direct image paste\n      if (!items) return;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          const blob = items[i].getAsFile();\n          const reader = new FileReader();\n          \n          reader.onload = (e) => {\n            onImageChange(e.target.result);\n          };\n          \n          reader.readAsDataURL(blob);\n          break;\n        }\n      }\n    };\n\n    window.addEventListener('paste', handlePaste);\n    return () => window.removeEventListener('paste', handlePaste);\n  }, [onImageChange]);\n\n  const handleSourcePieceClick = (index) => {\n    if (index < 0 || index >= pieces.length || !pieces[index]) {\n      console.error('Invalid piece index:', index);\n      return;\n    }\n\n    if (draggedPiece === index) {\n      setDraggedPiece(null);\n    } else {\n      setDraggedPiece(index);\n      setWrongAttempts(new Set());\n    }\n    setSelectedPiece(index);\n  };\n\n  const handleTargetPieceClick = (targetIndex) => {\n    if (draggedPiece === null || targetIndex < 0 || targetIndex >= targetBoard.length) {\n      return;\n    }\n\n    if (targetBoard[targetIndex] !== null) {\n      return;\n    }\n\n    const selectedPieceData = pieces[draggedPiece];\n    if (!selectedPieceData) {\n      console.error('Selected piece data is invalid');\n      return;\n    }\n\n    if (parseInt(selectedPieceData.id) === targetIndex) {\n      const newTargetBoard = [...targetBoard];\n      newTargetBoard[targetIndex] = selectedPieceData;\n      setTargetBoard(newTargetBoard);\n\n      const newPieces = [...pieces];\n      newPieces[draggedPiece] = null;\n      setPieces(newPieces);\n\n      const newCorrectPositions = new Set(correctPositions);\n      newCorrectPositions.add(targetIndex);\n      setCorrectPositions(newCorrectPositions);\n    } else {\n      const newWrongAttempts = new Set(wrongAttempts);\n      newWrongAttempts.add(targetIndex);\n      setWrongAttempts(newWrongAttempts);\n    }\n\n    setDraggedPiece(null);\n    setSelectedPiece(null);\n  };\n\n  const toggleHints = () => {\n    setShowHints(!showHints);\n  };\n\n  const handlePasteClick = () => {\n    navigator.clipboard.read().then(async (clipboardItems) => {\n      for (const clipboardItem of clipboardItems) {\n        for (const type of clipboardItem.types) {\n          if (type.startsWith('image/')) {\n            const blob = await clipboardItem.getType(type);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              onImageChange(e.target.result);\n            };\n            reader.readAsDataURL(blob);\n            return;\n          }\n        }\n      }\n    }).catch((err) => {\n      console.error('Failed to read clipboard:', err);\n    });\n  };\n\n  useEffect(() => {\n    const progress = (correctPositions.size / (difficulty * difficulty)) * 100;\n    onProgress(Math.round(progress));\n    \n    if (correctPositions.size === difficulty * difficulty) {\n      onComplete();\n    }\n  }, [correctPositions, difficulty, onComplete, onProgress]);\n\n  return (\n    <GameContainer>\n      <TopSection>\n        <Card>\n          <CardTitle>\n            <span>🎮</span>\n            აქ ააწყვე პაზლი\n          </CardTitle>\n          <div style={{ position: 'relative' }}>\n            <Board size={difficulty} isTarget={true}>\n              {targetBoard.map((piece, index) => (\n                <PuzzlePiece\n                  key={index}\n                  image={piece ? image : null}\n                  size={difficulty}\n                  bgPosition={piece ? piece.bgPosition : ''}\n                  isTarget={!piece}\n                  isPlaced={piece !== null}\n                  isWrongAttempt={wrongAttempts.has(index)}\n                  onClick={() => handleTargetPieceClick(index)}\n                >\n                  {!piece && showHints && (\n                    <Message>\n                      {index + 1}\n                    </Message>\n                  )}\n                </PuzzlePiece>\n              ))}\n            </Board>\n            {isLoading && (\n              <LoadingOverlay>\n                <LoadingSpinner />\n              </LoadingOverlay>\n            )}\n          </div>\n        </Card>\n\n        <RightSection>\n          <Card>\n            <CardTitle>\n              <span>🧩</span>\n              პაზლის ნაწილები\n            </CardTitle>\n            <div style={{ position: 'relative' }}>\n              <Board size={difficulty} isTarget={false}>\n                {pieces.map((piece, index) => piece && (\n                  <PuzzlePiece\n                    key={piece.id}\n                    image={image}\n                    size={difficulty}\n                    bgPosition={piece.bgPosition}\n                    onClick={() => handleSourcePieceClick(index)}\n                    isDragging={draggedPiece === index}\n                  >\n                    {showHints && (\n                      <HintOverlay>\n                        {parseInt(piece.id) + 1}\n                      </HintOverlay>\n                    )}\n                  </PuzzlePiece>\n                ))}\n              </Board>\n              {isLoading && (\n                <LoadingOverlay>\n                  <LoadingSpinner />\n                </LoadingOverlay>\n              )}\n            </div>\n          </Card>\n\n          <Card>\n            <CardTitle>\n              <span>🖼️</span>\n              ორიგინალი სურათი\n            </CardTitle>\n            <ImageContainer size={difficulty}>\n              <OriginalImage \n                image={image} \n                size={difficulty}\n              />\n            </ImageContainer>\n            <ButtonsContainer>\n              <Button variant=\"primary\" onClick={toggleHints}>\n                {showHints ? '🔍 დამალე მინიშნებები' : '💡 მაჩვენე მინიშნებები'}\n              </Button>\n              <Button onClick={onBackToMenu}>\n                🏠 მთავარ მენიუში დაბრუნება\n              </Button>\n            </ButtonsContainer>\n          </Card>\n        </RightSection>\n      </TopSection>\n\n      {draggedPiece !== null && pieces[draggedPiece] && (\n        <DraggedPiece\n          style={{\n            left: `${mousePosition.x}px`,\n            top: `${mousePosition.y}px`,\n            backgroundImage: `url(${image})`,\n            backgroundSize: `${difficulty * 100}% ${difficulty * 100}%`,\n            backgroundPosition: pieces[draggedPiece].bgPosition\n          }}\n        />\n      )}\n    </GameContainer>\n  );\n};\n\nexport default PuzzleBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}